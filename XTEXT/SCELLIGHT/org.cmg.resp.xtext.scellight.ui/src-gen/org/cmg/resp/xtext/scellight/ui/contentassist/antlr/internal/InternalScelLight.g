/*
* generated by Xtext
*/
grammar InternalScelLight;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package org.cmg.resp.xtext.scellight.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.cmg.resp.xtext.scellight.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.cmg.resp.xtext.scellight.services.ScelLightGrammarAccess;

}

@parser::members {
 
 	private ScelLightGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(ScelLightGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getAlternatives()); }
(rule__Model__Alternatives)*
{ after(grammarAccess.getModelAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttributeDeclaration
entryRuleAttributeDeclaration 
:
{ before(grammarAccess.getAttributeDeclarationRule()); }
	 ruleAttributeDeclaration
{ after(grammarAccess.getAttributeDeclarationRule()); } 
	 EOF 
;

// Rule AttributeDeclaration
ruleAttributeDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeDeclarationAccess().getGroup()); }
(rule__AttributeDeclaration__Group__0)
{ after(grammarAccess.getAttributeDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProjectionDeclaration
entryRuleProjectionDeclaration 
:
{ before(grammarAccess.getProjectionDeclarationRule()); }
	 ruleProjectionDeclaration
{ after(grammarAccess.getProjectionDeclarationRule()); } 
	 EOF 
;

// Rule ProjectionDeclaration
ruleProjectionDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProjectionDeclarationAccess().getGroup()); }
(rule__ProjectionDeclaration__Group__0)
{ after(grammarAccess.getProjectionDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProjectionExpression
entryRuleProjectionExpression 
:
{ before(grammarAccess.getProjectionExpressionRule()); }
	 ruleProjectionExpression
{ after(grammarAccess.getProjectionExpressionRule()); } 
	 EOF 
;

// Rule ProjectionExpression
ruleProjectionExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProjectionExpressionAccess().getGroup()); }
(rule__ProjectionExpression__Group__0)
{ after(grammarAccess.getProjectionExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstantDeclaration
entryRuleConstantDeclaration 
:
{ before(grammarAccess.getConstantDeclarationRule()); }
	 ruleConstantDeclaration
{ after(grammarAccess.getConstantDeclarationRule()); } 
	 EOF 
;

// Rule ConstantDeclaration
ruleConstantDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstantDeclarationAccess().getGroup()); }
(rule__ConstantDeclaration__Group__0)
{ after(grammarAccess.getConstantDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleComponentDeclaration
entryRuleComponentDeclaration 
:
{ before(grammarAccess.getComponentDeclarationRule()); }
	 ruleComponentDeclaration
{ after(grammarAccess.getComponentDeclarationRule()); } 
	 EOF 
;

// Rule ComponentDeclaration
ruleComponentDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getComponentDeclarationAccess().getGroup()); }
(rule__ComponentDeclaration__Group__0)
{ after(grammarAccess.getComponentDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleComponentExpression
entryRuleComponentExpression 
:
{ before(grammarAccess.getComponentExpressionRule()); }
	 ruleComponentExpression
{ after(grammarAccess.getComponentExpressionRule()); } 
	 EOF 
;

// Rule ComponentExpression
ruleComponentExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getComponentExpressionAccess().getAlternatives()); }
(rule__ComponentExpression__Alternatives)
{ after(grammarAccess.getComponentExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleComponentReference
entryRuleComponentReference 
:
{ before(grammarAccess.getComponentReferenceRule()); }
	 ruleComponentReference
{ after(grammarAccess.getComponentReferenceRule()); } 
	 EOF 
;

// Rule ComponentReference
ruleComponentReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getComponentReferenceAccess().getGroup()); }
(rule__ComponentReference__Group__0)
{ after(grammarAccess.getComponentReferenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleComponentConstant
entryRuleComponentConstant 
:
{ before(grammarAccess.getComponentConstantRule()); }
	 ruleComponentConstant
{ after(grammarAccess.getComponentConstantRule()); } 
	 EOF 
;

// Rule ComponentConstant
ruleComponentConstant
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getComponentConstantAccess().getGroup()); }
(rule__ComponentConstant__Group__0)
{ after(grammarAccess.getComponentConstantAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProcessExpression
entryRuleProcessExpression 
:
{ before(grammarAccess.getProcessExpressionRule()); }
	 ruleProcessExpression
{ after(grammarAccess.getProcessExpressionRule()); } 
	 EOF 
;

// Rule ProcessExpression
ruleProcessExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProcessExpressionAccess().getAlternatives()); }
(rule__ProcessExpression__Alternatives)
{ after(grammarAccess.getProcessExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleKnowledge
entryRuleKnowledge 
:
{ before(grammarAccess.getKnowledgeRule()); }
	 ruleKnowledge
{ after(grammarAccess.getKnowledgeRule()); } 
	 EOF 
;

// Rule Knowledge
ruleKnowledge
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getKnowledgeAccess().getGroup()); }
(rule__Knowledge__Group__0)
{ after(grammarAccess.getKnowledgeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInterface
entryRuleInterface 
:
{ before(grammarAccess.getInterfaceRule()); }
	 ruleInterface
{ after(grammarAccess.getInterfaceRule()); } 
	 EOF 
;

// Rule Interface
ruleInterface
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInterfaceAccess().getGroup()); }
(rule__Interface__Group__0)
{ after(grammarAccess.getInterfaceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIdAttributeDefinition
entryRuleIdAttributeDefinition 
:
{ before(grammarAccess.getIdAttributeDefinitionRule()); }
	 ruleIdAttributeDefinition
{ after(grammarAccess.getIdAttributeDefinitionRule()); } 
	 EOF 
;

// Rule IdAttributeDefinition
ruleIdAttributeDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIdAttributeDefinitionAccess().getGroup()); }
(rule__IdAttributeDefinition__Group__0)
{ after(grammarAccess.getIdAttributeDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttributeInstantiation
entryRuleAttributeInstantiation 
:
{ before(grammarAccess.getAttributeInstantiationRule()); }
	 ruleAttributeInstantiation
{ after(grammarAccess.getAttributeInstantiationRule()); } 
	 EOF 
;

// Rule AttributeInstantiation
ruleAttributeInstantiation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeInstantiationAccess().getGroup()); }
(rule__AttributeInstantiation__Group__0)
{ after(grammarAccess.getAttributeInstantiationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionDeclaration
entryRuleFunctionDeclaration 
:
{ before(grammarAccess.getFunctionDeclarationRule()); }
	 ruleFunctionDeclaration
{ after(grammarAccess.getFunctionDeclarationRule()); } 
	 EOF 
;

// Rule FunctionDeclaration
ruleFunctionDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getGroup()); }
(rule__FunctionDeclaration__Group__0)
{ after(grammarAccess.getFunctionDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProcessDeclaration
entryRuleProcessDeclaration 
:
{ before(grammarAccess.getProcessDeclarationRule()); }
	 ruleProcessDeclaration
{ after(grammarAccess.getProcessDeclarationRule()); } 
	 EOF 
;

// Rule ProcessDeclaration
ruleProcessDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProcessDeclarationAccess().getGroup()); }
(rule__ProcessDeclaration__Group__0)
{ after(grammarAccess.getProcessDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariable
entryRuleVariable 
:
{ before(grammarAccess.getVariableRule()); }
	 ruleVariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule Variable
ruleVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableAccess().getGroup()); }
(rule__Variable__Group__0)
{ after(grammarAccess.getVariableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleCommand
entryRuleCommand 
:
{ before(grammarAccess.getCommandRule()); }
	 ruleCommand
{ after(grammarAccess.getCommandRule()); } 
	 EOF 
;

// Rule Command
ruleCommand
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCommandAccess().getAlternatives()); }
(rule__Command__Alternatives)
{ after(grammarAccess.getCommandAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableDeclaration
entryRuleVariableDeclaration 
:
{ before(grammarAccess.getVariableDeclarationRule()); }
	 ruleVariableDeclaration
{ after(grammarAccess.getVariableDeclarationRule()); } 
	 EOF 
;

// Rule VariableDeclaration
ruleVariableDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableDeclarationAccess().getGroup()); }
(rule__VariableDeclaration__Group__0)
{ after(grammarAccess.getVariableDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAction
entryRuleAction 
:
{ before(grammarAccess.getActionRule()); }
	 ruleAction
{ after(grammarAccess.getActionRule()); } 
	 EOF 
;

// Rule Action
ruleAction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActionAccess().getAlternatives()); }
(rule__Action__Alternatives)
{ after(grammarAccess.getActionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReplaceAction
entryRuleReplaceAction 
:
{ before(grammarAccess.getReplaceActionRule()); }
	 ruleReplaceAction
{ after(grammarAccess.getReplaceActionRule()); } 
	 EOF 
;

// Rule ReplaceAction
ruleReplaceAction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReplaceActionAccess().getGroup()); }
(rule__ReplaceAction__Group__0)
{ after(grammarAccess.getReplaceActionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGetAction
entryRuleGetAction 
:
{ before(grammarAccess.getGetActionRule()); }
	 ruleGetAction
{ after(grammarAccess.getGetActionRule()); } 
	 EOF 
;

// Rule GetAction
ruleGetAction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGetActionAccess().getGroup()); }
(rule__GetAction__Group__0)
{ after(grammarAccess.getGetActionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQueryAction
entryRuleQueryAction 
:
{ before(grammarAccess.getQueryActionRule()); }
	 ruleQueryAction
{ after(grammarAccess.getQueryActionRule()); } 
	 EOF 
;

// Rule QueryAction
ruleQueryAction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQueryActionAccess().getGroup()); }
(rule__QueryAction__Group__0)
{ after(grammarAccess.getQueryActionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePutAction
entryRulePutAction 
:
{ before(grammarAccess.getPutActionRule()); }
	 rulePutAction
{ after(grammarAccess.getPutActionRule()); } 
	 EOF 
;

// Rule PutAction
rulePutAction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPutActionAccess().getGroup()); }
(rule__PutAction__Group__0)
{ after(grammarAccess.getPutActionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleTuple
entryRuleTuple 
:
{ before(grammarAccess.getTupleRule()); }
	 ruleTuple
{ after(grammarAccess.getTupleRule()); } 
	 EOF 
;

// Rule Tuple
ruleTuple
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTupleAccess().getGroup()); }
(rule__Tuple__Group__0)
{ after(grammarAccess.getTupleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTemplate
entryRuleTemplate 
:
{ before(grammarAccess.getTemplateRule()); }
	 ruleTemplate
{ after(grammarAccess.getTemplateRule()); } 
	 EOF 
;

// Rule Template
ruleTemplate
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTemplateAccess().getGroup()); }
(rule__Template__Group__0)
{ after(grammarAccess.getTemplateAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTemplateField
entryRuleTemplateField 
:
{ before(grammarAccess.getTemplateFieldRule()); }
	 ruleTemplateField
{ after(grammarAccess.getTemplateFieldRule()); } 
	 EOF 
;

// Rule TemplateField
ruleTemplateField
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTemplateFieldAccess().getAlternatives()); }
(rule__TemplateField__Alternatives)
{ after(grammarAccess.getTemplateFieldAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnyFormalField
entryRuleAnyFormalField 
:
{ before(grammarAccess.getAnyFormalFieldRule()); }
	 ruleAnyFormalField
{ after(grammarAccess.getAnyFormalFieldRule()); } 
	 EOF 
;

// Rule AnyFormalField
ruleAnyFormalField
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnyFormalFieldAccess().getGroup()); }
(rule__AnyFormalField__Group__0)
{ after(grammarAccess.getAnyFormalFieldAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypedFormalField
entryRuleTypedFormalField 
:
{ before(grammarAccess.getTypedFormalFieldRule()); }
	 ruleTypedFormalField
{ after(grammarAccess.getTypedFormalFieldRule()); } 
	 EOF 
;

// Rule TypedFormalField
ruleTypedFormalField
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypedFormalFieldAccess().getGroup()); }
(rule__TypedFormalField__Group__0)
{ after(grammarAccess.getTypedFormalFieldAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFormalField
entryRuleFormalField 
:
{ before(grammarAccess.getFormalFieldRule()); }
	 ruleFormalField
{ after(grammarAccess.getFormalFieldRule()); } 
	 EOF 
;

// Rule FormalField
ruleFormalField
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFormalFieldAccess().getGroup()); }
(rule__FormalField__Group__0)
{ after(grammarAccess.getFormalFieldAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleActualField
entryRuleActualField 
:
{ before(grammarAccess.getActualFieldRule()); }
	 ruleActualField
{ after(grammarAccess.getActualFieldRule()); } 
	 EOF 
;

// Rule ActualField
ruleActualField
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActualFieldAccess().getValueAssignment()); }
(rule__ActualField__ValueAssignment)
{ after(grammarAccess.getActualFieldAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWhile
entryRuleWhile 
:
{ before(grammarAccess.getWhileRule()); }
	 ruleWhile
{ after(grammarAccess.getWhileRule()); } 
	 EOF 
;

// Rule While
ruleWhile
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWhileAccess().getGroup()); }
(rule__While__Group__0)
{ after(grammarAccess.getWhileAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIfThenElse
entryRuleIfThenElse 
:
{ before(grammarAccess.getIfThenElseRule()); }
	 ruleIfThenElse
{ after(grammarAccess.getIfThenElseRule()); } 
	 EOF 
;

// Rule IfThenElse
ruleIfThenElse
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIfThenElseAccess().getGroup()); }
(rule__IfThenElse__Group__0)
{ after(grammarAccess.getIfThenElseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBlock
entryRuleBlock 
:
{ before(grammarAccess.getBlockRule()); }
	 ruleBlock
{ after(grammarAccess.getBlockRule()); } 
	 EOF 
;

// Rule Block
ruleBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBlockAccess().getGroup()); }
(rule__Block__Group__0)
{ after(grammarAccess.getBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression
entryRuleExpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getDisjunctionParserRuleCall()); }
	ruleDisjunction
{ after(grammarAccess.getExpressionAccess().getDisjunctionParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDisjunction
entryRuleDisjunction 
:
{ before(grammarAccess.getDisjunctionRule()); }
	 ruleDisjunction
{ after(grammarAccess.getDisjunctionRule()); } 
	 EOF 
;

// Rule Disjunction
ruleDisjunction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDisjunctionAccess().getGroup()); }
(rule__Disjunction__Group__0)
{ after(grammarAccess.getDisjunctionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConjunction
entryRuleConjunction 
:
{ before(grammarAccess.getConjunctionRule()); }
	 ruleConjunction
{ after(grammarAccess.getConjunctionRule()); } 
	 EOF 
;

// Rule Conjunction
ruleConjunction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConjunctionAccess().getGroup()); }
(rule__Conjunction__Group__0)
{ after(grammarAccess.getConjunctionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNegation
entryRuleNegation 
:
{ before(grammarAccess.getNegationRule()); }
	 ruleNegation
{ after(grammarAccess.getNegationRule()); } 
	 EOF 
;

// Rule Negation
ruleNegation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNegationAccess().getAlternatives()); }
(rule__Negation__Alternatives)
{ after(grammarAccess.getNegationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelation
entryRuleRelation 
:
{ before(grammarAccess.getRelationRule()); }
	 ruleRelation
{ after(grammarAccess.getRelationRule()); } 
	 EOF 
;

// Rule Relation
ruleRelation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRelationAccess().getGroup()); }
(rule__Relation__Group__0)
{ after(grammarAccess.getRelationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSummationSubtraction
entryRuleSummationSubtraction 
:
{ before(grammarAccess.getSummationSubtractionRule()); }
	 ruleSummationSubtraction
{ after(grammarAccess.getSummationSubtractionRule()); } 
	 EOF 
;

// Rule SummationSubtraction
ruleSummationSubtraction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSummationSubtractionAccess().getGroup()); }
(rule__SummationSubtraction__Group__0)
{ after(grammarAccess.getSummationSubtractionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMultiplicationDivision
entryRuleMultiplicationDivision 
:
{ before(grammarAccess.getMultiplicationDivisionRule()); }
	 ruleMultiplicationDivision
{ after(grammarAccess.getMultiplicationDivisionRule()); } 
	 EOF 
;

// Rule MultiplicationDivision
ruleMultiplicationDivision
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMultiplicationDivisionAccess().getGroup()); }
(rule__MultiplicationDivision__Group__0)
{ after(grammarAccess.getMultiplicationDivisionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBaseExpression
entryRuleBaseExpression 
:
{ before(grammarAccess.getBaseExpressionRule()); }
	 ruleBaseExpression
{ after(grammarAccess.getBaseExpressionRule()); } 
	 EOF 
;

// Rule BaseExpression
ruleBaseExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBaseExpressionAccess().getAlternatives()); }
(rule__BaseExpression__Alternatives)
{ after(grammarAccess.getBaseExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSelfExpression
entryRuleSelfExpression 
:
{ before(grammarAccess.getSelfExpressionRule()); }
	 ruleSelfExpression
{ after(grammarAccess.getSelfExpressionRule()); } 
	 EOF 
;

// Rule SelfExpression
ruleSelfExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSelfExpressionAccess().getGroup()); }
(rule__SelfExpression__Group__0)
{ after(grammarAccess.getSelfExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleStringLiteral
entryRuleStringLiteral 
:
{ before(grammarAccess.getStringLiteralRule()); }
	 ruleStringLiteral
{ after(grammarAccess.getStringLiteralRule()); } 
	 EOF 
;

// Rule StringLiteral
ruleStringLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringLiteralAccess().getValueAssignment()); }
(rule__StringLiteral__ValueAssignment)
{ after(grammarAccess.getStringLiteralAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReferenceCallAccess
entryRuleReferenceCallAccess 
:
{ before(grammarAccess.getReferenceCallAccessRule()); }
	 ruleReferenceCallAccess
{ after(grammarAccess.getReferenceCallAccessRule()); } 
	 EOF 
;

// Rule ReferenceCallAccess
ruleReferenceCallAccess
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReferenceCallAccessAccess().getGroup()); }
(rule__ReferenceCallAccess__Group__0)
{ after(grammarAccess.getReferenceCallAccessAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReference
entryRuleReference 
:
{ before(grammarAccess.getReferenceRule()); }
	 ruleReference
{ after(grammarAccess.getReferenceRule()); } 
	 EOF 
;

// Rule Reference
ruleReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReferenceAccess().getRefAssignment()); }
(rule__Reference__RefAssignment)
{ after(grammarAccess.getReferenceAccess().getRefAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNumberLiteral
entryRuleNumberLiteral 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getNumberLiteralRule()); }
	 ruleNumberLiteral
{ after(grammarAccess.getNumberLiteralRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule NumberLiteral
ruleNumberLiteral
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNumberLiteralAccess().getGroup()); }
(rule__NumberLiteral__Group__0)
{ after(grammarAccess.getNumberLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleFactorialExpression
entryRuleFactorialExpression 
:
{ before(grammarAccess.getFactorialExpressionRule()); }
	 ruleFactorialExpression
{ after(grammarAccess.getFactorialExpressionRule()); } 
	 EOF 
;

// Rule FactorialExpression
ruleFactorialExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFactorialExpressionAccess().getGroup()); }
(rule__FactorialExpression__Group__0)
{ after(grammarAccess.getFactorialExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLogExpression
entryRuleLogExpression 
:
{ before(grammarAccess.getLogExpressionRule()); }
	 ruleLogExpression
{ after(grammarAccess.getLogExpressionRule()); } 
	 EOF 
;

// Rule LogExpression
ruleLogExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLogExpressionAccess().getGroup()); }
(rule__LogExpression__Group__0)
{ after(grammarAccess.getLogExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleModExpression
entryRuleModExpression 
:
{ before(grammarAccess.getModExpressionRule()); }
	 ruleModExpression
{ after(grammarAccess.getModExpressionRule()); } 
	 EOF 
;

// Rule ModExpression
ruleModExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModExpressionAccess().getGroup()); }
(rule__ModExpression__Group__0)
{ after(grammarAccess.getModExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePowExpression
entryRulePowExpression 
:
{ before(grammarAccess.getPowExpressionRule()); }
	 rulePowExpression
{ after(grammarAccess.getPowExpressionRule()); } 
	 EOF 
;

// Rule PowExpression
rulePowExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPowExpressionAccess().getGroup()); }
(rule__PowExpression__Group__0)
{ after(grammarAccess.getPowExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFloorExpression
entryRuleFloorExpression 
:
{ before(grammarAccess.getFloorExpressionRule()); }
	 ruleFloorExpression
{ after(grammarAccess.getFloorExpressionRule()); } 
	 EOF 
;

// Rule FloorExpression
ruleFloorExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFloorExpressionAccess().getGroup()); }
(rule__FloorExpression__Group__0)
{ after(grammarAccess.getFloorExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCeilExpression
entryRuleCeilExpression 
:
{ before(grammarAccess.getCeilExpressionRule()); }
	 ruleCeilExpression
{ after(grammarAccess.getCeilExpressionRule()); } 
	 EOF 
;

// Rule CeilExpression
ruleCeilExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCeilExpressionAccess().getGroup()); }
(rule__CeilExpression__Group__0)
{ after(grammarAccess.getCeilExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMinExpression
entryRuleMinExpression 
:
{ before(grammarAccess.getMinExpressionRule()); }
	 ruleMinExpression
{ after(grammarAccess.getMinExpressionRule()); } 
	 EOF 
;

// Rule MinExpression
ruleMinExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMinExpressionAccess().getGroup()); }
(rule__MinExpression__Group__0)
{ after(grammarAccess.getMinExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMaxExpression
entryRuleMaxExpression 
:
{ before(grammarAccess.getMaxExpressionRule()); }
	 ruleMaxExpression
{ after(grammarAccess.getMaxExpressionRule()); } 
	 EOF 
;

// Rule MaxExpression
ruleMaxExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMaxExpressionAccess().getGroup()); }
(rule__MaxExpression__Group__0)
{ after(grammarAccess.getMaxExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSinExpression
entryRuleSinExpression 
:
{ before(grammarAccess.getSinExpressionRule()); }
	 ruleSinExpression
{ after(grammarAccess.getSinExpressionRule()); } 
	 EOF 
;

// Rule SinExpression
ruleSinExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSinExpressionAccess().getGroup()); }
(rule__SinExpression__Group__0)
{ after(grammarAccess.getSinExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCosExpression
entryRuleCosExpression 
:
{ before(grammarAccess.getCosExpressionRule()); }
	 ruleCosExpression
{ after(grammarAccess.getCosExpressionRule()); } 
	 EOF 
;

// Rule CosExpression
ruleCosExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCosExpressionAccess().getGroup()); }
(rule__CosExpression__Group__0)
{ after(grammarAccess.getCosExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTanExpression
entryRuleTanExpression 
:
{ before(grammarAccess.getTanExpressionRule()); }
	 ruleTanExpression
{ after(grammarAccess.getTanExpressionRule()); } 
	 EOF 
;

// Rule TanExpression
ruleTanExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTanExpressionAccess().getGroup()); }
(rule__TanExpression__Group__0)
{ after(grammarAccess.getTanExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleATanExpression
entryRuleATanExpression 
:
{ before(grammarAccess.getATanExpressionRule()); }
	 ruleATanExpression
{ after(grammarAccess.getATanExpressionRule()); } 
	 EOF 
;

// Rule ATanExpression
ruleATanExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getATanExpressionAccess().getGroup()); }
(rule__ATanExpression__Group__0)
{ after(grammarAccess.getATanExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleASinExpression
entryRuleASinExpression 
:
{ before(grammarAccess.getASinExpressionRule()); }
	 ruleASinExpression
{ after(grammarAccess.getASinExpressionRule()); } 
	 EOF 
;

// Rule ASinExpression
ruleASinExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getASinExpressionAccess().getGroup()); }
(rule__ASinExpression__Group__0)
{ after(grammarAccess.getASinExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleACosExpression
entryRuleACosExpression 
:
{ before(grammarAccess.getACosExpressionRule()); }
	 ruleACosExpression
{ after(grammarAccess.getACosExpressionRule()); } 
	 EOF 
;

// Rule ACosExpression
ruleACosExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getACosExpressionAccess().getGroup()); }
(rule__ACosExpression__Group__0)
{ after(grammarAccess.getACosExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSystemDeclaration
entryRuleSystemDeclaration 
:
{ before(grammarAccess.getSystemDeclarationRule()); }
	 ruleSystemDeclaration
{ after(grammarAccess.getSystemDeclarationRule()); } 
	 EOF 
;

// Rule SystemDeclaration
ruleSystemDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSystemDeclarationAccess().getGroup()); }
(rule__SystemDeclaration__Group__0)
{ after(grammarAccess.getSystemDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule Type
ruleType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getAlternatives()); }
(rule__Type__Alternatives)
{ after(grammarAccess.getTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule RelationSymbol
ruleRelationSymbol
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationSymbolAccess().getAlternatives()); }
(rule__RelationSymbol__Alternatives)
{ after(grammarAccess.getRelationSymbolAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Model__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getConstantsAssignment_0()); }
(rule__Model__ConstantsAssignment_0)
{ after(grammarAccess.getModelAccess().getConstantsAssignment_0()); }
)

    |(
{ before(grammarAccess.getModelAccess().getProjectionsAssignment_1()); }
(rule__Model__ProjectionsAssignment_1)
{ after(grammarAccess.getModelAccess().getProjectionsAssignment_1()); }
)

    |(
{ before(grammarAccess.getModelAccess().getFunctionsAssignment_2()); }
(rule__Model__FunctionsAssignment_2)
{ after(grammarAccess.getModelAccess().getFunctionsAssignment_2()); }
)

    |(
{ before(grammarAccess.getModelAccess().getAttributesAssignment_3()); }
(rule__Model__AttributesAssignment_3)
{ after(grammarAccess.getModelAccess().getAttributesAssignment_3()); }
)

    |(
{ before(grammarAccess.getModelAccess().getProcessesAssignment_4()); }
(rule__Model__ProcessesAssignment_4)
{ after(grammarAccess.getModelAccess().getProcessesAssignment_4()); }
)

    |(
{ before(grammarAccess.getModelAccess().getComponentsAssignment_5()); }
(rule__Model__ComponentsAssignment_5)
{ after(grammarAccess.getModelAccess().getComponentsAssignment_5()); }
)

    |(
{ before(grammarAccess.getModelAccess().getSystemsAssignment_6()); }
(rule__Model__SystemsAssignment_6)
{ after(grammarAccess.getModelAccess().getSystemsAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentExpressionAccess().getComponentConstantParserRuleCall_0()); }
	ruleComponentConstant
{ after(grammarAccess.getComponentExpressionAccess().getComponentConstantParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getComponentExpressionAccess().getComponentReferenceParserRuleCall_1()); }
	ruleComponentReference
{ after(grammarAccess.getComponentExpressionAccess().getComponentReferenceParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessExpressionAccess().getGroup_0()); }
(rule__ProcessExpression__Group_0__0)
{ after(grammarAccess.getProcessExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getProcessExpressionAccess().getGroup_1()); }
(rule__ProcessExpression__Group_1__0)
{ after(grammarAccess.getProcessExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__AttributesAlternatives_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getAttributesIdAttributeDefinitionParserRuleCall_0_0_0()); }
	ruleIdAttributeDefinition
{ after(grammarAccess.getInterfaceAccess().getAttributesIdAttributeDefinitionParserRuleCall_0_0_0()); }
)

    |(
{ before(grammarAccess.getInterfaceAccess().getAttributesAttributeInstantiationParserRuleCall_0_0_1()); }
	ruleAttributeInstantiation
{ after(grammarAccess.getInterfaceAccess().getAttributesAttributeInstantiationParserRuleCall_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__AttributesAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getAttributesIdAttributeDefinitionParserRuleCall_1_1_0_0()); }
	ruleIdAttributeDefinition
{ after(grammarAccess.getInterfaceAccess().getAttributesIdAttributeDefinitionParserRuleCall_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getInterfaceAccess().getAttributesAttributeInstantiationParserRuleCall_1_1_0_1()); }
	ruleAttributeInstantiation
{ after(grammarAccess.getInterfaceAccess().getAttributesAttributeInstantiationParserRuleCall_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getActionParserRuleCall_0()); }
	ruleAction
{ after(grammarAccess.getCommandAccess().getActionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getCommandAccess().getIfThenElseParserRuleCall_1()); }
	ruleIfThenElse
{ after(grammarAccess.getCommandAccess().getIfThenElseParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getCommandAccess().getWhileParserRuleCall_2()); }
	ruleWhile
{ after(grammarAccess.getCommandAccess().getWhileParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getCommandAccess().getVariableDeclarationParserRuleCall_3()); }
	ruleVariableDeclaration
{ after(grammarAccess.getCommandAccess().getVariableDeclarationParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getCommandAccess().getProcessExpressionParserRuleCall_4()); }
	ruleProcessExpression
{ after(grammarAccess.getCommandAccess().getProcessExpressionParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getCommandAccess().getGroup_5()); }
(rule__Command__Group_5__0)
{ after(grammarAccess.getCommandAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getPutActionParserRuleCall_0()); }
	rulePutAction
{ after(grammarAccess.getActionAccess().getPutActionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getActionAccess().getGetActionParserRuleCall_1()); }
	ruleGetAction
{ after(grammarAccess.getActionAccess().getGetActionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getActionAccess().getQueryActionParserRuleCall_2()); }
	ruleQueryAction
{ after(grammarAccess.getActionAccess().getQueryActionParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getActionAccess().getReplaceActionParserRuleCall_3()); }
	ruleReplaceAction
{ after(grammarAccess.getActionAccess().getReplaceActionParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateField__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateFieldAccess().getAnyFormalFieldParserRuleCall_0()); }
	ruleAnyFormalField
{ after(grammarAccess.getTemplateFieldAccess().getAnyFormalFieldParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTemplateFieldAccess().getFormalFieldParserRuleCall_1()); }
	ruleFormalField
{ after(grammarAccess.getTemplateFieldAccess().getFormalFieldParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getTemplateFieldAccess().getActualFieldParserRuleCall_2()); }
	ruleActualField
{ after(grammarAccess.getTemplateFieldAccess().getActualFieldParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getTemplateFieldAccess().getTypedFormalFieldParserRuleCall_3()); }
	ruleTypedFormalField
{ after(grammarAccess.getTemplateFieldAccess().getTypedFormalFieldParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FormalField__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalFieldAccess().getGroup_1_0()); }
(rule__FormalField__Group_1_0__0)
{ after(grammarAccess.getFormalFieldAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getFormalFieldAccess().getGroup_1_1()); }
(rule__FormalField__Group_1_1__0)
{ after(grammarAccess.getFormalFieldAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Negation__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNegationAccess().getGroup_0()); }
(rule__Negation__Group_0__0)
{ after(grammarAccess.getNegationAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getNegationAccess().getRelationParserRuleCall_1()); }
	ruleRelation
{ after(grammarAccess.getNegationAccess().getRelationParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SummationSubtraction__OpAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSummationSubtractionAccess().getOpPlusSignKeyword_1_1_0_0()); }

	'+' 

{ after(grammarAccess.getSummationSubtractionAccess().getOpPlusSignKeyword_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getSummationSubtractionAccess().getOpHyphenMinusKeyword_1_1_0_1()); }

	'-' 

{ after(grammarAccess.getSummationSubtractionAccess().getOpHyphenMinusKeyword_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationDivision__OpAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationDivisionAccess().getOpAsteriskKeyword_1_1_0_0()); }

	'*' 

{ after(grammarAccess.getMultiplicationDivisionAccess().getOpAsteriskKeyword_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getMultiplicationDivisionAccess().getOpSolidusKeyword_1_1_0_1()); }

	'/' 

{ after(grammarAccess.getMultiplicationDivisionAccess().getOpSolidusKeyword_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BaseExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBaseExpressionAccess().getGroup_0()); }
(rule__BaseExpression__Group_0__0)
{ after(grammarAccess.getBaseExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getBaseExpressionAccess().getGroup_1()); }
(rule__BaseExpression__Group_1__0)
{ after(grammarAccess.getBaseExpressionAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getBaseExpressionAccess().getGroup_2()); }
(rule__BaseExpression__Group_2__0)
{ after(grammarAccess.getBaseExpressionAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getBaseExpressionAccess().getStringLiteralParserRuleCall_3()); }
	ruleStringLiteral
{ after(grammarAccess.getBaseExpressionAccess().getStringLiteralParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getBaseExpressionAccess().getNumberLiteralParserRuleCall_4()); }
	ruleNumberLiteral
{ after(grammarAccess.getBaseExpressionAccess().getNumberLiteralParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getBaseExpressionAccess().getMinExpressionParserRuleCall_5()); }
	ruleMinExpression
{ after(grammarAccess.getBaseExpressionAccess().getMinExpressionParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getBaseExpressionAccess().getMaxExpressionParserRuleCall_6()); }
	ruleMaxExpression
{ after(grammarAccess.getBaseExpressionAccess().getMaxExpressionParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getBaseExpressionAccess().getFloorExpressionParserRuleCall_7()); }
	ruleFloorExpression
{ after(grammarAccess.getBaseExpressionAccess().getFloorExpressionParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getBaseExpressionAccess().getCeilExpressionParserRuleCall_8()); }
	ruleCeilExpression
{ after(grammarAccess.getBaseExpressionAccess().getCeilExpressionParserRuleCall_8()); }
)

    |(
{ before(grammarAccess.getBaseExpressionAccess().getPowExpressionParserRuleCall_9()); }
	rulePowExpression
{ after(grammarAccess.getBaseExpressionAccess().getPowExpressionParserRuleCall_9()); }
)

    |(
{ before(grammarAccess.getBaseExpressionAccess().getModExpressionParserRuleCall_10()); }
	ruleModExpression
{ after(grammarAccess.getBaseExpressionAccess().getModExpressionParserRuleCall_10()); }
)

    |(
{ before(grammarAccess.getBaseExpressionAccess().getLogExpressionParserRuleCall_11()); }
	ruleLogExpression
{ after(grammarAccess.getBaseExpressionAccess().getLogExpressionParserRuleCall_11()); }
)

    |(
{ before(grammarAccess.getBaseExpressionAccess().getFactorialExpressionParserRuleCall_12()); }
	ruleFactorialExpression
{ after(grammarAccess.getBaseExpressionAccess().getFactorialExpressionParserRuleCall_12()); }
)

    |(
{ before(grammarAccess.getBaseExpressionAccess().getSinExpressionParserRuleCall_13()); }
	ruleSinExpression
{ after(grammarAccess.getBaseExpressionAccess().getSinExpressionParserRuleCall_13()); }
)

    |(
{ before(grammarAccess.getBaseExpressionAccess().getCosExpressionParserRuleCall_14()); }
	ruleCosExpression
{ after(grammarAccess.getBaseExpressionAccess().getCosExpressionParserRuleCall_14()); }
)

    |(
{ before(grammarAccess.getBaseExpressionAccess().getTanExpressionParserRuleCall_15()); }
	ruleTanExpression
{ after(grammarAccess.getBaseExpressionAccess().getTanExpressionParserRuleCall_15()); }
)

    |(
{ before(grammarAccess.getBaseExpressionAccess().getASinExpressionParserRuleCall_16()); }
	ruleASinExpression
{ after(grammarAccess.getBaseExpressionAccess().getASinExpressionParserRuleCall_16()); }
)

    |(
{ before(grammarAccess.getBaseExpressionAccess().getACosExpressionParserRuleCall_17()); }
	ruleACosExpression
{ after(grammarAccess.getBaseExpressionAccess().getACosExpressionParserRuleCall_17()); }
)

    |(
{ before(grammarAccess.getBaseExpressionAccess().getATanExpressionParserRuleCall_18()); }
	ruleATanExpression
{ after(grammarAccess.getBaseExpressionAccess().getATanExpressionParserRuleCall_18()); }
)

    |(
{ before(grammarAccess.getBaseExpressionAccess().getSelfExpressionParserRuleCall_19()); }
	ruleSelfExpression
{ after(grammarAccess.getBaseExpressionAccess().getSelfExpressionParserRuleCall_19()); }
)

    |(
{ before(grammarAccess.getBaseExpressionAccess().getReferenceCallAccessParserRuleCall_20()); }
	ruleReferenceCallAccess
{ after(grammarAccess.getBaseExpressionAccess().getReferenceCallAccessParserRuleCall_20()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getSBOOLEnumLiteralDeclaration_0()); }
(	'bool' 
)
{ after(grammarAccess.getTypeAccess().getSBOOLEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getSINTEnumLiteralDeclaration_1()); }
(	'int' 
)
{ after(grammarAccess.getTypeAccess().getSINTEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getSDOUBLEEnumLiteralDeclaration_2()); }
(	'double' 
)
{ after(grammarAccess.getTypeAccess().getSDOUBLEEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getSSTRINGEnumLiteralDeclaration_3()); }
(	'string' 
)
{ after(grammarAccess.getTypeAccess().getSSTRINGEnumLiteralDeclaration_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationSymbol__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationSymbolAccess().getEQEnumLiteralDeclaration_0()); }
(	'=' 
)
{ after(grammarAccess.getRelationSymbolAccess().getEQEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getRelationSymbolAccess().getNEQEnumLiteralDeclaration_1()); }
(	'!=' 
)
{ after(grammarAccess.getRelationSymbolAccess().getNEQEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getRelationSymbolAccess().getLESEnumLiteralDeclaration_2()); }
(	'<' 
)
{ after(grammarAccess.getRelationSymbolAccess().getLESEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getRelationSymbolAccess().getLEQEnumLiteralDeclaration_3()); }
(	'<=' 
)
{ after(grammarAccess.getRelationSymbolAccess().getLEQEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getRelationSymbolAccess().getGEQEnumLiteralDeclaration_4()); }
(	'>=' 
)
{ after(grammarAccess.getRelationSymbolAccess().getGEQEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getRelationSymbolAccess().getGTREnumLiteralDeclaration_5()); }
(	'>' 
)
{ after(grammarAccess.getRelationSymbolAccess().getGTREnumLiteralDeclaration_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__AttributeDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeDeclaration__Group__0__Impl
	rule__AttributeDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeDeclarationAccess().getAttributeKeyword_0()); }

	'attribute' 

{ after(grammarAccess.getAttributeDeclarationAccess().getAttributeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeDeclaration__Group__1__Impl
	rule__AttributeDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeDeclarationAccess().getNameAssignment_1()); }
(rule__AttributeDeclaration__NameAssignment_1)
{ after(grammarAccess.getAttributeDeclarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeDeclaration__Group__2__Impl
	rule__AttributeDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeDeclarationAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getAttributeDeclarationAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeDeclaration__Group__3__Impl
	rule__AttributeDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeDeclarationAccess().getTypeAssignment_3()); }
(rule__AttributeDeclaration__TypeAssignment_3)
{ after(grammarAccess.getAttributeDeclarationAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeDeclarationAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getAttributeDeclarationAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ProjectionDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProjectionDeclaration__Group__0__Impl
	rule__ProjectionDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectionDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProjectionDeclarationAccess().getProjectionKeyword_0()); }

	'projection' 

{ after(grammarAccess.getProjectionDeclarationAccess().getProjectionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProjectionDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProjectionDeclaration__Group__1__Impl
	rule__ProjectionDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectionDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProjectionDeclarationAccess().getNameAssignment_1()); }
(rule__ProjectionDeclaration__NameAssignment_1)
{ after(grammarAccess.getProjectionDeclarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProjectionDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProjectionDeclaration__Group__2__Impl
	rule__ProjectionDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectionDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProjectionDeclarationAccess().getEqualsSignKeyword_2()); }

	'=' 

{ after(grammarAccess.getProjectionDeclarationAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProjectionDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProjectionDeclaration__Group__3__Impl
	rule__ProjectionDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectionDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProjectionDeclarationAccess().getProjectionAssignment_3()); }
(rule__ProjectionDeclaration__ProjectionAssignment_3)
{ after(grammarAccess.getProjectionDeclarationAccess().getProjectionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProjectionDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProjectionDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectionDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProjectionDeclarationAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getProjectionDeclarationAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ProjectionExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProjectionExpression__Group__0__Impl
	rule__ProjectionExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectionExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProjectionExpressionAccess().getGroup_0()); }
(rule__ProjectionExpression__Group_0__0)?
{ after(grammarAccess.getProjectionExpressionAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProjectionExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProjectionExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectionExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProjectionExpressionAccess().getDefaultAssignment_1()); }
(rule__ProjectionExpression__DefaultAssignment_1)
{ after(grammarAccess.getProjectionExpressionAccess().getDefaultAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ProjectionExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProjectionExpression__Group_0__0__Impl
	rule__ProjectionExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectionExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProjectionExpressionAccess().getLeftSquareBracketKeyword_0_0()); }

	'[' 

{ after(grammarAccess.getProjectionExpressionAccess().getLeftSquareBracketKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProjectionExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProjectionExpression__Group_0__1__Impl
	rule__ProjectionExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectionExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProjectionExpressionAccess().getTemplateAssignment_0_1()); }
(rule__ProjectionExpression__TemplateAssignment_0_1)
{ after(grammarAccess.getProjectionExpressionAccess().getTemplateAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProjectionExpression__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProjectionExpression__Group_0__2__Impl
	rule__ProjectionExpression__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectionExpression__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProjectionExpressionAccess().getRightSquareBracketKeyword_0_2()); }

	']' 

{ after(grammarAccess.getProjectionExpressionAccess().getRightSquareBracketKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProjectionExpression__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProjectionExpression__Group_0__3__Impl
	rule__ProjectionExpression__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectionExpression__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProjectionExpressionAccess().getHyphenMinusGreaterThanSignKeyword_0_3()); }

	'->' 

{ after(grammarAccess.getProjectionExpressionAccess().getHyphenMinusGreaterThanSignKeyword_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProjectionExpression__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProjectionExpression__Group_0__4__Impl
	rule__ProjectionExpression__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectionExpression__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProjectionExpressionAccess().getValueAssignment_0_4()); }
(rule__ProjectionExpression__ValueAssignment_0_4)
{ after(grammarAccess.getProjectionExpressionAccess().getValueAssignment_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProjectionExpression__Group_0__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProjectionExpression__Group_0__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectionExpression__Group_0__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProjectionExpressionAccess().getColonKeyword_0_5()); }

	':' 

{ after(grammarAccess.getProjectionExpressionAccess().getColonKeyword_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__ConstantDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDeclaration__Group__0__Impl
	rule__ConstantDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDeclarationAccess().getConstKeyword_0()); }

	'const' 

{ after(grammarAccess.getConstantDeclarationAccess().getConstKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDeclaration__Group__1__Impl
	rule__ConstantDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDeclarationAccess().getTypeAssignment_1()); }
(rule__ConstantDeclaration__TypeAssignment_1)
{ after(grammarAccess.getConstantDeclarationAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDeclaration__Group__2__Impl
	rule__ConstantDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDeclarationAccess().getNameAssignment_2()); }
(rule__ConstantDeclaration__NameAssignment_2)
{ after(grammarAccess.getConstantDeclarationAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDeclaration__Group__3__Impl
	rule__ConstantDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDeclarationAccess().getEqualsSignKeyword_3()); }

	'=' 

{ after(grammarAccess.getConstantDeclarationAccess().getEqualsSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDeclaration__Group__4__Impl
	rule__ConstantDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDeclarationAccess().getValueAssignment_4()); }
(rule__ConstantDeclaration__ValueAssignment_4)
{ after(grammarAccess.getConstantDeclarationAccess().getValueAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDeclaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDeclaration__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDeclaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDeclarationAccess().getSemicolonKeyword_5()); }

	';' 

{ after(grammarAccess.getConstantDeclarationAccess().getSemicolonKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__ComponentDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentDeclaration__Group__0__Impl
	rule__ComponentDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentDeclarationAccess().getComponentKeyword_0()); }

	'component' 

{ after(grammarAccess.getComponentDeclarationAccess().getComponentKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentDeclaration__Group__1__Impl
	rule__ComponentDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentDeclarationAccess().getNameAssignment_1()); }
(rule__ComponentDeclaration__NameAssignment_1)
{ after(grammarAccess.getComponentDeclarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentDeclaration__Group__2__Impl
	rule__ComponentDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentDeclarationAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getComponentDeclarationAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentDeclaration__Group__3__Impl
	rule__ComponentDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentDeclarationAccess().getGroup_3()); }
(rule__ComponentDeclaration__Group_3__0)?
{ after(grammarAccess.getComponentDeclarationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentDeclaration__Group__4__Impl
	rule__ComponentDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentDeclarationAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getComponentDeclarationAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentDeclaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentDeclaration__Group__5__Impl
	rule__ComponentDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDeclaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentDeclarationAccess().getEqualsSignKeyword_5()); }

	'=' 

{ after(grammarAccess.getComponentDeclarationAccess().getEqualsSignKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentDeclaration__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentDeclaration__Group__6__Impl
	rule__ComponentDeclaration__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDeclaration__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentDeclarationAccess().getComponentAssignment_6()); }
(rule__ComponentDeclaration__ComponentAssignment_6)
{ after(grammarAccess.getComponentDeclarationAccess().getComponentAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentDeclaration__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentDeclaration__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDeclaration__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentDeclarationAccess().getSemicolonKeyword_7()); }

	';' 

{ after(grammarAccess.getComponentDeclarationAccess().getSemicolonKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__ComponentDeclaration__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentDeclaration__Group_3__0__Impl
	rule__ComponentDeclaration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDeclaration__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentDeclarationAccess().getParametersAssignment_3_0()); }
(rule__ComponentDeclaration__ParametersAssignment_3_0)
{ after(grammarAccess.getComponentDeclarationAccess().getParametersAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentDeclaration__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentDeclaration__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDeclaration__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentDeclarationAccess().getGroup_3_1()); }
(rule__ComponentDeclaration__Group_3_1__0)*
{ after(grammarAccess.getComponentDeclarationAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ComponentDeclaration__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentDeclaration__Group_3_1__0__Impl
	rule__ComponentDeclaration__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDeclaration__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentDeclarationAccess().getCommaKeyword_3_1_0()); }

	',' 

{ after(grammarAccess.getComponentDeclarationAccess().getCommaKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentDeclaration__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentDeclaration__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDeclaration__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentDeclarationAccess().getParametersAssignment_3_1_1()); }
(rule__ComponentDeclaration__ParametersAssignment_3_1_1)
{ after(grammarAccess.getComponentDeclarationAccess().getParametersAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ComponentReference__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentReference__Group__0__Impl
	rule__ComponentReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentReference__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentReferenceAccess().getReferenceAssignment_0()); }
(rule__ComponentReference__ReferenceAssignment_0)
{ after(grammarAccess.getComponentReferenceAccess().getReferenceAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentReference__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentReference__Group__1__Impl
	rule__ComponentReference__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentReference__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentReferenceAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getComponentReferenceAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentReference__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentReference__Group__2__Impl
	rule__ComponentReference__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentReference__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentReferenceAccess().getGroup_2()); }
(rule__ComponentReference__Group_2__0)?
{ after(grammarAccess.getComponentReferenceAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentReference__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentReference__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentReference__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentReferenceAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getComponentReferenceAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ComponentReference__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentReference__Group_2__0__Impl
	rule__ComponentReference__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentReference__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentReferenceAccess().getArgumentsAssignment_2_0()); }
(rule__ComponentReference__ArgumentsAssignment_2_0)
{ after(grammarAccess.getComponentReferenceAccess().getArgumentsAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentReference__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentReference__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentReference__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentReferenceAccess().getGroup_2_1()); }
(rule__ComponentReference__Group_2_1__0)*
{ after(grammarAccess.getComponentReferenceAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ComponentReference__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentReference__Group_2_1__0__Impl
	rule__ComponentReference__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentReference__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentReferenceAccess().getCommaKeyword_2_1_0()); }

	',' 

{ after(grammarAccess.getComponentReferenceAccess().getCommaKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentReference__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentReference__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentReference__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentReferenceAccess().getArgumentsAssignment_2_1_1()); }
(rule__ComponentReference__ArgumentsAssignment_2_1_1)
{ after(grammarAccess.getComponentReferenceAccess().getArgumentsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ComponentConstant__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentConstant__Group__0__Impl
	rule__ComponentConstant__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentConstant__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentConstantAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getComponentConstantAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentConstant__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentConstant__Group__1__Impl
	rule__ComponentConstant__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentConstant__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentConstantAccess().getInterfaceAssignment_1()); }
(rule__ComponentConstant__InterfaceAssignment_1)
{ after(grammarAccess.getComponentConstantAccess().getInterfaceAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentConstant__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentConstant__Group__2__Impl
	rule__ComponentConstant__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentConstant__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentConstantAccess().getRightCurlyBracketKeyword_2()); }

	'}' 

{ after(grammarAccess.getComponentConstantAccess().getRightCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentConstant__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentConstant__Group__3__Impl
	rule__ComponentConstant__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentConstant__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentConstantAccess().getLeftSquareBracketKeyword_3()); }

	'[' 

{ after(grammarAccess.getComponentConstantAccess().getLeftSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentConstant__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentConstant__Group__4__Impl
	rule__ComponentConstant__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentConstant__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentConstantAccess().getGroup_4()); }
(rule__ComponentConstant__Group_4__0)?
{ after(grammarAccess.getComponentConstantAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentConstant__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentConstant__Group__5__Impl
	rule__ComponentConstant__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentConstant__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentConstantAccess().getGroup_5()); }
(rule__ComponentConstant__Group_5__0)
{ after(grammarAccess.getComponentConstantAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentConstant__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentConstant__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentConstant__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentConstantAccess().getRightSquareBracketKeyword_6()); }

	']' 

{ after(grammarAccess.getComponentConstantAccess().getRightSquareBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__ComponentConstant__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentConstant__Group_4__0__Impl
	rule__ComponentConstant__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentConstant__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentConstantAccess().getKnowledgeAssignment_4_0()); }
(rule__ComponentConstant__KnowledgeAssignment_4_0)
{ after(grammarAccess.getComponentConstantAccess().getKnowledgeAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentConstant__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentConstant__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentConstant__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentConstantAccess().getCommaKeyword_4_1()); }

	',' 

{ after(grammarAccess.getComponentConstantAccess().getCommaKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ComponentConstant__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentConstant__Group_5__0__Impl
	rule__ComponentConstant__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentConstant__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentConstantAccess().getProcessesAssignment_5_0()); }
(rule__ComponentConstant__ProcessesAssignment_5_0)
{ after(grammarAccess.getComponentConstantAccess().getProcessesAssignment_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentConstant__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentConstant__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentConstant__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentConstantAccess().getGroup_5_1()); }
(rule__ComponentConstant__Group_5_1__0)*
{ after(grammarAccess.getComponentConstantAccess().getGroup_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ComponentConstant__Group_5_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentConstant__Group_5_1__0__Impl
	rule__ComponentConstant__Group_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentConstant__Group_5_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentConstantAccess().getVerticalLineKeyword_5_1_0()); }

	'|' 

{ after(grammarAccess.getComponentConstantAccess().getVerticalLineKeyword_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentConstant__Group_5_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentConstant__Group_5_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentConstant__Group_5_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentConstantAccess().getProcessesAssignment_5_1_1()); }
(rule__ComponentConstant__ProcessesAssignment_5_1_1)
{ after(grammarAccess.getComponentConstantAccess().getProcessesAssignment_5_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ProcessExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcessExpression__Group_0__0__Impl
	rule__ProcessExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessExpressionAccess().getProcessReferenceAction_0_0()); }
(

)
{ after(grammarAccess.getProcessExpressionAccess().getProcessReferenceAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcessExpression__Group_0__1__Impl
	rule__ProcessExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessExpressionAccess().getReferenceAssignment_0_1()); }
(rule__ProcessExpression__ReferenceAssignment_0_1)
{ after(grammarAccess.getProcessExpressionAccess().getReferenceAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessExpression__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcessExpression__Group_0__2__Impl
	rule__ProcessExpression__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessExpression__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessExpressionAccess().getLeftParenthesisKeyword_0_2()); }

	'(' 

{ after(grammarAccess.getProcessExpressionAccess().getLeftParenthesisKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessExpression__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcessExpression__Group_0__3__Impl
	rule__ProcessExpression__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessExpression__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessExpressionAccess().getGroup_0_3()); }
(rule__ProcessExpression__Group_0_3__0)?
{ after(grammarAccess.getProcessExpressionAccess().getGroup_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessExpression__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcessExpression__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessExpression__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessExpressionAccess().getRightParenthesisKeyword_0_4()); }

	')' 

{ after(grammarAccess.getProcessExpressionAccess().getRightParenthesisKeyword_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ProcessExpression__Group_0_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcessExpression__Group_0_3__0__Impl
	rule__ProcessExpression__Group_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessExpression__Group_0_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessExpressionAccess().getArgumentsAssignment_0_3_0()); }
(rule__ProcessExpression__ArgumentsAssignment_0_3_0)
{ after(grammarAccess.getProcessExpressionAccess().getArgumentsAssignment_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessExpression__Group_0_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcessExpression__Group_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessExpression__Group_0_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessExpressionAccess().getGroup_0_3_1()); }
(rule__ProcessExpression__Group_0_3_1__0)*
{ after(grammarAccess.getProcessExpressionAccess().getGroup_0_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ProcessExpression__Group_0_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcessExpression__Group_0_3_1__0__Impl
	rule__ProcessExpression__Group_0_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessExpression__Group_0_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessExpressionAccess().getCommaKeyword_0_3_1_0()); }

	',' 

{ after(grammarAccess.getProcessExpressionAccess().getCommaKeyword_0_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessExpression__Group_0_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcessExpression__Group_0_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessExpression__Group_0_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessExpressionAccess().getArgumentsAssignment_0_3_1_1()); }
(rule__ProcessExpression__ArgumentsAssignment_0_3_1_1)
{ after(grammarAccess.getProcessExpressionAccess().getArgumentsAssignment_0_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ProcessExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcessExpression__Group_1__0__Impl
	rule__ProcessExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessExpressionAccess().getEmptyProcessAction_1_0()); }
(

)
{ after(grammarAccess.getProcessExpressionAccess().getEmptyProcessAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcessExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessExpressionAccess().getNilKeyword_1_1()); }

	'nil' 

{ after(grammarAccess.getProcessExpressionAccess().getNilKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Knowledge__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Knowledge__Group__0__Impl
	rule__Knowledge__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Knowledge__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKnowledgeAccess().getLessThanSignKeyword_0()); }

	'<' 

{ after(grammarAccess.getKnowledgeAccess().getLessThanSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Knowledge__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Knowledge__Group__1__Impl
	rule__Knowledge__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Knowledge__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKnowledgeAccess().getTuplesAssignment_1()); }
(rule__Knowledge__TuplesAssignment_1)
{ after(grammarAccess.getKnowledgeAccess().getTuplesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Knowledge__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Knowledge__Group__2__Impl
	rule__Knowledge__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Knowledge__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKnowledgeAccess().getGreaterThanSignKeyword_2()); }

	'>' 

{ after(grammarAccess.getKnowledgeAccess().getGreaterThanSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Knowledge__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Knowledge__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Knowledge__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKnowledgeAccess().getGroup_3()); }
(rule__Knowledge__Group_3__0)*
{ after(grammarAccess.getKnowledgeAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Knowledge__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Knowledge__Group_3__0__Impl
	rule__Knowledge__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Knowledge__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKnowledgeAccess().getVerticalLineKeyword_3_0()); }

	'|' 

{ after(grammarAccess.getKnowledgeAccess().getVerticalLineKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Knowledge__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Knowledge__Group_3__1__Impl
	rule__Knowledge__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Knowledge__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKnowledgeAccess().getLessThanSignKeyword_3_1()); }

	'<' 

{ after(grammarAccess.getKnowledgeAccess().getLessThanSignKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Knowledge__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Knowledge__Group_3__2__Impl
	rule__Knowledge__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Knowledge__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKnowledgeAccess().getTuplesAssignment_3_2()); }
(rule__Knowledge__TuplesAssignment_3_2)
{ after(grammarAccess.getKnowledgeAccess().getTuplesAssignment_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Knowledge__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Knowledge__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Knowledge__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKnowledgeAccess().getGreaterThanSignKeyword_3_3()); }

	'>' 

{ after(grammarAccess.getKnowledgeAccess().getGreaterThanSignKeyword_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Interface__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface__Group__0__Impl
	rule__Interface__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getAttributesAssignment_0()); }
(rule__Interface__AttributesAssignment_0)
{ after(grammarAccess.getInterfaceAccess().getAttributesAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Interface__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getGroup_1()); }
(rule__Interface__Group_1__0)*
{ after(grammarAccess.getInterfaceAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Interface__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface__Group_1__0__Impl
	rule__Interface__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getInterfaceAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Interface__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getAttributesAssignment_1_1()); }
(rule__Interface__AttributesAssignment_1_1)
{ after(grammarAccess.getInterfaceAccess().getAttributesAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IdAttributeDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IdAttributeDefinition__Group__0__Impl
	rule__IdAttributeDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IdAttributeDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdAttributeDefinitionAccess().getIdKeyword_0()); }

	'id' 

{ after(grammarAccess.getIdAttributeDefinitionAccess().getIdKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IdAttributeDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IdAttributeDefinition__Group__1__Impl
	rule__IdAttributeDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IdAttributeDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdAttributeDefinitionAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getIdAttributeDefinitionAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IdAttributeDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IdAttributeDefinition__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IdAttributeDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdAttributeDefinitionAccess().getComponentIdAssignment_2()); }
(rule__IdAttributeDefinition__ComponentIdAssignment_2)
{ after(grammarAccess.getIdAttributeDefinitionAccess().getComponentIdAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AttributeInstantiation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeInstantiation__Group__0__Impl
	rule__AttributeInstantiation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeInstantiation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeInstantiationAccess().getAttributeAssignment_0()); }
(rule__AttributeInstantiation__AttributeAssignment_0)
{ after(grammarAccess.getAttributeInstantiationAccess().getAttributeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeInstantiation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeInstantiation__Group__1__Impl
	rule__AttributeInstantiation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeInstantiation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeInstantiationAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getAttributeInstantiationAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeInstantiation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeInstantiation__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeInstantiation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeInstantiationAccess().getValueAssignment_2()); }
(rule__AttributeInstantiation__ValueAssignment_2)
{ after(grammarAccess.getAttributeInstantiationAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FunctionDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDeclaration__Group__0__Impl
	rule__FunctionDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getFunctionKeyword_0()); }

	'function' 

{ after(grammarAccess.getFunctionDeclarationAccess().getFunctionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDeclaration__Group__1__Impl
	rule__FunctionDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getReturnTypeAssignment_1()); }
(rule__FunctionDeclaration__ReturnTypeAssignment_1)
{ after(grammarAccess.getFunctionDeclarationAccess().getReturnTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDeclaration__Group__2__Impl
	rule__FunctionDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getNameAssignment_2()); }
(rule__FunctionDeclaration__NameAssignment_2)
{ after(grammarAccess.getFunctionDeclarationAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDeclaration__Group__3__Impl
	rule__FunctionDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getLeftParenthesisKeyword_3()); }

	'(' 

{ after(grammarAccess.getFunctionDeclarationAccess().getLeftParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDeclaration__Group__4__Impl
	rule__FunctionDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getGroup_4()); }
(rule__FunctionDeclaration__Group_4__0)?
{ after(grammarAccess.getFunctionDeclarationAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDeclaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDeclaration__Group__5__Impl
	rule__FunctionDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getFunctionDeclarationAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDeclaration__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDeclaration__Group__6__Impl
	rule__FunctionDeclaration__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getEqualsSignKeyword_6()); }

	'=' 

{ after(grammarAccess.getFunctionDeclarationAccess().getEqualsSignKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDeclaration__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDeclaration__Group__7__Impl
	rule__FunctionDeclaration__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getBodyAssignment_7()); }
(rule__FunctionDeclaration__BodyAssignment_7)
{ after(grammarAccess.getFunctionDeclarationAccess().getBodyAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDeclaration__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDeclaration__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getSemicolonKeyword_8()); }

	';' 

{ after(grammarAccess.getFunctionDeclarationAccess().getSemicolonKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__FunctionDeclaration__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDeclaration__Group_4__0__Impl
	rule__FunctionDeclaration__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getParametersAssignment_4_0()); }
(rule__FunctionDeclaration__ParametersAssignment_4_0)
{ after(grammarAccess.getFunctionDeclarationAccess().getParametersAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDeclaration__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDeclaration__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getGroup_4_1()); }
(rule__FunctionDeclaration__Group_4_1__0)*
{ after(grammarAccess.getFunctionDeclarationAccess().getGroup_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionDeclaration__Group_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDeclaration__Group_4_1__0__Impl
	rule__FunctionDeclaration__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group_4_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getCommaKeyword_4_1_0()); }

	',' 

{ after(grammarAccess.getFunctionDeclarationAccess().getCommaKeyword_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDeclaration__Group_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDeclaration__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__Group_4_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getParametersAssignment_4_1_1()); }
(rule__FunctionDeclaration__ParametersAssignment_4_1_1)
{ after(grammarAccess.getFunctionDeclarationAccess().getParametersAssignment_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ProcessDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcessDeclaration__Group__0__Impl
	rule__ProcessDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessDeclarationAccess().getProcessKeyword_0()); }

	'process' 

{ after(grammarAccess.getProcessDeclarationAccess().getProcessKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcessDeclaration__Group__1__Impl
	rule__ProcessDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessDeclarationAccess().getNameAssignment_1()); }
(rule__ProcessDeclaration__NameAssignment_1)
{ after(grammarAccess.getProcessDeclarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcessDeclaration__Group__2__Impl
	rule__ProcessDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessDeclarationAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getProcessDeclarationAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcessDeclaration__Group__3__Impl
	rule__ProcessDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessDeclarationAccess().getGroup_3()); }
(rule__ProcessDeclaration__Group_3__0)?
{ after(grammarAccess.getProcessDeclarationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcessDeclaration__Group__4__Impl
	rule__ProcessDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessDeclarationAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getProcessDeclarationAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessDeclaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcessDeclaration__Group__5__Impl
	rule__ProcessDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessDeclaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessDeclarationAccess().getLeftCurlyBracketKeyword_5()); }

	'{' 

{ after(grammarAccess.getProcessDeclarationAccess().getLeftCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessDeclaration__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcessDeclaration__Group__6__Impl
	rule__ProcessDeclaration__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessDeclaration__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessDeclarationAccess().getBodyAssignment_6()); }
(rule__ProcessDeclaration__BodyAssignment_6)
{ after(grammarAccess.getProcessDeclarationAccess().getBodyAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessDeclaration__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcessDeclaration__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessDeclaration__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessDeclarationAccess().getRightCurlyBracketKeyword_7()); }

	'}' 

{ after(grammarAccess.getProcessDeclarationAccess().getRightCurlyBracketKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__ProcessDeclaration__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcessDeclaration__Group_3__0__Impl
	rule__ProcessDeclaration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessDeclaration__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessDeclarationAccess().getParametersAssignment_3_0()); }
(rule__ProcessDeclaration__ParametersAssignment_3_0)
{ after(grammarAccess.getProcessDeclarationAccess().getParametersAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessDeclaration__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcessDeclaration__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessDeclaration__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessDeclarationAccess().getGroup_3_1()); }
(rule__ProcessDeclaration__Group_3_1__0)*
{ after(grammarAccess.getProcessDeclarationAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ProcessDeclaration__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcessDeclaration__Group_3_1__0__Impl
	rule__ProcessDeclaration__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessDeclaration__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessDeclarationAccess().getCommaKeyword_3_1_0()); }

	',' 

{ after(grammarAccess.getProcessDeclarationAccess().getCommaKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessDeclaration__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcessDeclaration__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessDeclaration__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessDeclarationAccess().getParametersAssignment_3_1_1()); }
(rule__ProcessDeclaration__ParametersAssignment_3_1_1)
{ after(grammarAccess.getProcessDeclarationAccess().getParametersAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Variable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group__0__Impl
	rule__Variable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getTypeAssignment_0()); }
(rule__Variable__TypeAssignment_0)
{ after(grammarAccess.getVariableAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getNameAssignment_1()); }
(rule__Variable__NameAssignment_1)
{ after(grammarAccess.getVariableAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Command__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_5__0__Impl
	rule__Command__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getLeftCurlyBracketKeyword_5_0()); }

	'{' 

{ after(grammarAccess.getCommandAccess().getLeftCurlyBracketKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_5__1__Impl
	rule__Command__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getBlockParserRuleCall_5_1()); }
	ruleBlock
{ after(grammarAccess.getCommandAccess().getBlockParserRuleCall_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getRightCurlyBracketKeyword_5_2()); }

	'}' 

{ after(grammarAccess.getCommandAccess().getRightCurlyBracketKeyword_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__VariableDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group__0__Impl
	rule__VariableDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getDeclaredVariableAssignment_0()); }
(rule__VariableDeclaration__DeclaredVariableAssignment_0)
{ after(grammarAccess.getVariableDeclarationAccess().getDeclaredVariableAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group__1__Impl
	rule__VariableDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getGroup_1()); }
(rule__VariableDeclaration__Group_1__0)?
{ after(grammarAccess.getVariableDeclarationAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getVariableDeclarationAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__VariableDeclaration__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group_1__0__Impl
	rule__VariableDeclaration__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getEqualsSignKeyword_1_0()); }

	'=' 

{ after(grammarAccess.getVariableDeclarationAccess().getEqualsSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getInitAssignment_1_1()); }
(rule__VariableDeclaration__InitAssignment_1_1)
{ after(grammarAccess.getVariableDeclarationAccess().getInitAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ReplaceAction__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReplaceAction__Group__0__Impl
	rule__ReplaceAction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplaceAction__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReplaceActionAccess().getReplaceKeyword_0()); }

	'replace' 

{ after(grammarAccess.getReplaceActionAccess().getReplaceKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReplaceAction__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReplaceAction__Group__1__Impl
	rule__ReplaceAction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplaceAction__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReplaceActionAccess().getLeftSquareBracketKeyword_1()); }

	'[' 

{ after(grammarAccess.getReplaceActionAccess().getLeftSquareBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReplaceAction__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReplaceAction__Group__2__Impl
	rule__ReplaceAction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplaceAction__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReplaceActionAccess().getTemplateAssignment_2()); }
(rule__ReplaceAction__TemplateAssignment_2)
{ after(grammarAccess.getReplaceActionAccess().getTemplateAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReplaceAction__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReplaceAction__Group__3__Impl
	rule__ReplaceAction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplaceAction__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReplaceActionAccess().getHyphenMinusGreaterThanSignKeyword_3()); }

	'->' 

{ after(grammarAccess.getReplaceActionAccess().getHyphenMinusGreaterThanSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReplaceAction__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReplaceAction__Group__4__Impl
	rule__ReplaceAction__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplaceAction__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReplaceActionAccess().getTupleAssignment_4()); }
(rule__ReplaceAction__TupleAssignment_4)
{ after(grammarAccess.getReplaceActionAccess().getTupleAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReplaceAction__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReplaceAction__Group__5__Impl
	rule__ReplaceAction__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplaceAction__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReplaceActionAccess().getRightSquareBracketKeyword_5()); }

	']' 

{ after(grammarAccess.getReplaceActionAccess().getRightSquareBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReplaceAction__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReplaceAction__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplaceAction__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReplaceActionAccess().getSemicolonKeyword_6()); }

	';' 

{ after(grammarAccess.getReplaceActionAccess().getSemicolonKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__GetAction__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GetAction__Group__0__Impl
	rule__GetAction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GetAction__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGetActionAccess().getGetKeyword_0()); }

	'get' 

{ after(grammarAccess.getGetActionAccess().getGetKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GetAction__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GetAction__Group__1__Impl
	rule__GetAction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GetAction__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGetActionAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getGetActionAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GetAction__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GetAction__Group__2__Impl
	rule__GetAction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GetAction__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGetActionAccess().getTemplateAssignment_2()); }
(rule__GetAction__TemplateAssignment_2)
{ after(grammarAccess.getGetActionAccess().getTemplateAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GetAction__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GetAction__Group__3__Impl
	rule__GetAction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GetAction__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGetActionAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getGetActionAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GetAction__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GetAction__Group__4__Impl
	rule__GetAction__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__GetAction__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGetActionAccess().getCommercialAtKeyword_4()); }

	'@' 

{ after(grammarAccess.getGetActionAccess().getCommercialAtKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GetAction__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GetAction__Group__5__Impl
	rule__GetAction__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__GetAction__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGetActionAccess().getTargetAssignment_5()); }
(rule__GetAction__TargetAssignment_5)
{ after(grammarAccess.getGetActionAccess().getTargetAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GetAction__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GetAction__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GetAction__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGetActionAccess().getSemicolonKeyword_6()); }

	';' 

{ after(grammarAccess.getGetActionAccess().getSemicolonKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__QueryAction__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QueryAction__Group__0__Impl
	rule__QueryAction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryAction__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQueryActionAccess().getQueryKeyword_0()); }

	'query' 

{ after(grammarAccess.getQueryActionAccess().getQueryKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QueryAction__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QueryAction__Group__1__Impl
	rule__QueryAction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryAction__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQueryActionAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getQueryActionAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QueryAction__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QueryAction__Group__2__Impl
	rule__QueryAction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryAction__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQueryActionAccess().getTemplateAssignment_2()); }
(rule__QueryAction__TemplateAssignment_2)
{ after(grammarAccess.getQueryActionAccess().getTemplateAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QueryAction__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QueryAction__Group__3__Impl
	rule__QueryAction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryAction__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQueryActionAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getQueryActionAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QueryAction__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QueryAction__Group__4__Impl
	rule__QueryAction__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryAction__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQueryActionAccess().getCommercialAtKeyword_4()); }

	'@' 

{ after(grammarAccess.getQueryActionAccess().getCommercialAtKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QueryAction__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QueryAction__Group__5__Impl
	rule__QueryAction__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryAction__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQueryActionAccess().getTargetAssignment_5()); }
(rule__QueryAction__TargetAssignment_5)
{ after(grammarAccess.getQueryActionAccess().getTargetAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QueryAction__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QueryAction__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryAction__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQueryActionAccess().getSemicolonKeyword_6()); }

	';' 

{ after(grammarAccess.getQueryActionAccess().getSemicolonKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__PutAction__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PutAction__Group__0__Impl
	rule__PutAction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PutAction__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPutActionAccess().getPutKeyword_0()); }

	'put' 

{ after(grammarAccess.getPutActionAccess().getPutKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PutAction__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PutAction__Group__1__Impl
	rule__PutAction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PutAction__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPutActionAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getPutActionAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PutAction__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PutAction__Group__2__Impl
	rule__PutAction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PutAction__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPutActionAccess().getTupleAssignment_2()); }
(rule__PutAction__TupleAssignment_2)
{ after(grammarAccess.getPutActionAccess().getTupleAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PutAction__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PutAction__Group__3__Impl
	rule__PutAction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PutAction__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPutActionAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getPutActionAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PutAction__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PutAction__Group__4__Impl
	rule__PutAction__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PutAction__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPutActionAccess().getCommercialAtKeyword_4()); }

	'@' 

{ after(grammarAccess.getPutActionAccess().getCommercialAtKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PutAction__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PutAction__Group__5__Impl
	rule__PutAction__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__PutAction__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPutActionAccess().getTargetAssignment_5()); }
(rule__PutAction__TargetAssignment_5)
{ after(grammarAccess.getPutActionAccess().getTargetAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PutAction__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PutAction__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PutAction__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPutActionAccess().getSemicolonKeyword_6()); }

	';' 

{ after(grammarAccess.getPutActionAccess().getSemicolonKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

















rule__Tuple__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Tuple__Group__0__Impl
	rule__Tuple__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleAccess().getFieldsAssignment_0()); }
(rule__Tuple__FieldsAssignment_0)
{ after(grammarAccess.getTupleAccess().getFieldsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Tuple__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Tuple__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleAccess().getGroup_1()); }
(rule__Tuple__Group_1__0)*
{ after(grammarAccess.getTupleAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Tuple__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Tuple__Group_1__0__Impl
	rule__Tuple__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getTupleAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Tuple__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Tuple__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleAccess().getFieldsAssignment_1_1()); }
(rule__Tuple__FieldsAssignment_1_1)
{ after(grammarAccess.getTupleAccess().getFieldsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Template__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group__0__Impl
	rule__Template__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getFieldsAssignment_0()); }
(rule__Template__FieldsAssignment_0)
{ after(grammarAccess.getTemplateAccess().getFieldsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Template__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getGroup_1()); }
(rule__Template__Group_1__0)*
{ after(grammarAccess.getTemplateAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Template__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group_1__0__Impl
	rule__Template__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getTemplateAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Template__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getFieldsAssignment_1_1()); }
(rule__Template__FieldsAssignment_1_1)
{ after(grammarAccess.getTemplateAccess().getFieldsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AnyFormalField__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnyFormalField__Group__0__Impl
	rule__AnyFormalField__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnyFormalField__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnyFormalFieldAccess().getAnyFormalFieldAction_0()); }
(

)
{ after(grammarAccess.getAnyFormalFieldAccess().getAnyFormalFieldAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnyFormalField__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnyFormalField__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnyFormalField__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnyFormalFieldAccess().getAsteriskKeyword_1()); }

	'*' 

{ after(grammarAccess.getAnyFormalFieldAccess().getAsteriskKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypedFormalField__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedFormalField__Group__0__Impl
	rule__TypedFormalField__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedFormalField__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedFormalFieldAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getTypedFormalFieldAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypedFormalField__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedFormalField__Group__1__Impl
	rule__TypedFormalField__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedFormalField__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedFormalFieldAccess().getTypeAssignment_1()); }
(rule__TypedFormalField__TypeAssignment_1)
{ after(grammarAccess.getTypedFormalFieldAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypedFormalField__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedFormalField__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedFormalField__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedFormalFieldAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getTypedFormalFieldAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FormalField__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FormalField__Group__0__Impl
	rule__FormalField__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalField__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalFieldAccess().getQuestionMarkKeyword_0()); }

	'?' 

{ after(grammarAccess.getFormalFieldAccess().getQuestionMarkKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FormalField__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FormalField__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalField__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalFieldAccess().getAlternatives_1()); }
(rule__FormalField__Alternatives_1)
{ after(grammarAccess.getFormalFieldAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FormalField__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FormalField__Group_1_0__0__Impl
	rule__FormalField__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalField__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalFieldAccess().getStandardFormalFieldAction_1_0_0()); }
(

)
{ after(grammarAccess.getFormalFieldAccess().getStandardFormalFieldAction_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FormalField__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FormalField__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalField__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalFieldAccess().getReferenceAssignment_1_0_1()); }
(rule__FormalField__ReferenceAssignment_1_0_1)
{ after(grammarAccess.getFormalFieldAccess().getReferenceAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FormalField__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FormalField__Group_1_1__0__Impl
	rule__FormalField__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalField__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalFieldAccess().getFormalFieldWithDeclarationAction_1_1_0()); }
(

)
{ after(grammarAccess.getFormalFieldAccess().getFormalFieldWithDeclarationAction_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FormalField__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FormalField__Group_1_1__1__Impl
	rule__FormalField__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalField__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalFieldAccess().getLeftSquareBracketKeyword_1_1_1()); }

	'[' 

{ after(grammarAccess.getFormalFieldAccess().getLeftSquareBracketKeyword_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FormalField__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FormalField__Group_1_1__2__Impl
	rule__FormalField__Group_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalField__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalFieldAccess().getVariableAssignment_1_1_2()); }
(rule__FormalField__VariableAssignment_1_1_2)
{ after(grammarAccess.getFormalFieldAccess().getVariableAssignment_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FormalField__Group_1_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FormalField__Group_1_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalField__Group_1_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalFieldAccess().getRightSquareBracketKeyword_1_1_3()); }

	']' 

{ after(grammarAccess.getFormalFieldAccess().getRightSquareBracketKeyword_1_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__While__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__While__Group__0__Impl
	rule__While__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileAccess().getWhileKeyword_0()); }

	'while' 

{ after(grammarAccess.getWhileAccess().getWhileKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__While__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__While__Group__1__Impl
	rule__While__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getWhileAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__While__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__While__Group__2__Impl
	rule__While__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileAccess().getGuardAssignment_2()); }
(rule__While__GuardAssignment_2)
{ after(grammarAccess.getWhileAccess().getGuardAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__While__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__While__Group__3__Impl
	rule__While__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getWhileAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__While__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__While__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileAccess().getBodyAssignment_4()); }
(rule__While__BodyAssignment_4)
{ after(grammarAccess.getWhileAccess().getBodyAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__IfThenElse__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfThenElse__Group__0__Impl
	rule__IfThenElse__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElse__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfThenElseAccess().getIfKeyword_0()); }

	'if' 

{ after(grammarAccess.getIfThenElseAccess().getIfKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfThenElse__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfThenElse__Group__1__Impl
	rule__IfThenElse__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElse__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfThenElseAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getIfThenElseAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfThenElse__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfThenElse__Group__2__Impl
	rule__IfThenElse__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElse__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfThenElseAccess().getGuardAssignment_2()); }
(rule__IfThenElse__GuardAssignment_2)
{ after(grammarAccess.getIfThenElseAccess().getGuardAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfThenElse__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfThenElse__Group__3__Impl
	rule__IfThenElse__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElse__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfThenElseAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getIfThenElseAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfThenElse__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfThenElse__Group__4__Impl
	rule__IfThenElse__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElse__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfThenElseAccess().getThenBranchAssignment_4()); }
(rule__IfThenElse__ThenBranchAssignment_4)
{ after(grammarAccess.getIfThenElseAccess().getThenBranchAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfThenElse__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfThenElse__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElse__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfThenElseAccess().getGroup_5()); }
(rule__IfThenElse__Group_5__0)?
{ after(grammarAccess.getIfThenElseAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__IfThenElse__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfThenElse__Group_5__0__Impl
	rule__IfThenElse__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElse__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfThenElseAccess().getElseKeyword_5_0()); }
(
	'else' 
)
{ after(grammarAccess.getIfThenElseAccess().getElseKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfThenElse__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfThenElse__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElse__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfThenElseAccess().getElseBranchAssignment_5_1()); }
(rule__IfThenElse__ElseBranchAssignment_5_1)
{ after(grammarAccess.getIfThenElseAccess().getElseBranchAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Block__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__0__Impl
	rule__Block__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getBlockAction_0()); }
(

)
{ after(grammarAccess.getBlockAccess().getBlockAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getCommandsAssignment_1()); }
(rule__Block__CommandsAssignment_1)*
{ after(grammarAccess.getBlockAccess().getCommandsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Disjunction__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Disjunction__Group__0__Impl
	rule__Disjunction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Disjunction__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDisjunctionAccess().getConjunctionParserRuleCall_0()); }
	ruleConjunction
{ after(grammarAccess.getDisjunctionAccess().getConjunctionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Disjunction__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Disjunction__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Disjunction__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDisjunctionAccess().getGroup_1()); }
(rule__Disjunction__Group_1__0)?
{ after(grammarAccess.getDisjunctionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Disjunction__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Disjunction__Group_1__0__Impl
	rule__Disjunction__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Disjunction__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDisjunctionAccess().getDisjunctionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getDisjunctionAccess().getDisjunctionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Disjunction__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Disjunction__Group_1__1__Impl
	rule__Disjunction__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Disjunction__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDisjunctionAccess().getVerticalLineKeyword_1_1()); }

	'|' 

{ after(grammarAccess.getDisjunctionAccess().getVerticalLineKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Disjunction__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Disjunction__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Disjunction__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDisjunctionAccess().getRightAssignment_1_2()); }
(rule__Disjunction__RightAssignment_1_2)
{ after(grammarAccess.getDisjunctionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Conjunction__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conjunction__Group__0__Impl
	rule__Conjunction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Conjunction__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConjunctionAccess().getNegationParserRuleCall_0()); }
	ruleNegation
{ after(grammarAccess.getConjunctionAccess().getNegationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Conjunction__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conjunction__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Conjunction__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConjunctionAccess().getGroup_1()); }
(rule__Conjunction__Group_1__0)?
{ after(grammarAccess.getConjunctionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Conjunction__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conjunction__Group_1__0__Impl
	rule__Conjunction__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Conjunction__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConjunctionAccess().getConjunctionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getConjunctionAccess().getConjunctionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Conjunction__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conjunction__Group_1__1__Impl
	rule__Conjunction__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Conjunction__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConjunctionAccess().getAmpersandKeyword_1_1()); }

	'&' 

{ after(grammarAccess.getConjunctionAccess().getAmpersandKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Conjunction__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conjunction__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Conjunction__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConjunctionAccess().getRightAssignment_1_2()); }
(rule__Conjunction__RightAssignment_1_2)
{ after(grammarAccess.getConjunctionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Negation__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Negation__Group_0__0__Impl
	rule__Negation__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Negation__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNegationAccess().getExclamationMarkKeyword_0_0()); }

	'!' 

{ after(grammarAccess.getNegationAccess().getExclamationMarkKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Negation__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Negation__Group_0__1__Impl
	rule__Negation__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Negation__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNegationAccess().getNegationAction_0_1()); }
(

)
{ after(grammarAccess.getNegationAccess().getNegationAction_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Negation__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Negation__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Negation__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNegationAccess().getArgAssignment_0_2()); }
(rule__Negation__ArgAssignment_0_2)
{ after(grammarAccess.getNegationAccess().getArgAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Relation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group__0__Impl
	rule__Relation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getSummationSubtractionParserRuleCall_0()); }
	ruleSummationSubtraction
{ after(grammarAccess.getRelationAccess().getSummationSubtractionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getGroup_1()); }
(rule__Relation__Group_1__0)?
{ after(grammarAccess.getRelationAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Relation__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group_1__0__Impl
	rule__Relation__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getRelationLeftAction_1_0()); }
(

)
{ after(grammarAccess.getRelationAccess().getRelationLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group_1__1__Impl
	rule__Relation__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getRelAssignment_1_1()); }
(rule__Relation__RelAssignment_1_1)
{ after(grammarAccess.getRelationAccess().getRelAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getRightAssignment_1_2()); }
(rule__Relation__RightAssignment_1_2)
{ after(grammarAccess.getRelationAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SummationSubtraction__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SummationSubtraction__Group__0__Impl
	rule__SummationSubtraction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SummationSubtraction__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSummationSubtractionAccess().getMultiplicationDivisionParserRuleCall_0()); }
	ruleMultiplicationDivision
{ after(grammarAccess.getSummationSubtractionAccess().getMultiplicationDivisionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SummationSubtraction__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SummationSubtraction__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SummationSubtraction__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSummationSubtractionAccess().getGroup_1()); }
(rule__SummationSubtraction__Group_1__0)?
{ after(grammarAccess.getSummationSubtractionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SummationSubtraction__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SummationSubtraction__Group_1__0__Impl
	rule__SummationSubtraction__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SummationSubtraction__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSummationSubtractionAccess().getSummationSubtractionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getSummationSubtractionAccess().getSummationSubtractionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SummationSubtraction__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SummationSubtraction__Group_1__1__Impl
	rule__SummationSubtraction__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SummationSubtraction__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSummationSubtractionAccess().getOpAssignment_1_1()); }
(rule__SummationSubtraction__OpAssignment_1_1)
{ after(grammarAccess.getSummationSubtractionAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SummationSubtraction__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SummationSubtraction__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SummationSubtraction__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSummationSubtractionAccess().getRightAssignment_1_2()); }
(rule__SummationSubtraction__RightAssignment_1_2)
{ after(grammarAccess.getSummationSubtractionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MultiplicationDivision__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicationDivision__Group__0__Impl
	rule__MultiplicationDivision__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationDivision__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationDivisionAccess().getBaseExpressionParserRuleCall_0()); }
	ruleBaseExpression
{ after(grammarAccess.getMultiplicationDivisionAccess().getBaseExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicationDivision__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicationDivision__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationDivision__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationDivisionAccess().getGroup_1()); }
(rule__MultiplicationDivision__Group_1__0)?
{ after(grammarAccess.getMultiplicationDivisionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MultiplicationDivision__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicationDivision__Group_1__0__Impl
	rule__MultiplicationDivision__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationDivision__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationDivisionAccess().getMultiplicationDivisionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getMultiplicationDivisionAccess().getMultiplicationDivisionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicationDivision__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicationDivision__Group_1__1__Impl
	rule__MultiplicationDivision__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationDivision__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationDivisionAccess().getOpAssignment_1_1()); }
(rule__MultiplicationDivision__OpAssignment_1_1)
{ after(grammarAccess.getMultiplicationDivisionAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicationDivision__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicationDivision__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationDivision__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationDivisionAccess().getRightAssignment_1_2()); }
(rule__MultiplicationDivision__RightAssignment_1_2)
{ after(grammarAccess.getMultiplicationDivisionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BaseExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BaseExpression__Group_0__0__Impl
	rule__BaseExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBaseExpressionAccess().getTrueKeyword_0_0()); }

	'true' 

{ after(grammarAccess.getBaseExpressionAccess().getTrueKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BaseExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BaseExpression__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBaseExpressionAccess().getTrueExpressionAction_0_1()); }
(

)
{ after(grammarAccess.getBaseExpressionAccess().getTrueExpressionAction_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BaseExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BaseExpression__Group_1__0__Impl
	rule__BaseExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBaseExpressionAccess().getFalseKeyword_1_0()); }

	'false' 

{ after(grammarAccess.getBaseExpressionAccess().getFalseKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BaseExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BaseExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBaseExpressionAccess().getFalseExpressionAction_1_1()); }
(

)
{ after(grammarAccess.getBaseExpressionAccess().getFalseExpressionAction_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BaseExpression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BaseExpression__Group_2__0__Impl
	rule__BaseExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseExpression__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBaseExpressionAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getBaseExpressionAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BaseExpression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BaseExpression__Group_2__1__Impl
	rule__BaseExpression__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseExpression__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBaseExpressionAccess().getExpressionParserRuleCall_2_1()); }
	ruleExpression
{ after(grammarAccess.getBaseExpressionAccess().getExpressionParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BaseExpression__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BaseExpression__Group_2__2__Impl
	rule__BaseExpression__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseExpression__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBaseExpressionAccess().getGroup_2_2()); }
(rule__BaseExpression__Group_2_2__0)?
{ after(grammarAccess.getBaseExpressionAccess().getGroup_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BaseExpression__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BaseExpression__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseExpression__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBaseExpressionAccess().getRightParenthesisKeyword_2_3()); }

	')' 

{ after(grammarAccess.getBaseExpressionAccess().getRightParenthesisKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__BaseExpression__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BaseExpression__Group_2_2__0__Impl
	rule__BaseExpression__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseExpression__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBaseExpressionAccess().getIfThenElseExpressionGuardAction_2_2_0()); }
(

)
{ after(grammarAccess.getBaseExpressionAccess().getIfThenElseExpressionGuardAction_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BaseExpression__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BaseExpression__Group_2_2__1__Impl
	rule__BaseExpression__Group_2_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseExpression__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBaseExpressionAccess().getQuestionMarkKeyword_2_2_1()); }

	'?' 

{ after(grammarAccess.getBaseExpressionAccess().getQuestionMarkKeyword_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BaseExpression__Group_2_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BaseExpression__Group_2_2__2__Impl
	rule__BaseExpression__Group_2_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseExpression__Group_2_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBaseExpressionAccess().getThenBranchAssignment_2_2_2()); }
(rule__BaseExpression__ThenBranchAssignment_2_2_2)
{ after(grammarAccess.getBaseExpressionAccess().getThenBranchAssignment_2_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BaseExpression__Group_2_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BaseExpression__Group_2_2__3__Impl
	rule__BaseExpression__Group_2_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseExpression__Group_2_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBaseExpressionAccess().getColonKeyword_2_2_3()); }

	':' 

{ after(grammarAccess.getBaseExpressionAccess().getColonKeyword_2_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BaseExpression__Group_2_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BaseExpression__Group_2_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseExpression__Group_2_2__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBaseExpressionAccess().getElseBranchAssignment_2_2_4()); }
(rule__BaseExpression__ElseBranchAssignment_2_2_4)
{ after(grammarAccess.getBaseExpressionAccess().getElseBranchAssignment_2_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__SelfExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelfExpression__Group__0__Impl
	rule__SelfExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelfExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelfExpressionAccess().getSelfExpressionAction_0()); }
(

)
{ after(grammarAccess.getSelfExpressionAccess().getSelfExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelfExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelfExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelfExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelfExpressionAccess().getSelfKeyword_1()); }

	'self' 

{ after(grammarAccess.getSelfExpressionAccess().getSelfKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__ReferenceCallAccess__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceCallAccess__Group__0__Impl
	rule__ReferenceCallAccess__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceCallAccess__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceCallAccessAccess().getReferenceParserRuleCall_0()); }
	ruleReference
{ after(grammarAccess.getReferenceCallAccessAccess().getReferenceParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceCallAccess__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceCallAccess__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceCallAccess__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceCallAccessAccess().getGroup_1()); }
(rule__ReferenceCallAccess__Group_1__0)?
{ after(grammarAccess.getReferenceCallAccessAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ReferenceCallAccess__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceCallAccess__Group_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceCallAccess__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceCallAccessAccess().getGroup_1_0()); }
(rule__ReferenceCallAccess__Group_1_0__0)
{ after(grammarAccess.getReferenceCallAccessAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__ReferenceCallAccess__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceCallAccess__Group_1_0__0__Impl
	rule__ReferenceCallAccess__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceCallAccess__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceCallAccessAccess().getCallFunctionAction_1_0_0()); }
(

)
{ after(grammarAccess.getReferenceCallAccessAccess().getCallFunctionAction_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceCallAccess__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceCallAccess__Group_1_0__1__Impl
	rule__ReferenceCallAccess__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceCallAccess__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceCallAccessAccess().getLeftParenthesisKeyword_1_0_1()); }

	'(' 

{ after(grammarAccess.getReferenceCallAccessAccess().getLeftParenthesisKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceCallAccess__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceCallAccess__Group_1_0__2__Impl
	rule__ReferenceCallAccess__Group_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceCallAccess__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceCallAccessAccess().getGroup_1_0_2()); }
(rule__ReferenceCallAccess__Group_1_0_2__0)?
{ after(grammarAccess.getReferenceCallAccessAccess().getGroup_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceCallAccess__Group_1_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceCallAccess__Group_1_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceCallAccess__Group_1_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceCallAccessAccess().getRightParenthesisKeyword_1_0_3()); }

	')' 

{ after(grammarAccess.getReferenceCallAccessAccess().getRightParenthesisKeyword_1_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ReferenceCallAccess__Group_1_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceCallAccess__Group_1_0_2__0__Impl
	rule__ReferenceCallAccess__Group_1_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceCallAccess__Group_1_0_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceCallAccessAccess().getArgsAssignment_1_0_2_0()); }
(rule__ReferenceCallAccess__ArgsAssignment_1_0_2_0)
{ after(grammarAccess.getReferenceCallAccessAccess().getArgsAssignment_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceCallAccess__Group_1_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceCallAccess__Group_1_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceCallAccess__Group_1_0_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceCallAccessAccess().getGroup_1_0_2_1()); }
(rule__ReferenceCallAccess__Group_1_0_2_1__0)*
{ after(grammarAccess.getReferenceCallAccessAccess().getGroup_1_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ReferenceCallAccess__Group_1_0_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceCallAccess__Group_1_0_2_1__0__Impl
	rule__ReferenceCallAccess__Group_1_0_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceCallAccess__Group_1_0_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceCallAccessAccess().getCommaKeyword_1_0_2_1_0()); }

	',' 

{ after(grammarAccess.getReferenceCallAccessAccess().getCommaKeyword_1_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceCallAccess__Group_1_0_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceCallAccess__Group_1_0_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceCallAccess__Group_1_0_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceCallAccessAccess().getArgsAssignment_1_0_2_1_1()); }
(rule__ReferenceCallAccess__ArgsAssignment_1_0_2_1_1)
{ after(grammarAccess.getReferenceCallAccessAccess().getArgsAssignment_1_0_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NumberLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumberLiteral__Group__0__Impl
	rule__NumberLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberLiteralAccess().getIntpartAssignment_0()); }
(rule__NumberLiteral__IntpartAssignment_0)
{ after(grammarAccess.getNumberLiteralAccess().getIntpartAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NumberLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumberLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberLiteralAccess().getGroup_1()); }
(rule__NumberLiteral__Group_1__0)?
{ after(grammarAccess.getNumberLiteralAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NumberLiteral__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumberLiteral__Group_1__0__Impl
	rule__NumberLiteral__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberLiteral__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberLiteralAccess().getIsDoubleAssignment_1_0()); }
(rule__NumberLiteral__IsDoubleAssignment_1_0)
{ after(grammarAccess.getNumberLiteralAccess().getIsDoubleAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NumberLiteral__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumberLiteral__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberLiteral__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberLiteralAccess().getDecimalAssignment_1_1()); }
(rule__NumberLiteral__DecimalAssignment_1_1)
{ after(grammarAccess.getNumberLiteralAccess().getDecimalAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FactorialExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FactorialExpression__Group__0__Impl
	rule__FactorialExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FactorialExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFactorialExpressionAccess().getFactorialKeyword_0()); }

	'factorial' 

{ after(grammarAccess.getFactorialExpressionAccess().getFactorialKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FactorialExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FactorialExpression__Group__1__Impl
	rule__FactorialExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FactorialExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFactorialExpressionAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getFactorialExpressionAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FactorialExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FactorialExpression__Group__2__Impl
	rule__FactorialExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FactorialExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFactorialExpressionAccess().getArgAssignment_2()); }
(rule__FactorialExpression__ArgAssignment_2)
{ after(grammarAccess.getFactorialExpressionAccess().getArgAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FactorialExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FactorialExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FactorialExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFactorialExpressionAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getFactorialExpressionAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__LogExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogExpression__Group__0__Impl
	rule__LogExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogExpressionAccess().getLnKeyword_0()); }

	'ln' 

{ after(grammarAccess.getLogExpressionAccess().getLnKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LogExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogExpression__Group__1__Impl
	rule__LogExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LogExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogExpressionAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getLogExpressionAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LogExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogExpression__Group__2__Impl
	rule__LogExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LogExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogExpressionAccess().getArgAssignment_2()); }
(rule__LogExpression__ArgAssignment_2)
{ after(grammarAccess.getLogExpressionAccess().getArgAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LogExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogExpressionAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getLogExpressionAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ModExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModExpression__Group__0__Impl
	rule__ModExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModExpressionAccess().getModKeyword_0()); }

	'mod' 

{ after(grammarAccess.getModExpressionAccess().getModKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModExpression__Group__1__Impl
	rule__ModExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModExpressionAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getModExpressionAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModExpression__Group__2__Impl
	rule__ModExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ModExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModExpressionAccess().getArgAssignment_2()); }
(rule__ModExpression__ArgAssignment_2)
{ after(grammarAccess.getModExpressionAccess().getArgAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModExpression__Group__3__Impl
	rule__ModExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ModExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModExpressionAccess().getCommaKeyword_3()); }

	',' 

{ after(grammarAccess.getModExpressionAccess().getCommaKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModExpression__Group__4__Impl
	rule__ModExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ModExpression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModExpressionAccess().getModAssignment_4()); }
(rule__ModExpression__ModAssignment_4)
{ after(grammarAccess.getModExpressionAccess().getModAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModExpression__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModExpression__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModExpression__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModExpressionAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getModExpressionAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__PowExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PowExpression__Group__0__Impl
	rule__PowExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PowExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPowExpressionAccess().getPowKeyword_0()); }

	'pow' 

{ after(grammarAccess.getPowExpressionAccess().getPowKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PowExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PowExpression__Group__1__Impl
	rule__PowExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PowExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPowExpressionAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getPowExpressionAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PowExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PowExpression__Group__2__Impl
	rule__PowExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PowExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPowExpressionAccess().getBaseAssignment_2()); }
(rule__PowExpression__BaseAssignment_2)
{ after(grammarAccess.getPowExpressionAccess().getBaseAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PowExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PowExpression__Group__3__Impl
	rule__PowExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PowExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPowExpressionAccess().getCommaKeyword_3()); }

	',' 

{ after(grammarAccess.getPowExpressionAccess().getCommaKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PowExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PowExpression__Group__4__Impl
	rule__PowExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PowExpression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPowExpressionAccess().getExpAssignment_4()); }
(rule__PowExpression__ExpAssignment_4)
{ after(grammarAccess.getPowExpressionAccess().getExpAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PowExpression__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PowExpression__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PowExpression__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPowExpressionAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getPowExpressionAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__FloorExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FloorExpression__Group__0__Impl
	rule__FloorExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FloorExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFloorExpressionAccess().getFloorKeyword_0()); }

	'floor' 

{ after(grammarAccess.getFloorExpressionAccess().getFloorKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FloorExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FloorExpression__Group__1__Impl
	rule__FloorExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FloorExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFloorExpressionAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getFloorExpressionAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FloorExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FloorExpression__Group__2__Impl
	rule__FloorExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FloorExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFloorExpressionAccess().getArgAssignment_2()); }
(rule__FloorExpression__ArgAssignment_2)
{ after(grammarAccess.getFloorExpressionAccess().getArgAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FloorExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FloorExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FloorExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFloorExpressionAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getFloorExpressionAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__CeilExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CeilExpression__Group__0__Impl
	rule__CeilExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CeilExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCeilExpressionAccess().getCeilKeyword_0()); }

	'ceil' 

{ after(grammarAccess.getCeilExpressionAccess().getCeilKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CeilExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CeilExpression__Group__1__Impl
	rule__CeilExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CeilExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCeilExpressionAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getCeilExpressionAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CeilExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CeilExpression__Group__2__Impl
	rule__CeilExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CeilExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCeilExpressionAccess().getArgAssignment_2()); }
(rule__CeilExpression__ArgAssignment_2)
{ after(grammarAccess.getCeilExpressionAccess().getArgAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CeilExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CeilExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CeilExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCeilExpressionAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getCeilExpressionAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__MinExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MinExpression__Group__0__Impl
	rule__MinExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MinExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMinExpressionAccess().getMinKeyword_0()); }

	'min' 

{ after(grammarAccess.getMinExpressionAccess().getMinKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MinExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MinExpression__Group__1__Impl
	rule__MinExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MinExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMinExpressionAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getMinExpressionAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MinExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MinExpression__Group__2__Impl
	rule__MinExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MinExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMinExpressionAccess().getLeftAssignment_2()); }
(rule__MinExpression__LeftAssignment_2)
{ after(grammarAccess.getMinExpressionAccess().getLeftAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MinExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MinExpression__Group__3__Impl
	rule__MinExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MinExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMinExpressionAccess().getCommaKeyword_3()); }

	',' 

{ after(grammarAccess.getMinExpressionAccess().getCommaKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MinExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MinExpression__Group__4__Impl
	rule__MinExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MinExpression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMinExpressionAccess().getRightAssignment_4()); }
(rule__MinExpression__RightAssignment_4)
{ after(grammarAccess.getMinExpressionAccess().getRightAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MinExpression__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MinExpression__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MinExpression__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMinExpressionAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getMinExpressionAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__MaxExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MaxExpression__Group__0__Impl
	rule__MaxExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMaxExpressionAccess().getManKeyword_0()); }

	'man' 

{ after(grammarAccess.getMaxExpressionAccess().getManKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MaxExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MaxExpression__Group__1__Impl
	rule__MaxExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMaxExpressionAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getMaxExpressionAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MaxExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MaxExpression__Group__2__Impl
	rule__MaxExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMaxExpressionAccess().getLeftAssignment_2()); }
(rule__MaxExpression__LeftAssignment_2)
{ after(grammarAccess.getMaxExpressionAccess().getLeftAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MaxExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MaxExpression__Group__3__Impl
	rule__MaxExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMaxExpressionAccess().getCommaKeyword_3()); }

	',' 

{ after(grammarAccess.getMaxExpressionAccess().getCommaKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MaxExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MaxExpression__Group__4__Impl
	rule__MaxExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxExpression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMaxExpressionAccess().getRightAssignment_4()); }
(rule__MaxExpression__RightAssignment_4)
{ after(grammarAccess.getMaxExpressionAccess().getRightAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MaxExpression__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MaxExpression__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxExpression__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMaxExpressionAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getMaxExpressionAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__SinExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SinExpression__Group__0__Impl
	rule__SinExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SinExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSinExpressionAccess().getSinKeyword_0()); }

	'sin' 

{ after(grammarAccess.getSinExpressionAccess().getSinKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SinExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SinExpression__Group__1__Impl
	rule__SinExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SinExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSinExpressionAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getSinExpressionAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SinExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SinExpression__Group__2__Impl
	rule__SinExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SinExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSinExpressionAccess().getArgAssignment_2()); }
(rule__SinExpression__ArgAssignment_2)
{ after(grammarAccess.getSinExpressionAccess().getArgAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SinExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SinExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SinExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSinExpressionAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getSinExpressionAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__CosExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CosExpression__Group__0__Impl
	rule__CosExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CosExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCosExpressionAccess().getCosKeyword_0()); }

	'cos' 

{ after(grammarAccess.getCosExpressionAccess().getCosKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CosExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CosExpression__Group__1__Impl
	rule__CosExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CosExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCosExpressionAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getCosExpressionAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CosExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CosExpression__Group__2__Impl
	rule__CosExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CosExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCosExpressionAccess().getArgAssignment_2()); }
(rule__CosExpression__ArgAssignment_2)
{ after(grammarAccess.getCosExpressionAccess().getArgAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CosExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CosExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CosExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCosExpressionAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getCosExpressionAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TanExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TanExpression__Group__0__Impl
	rule__TanExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TanExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTanExpressionAccess().getTanKeyword_0()); }

	'tan' 

{ after(grammarAccess.getTanExpressionAccess().getTanKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TanExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TanExpression__Group__1__Impl
	rule__TanExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TanExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTanExpressionAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getTanExpressionAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TanExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TanExpression__Group__2__Impl
	rule__TanExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TanExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTanExpressionAccess().getArgAssignment_2()); }
(rule__TanExpression__ArgAssignment_2)
{ after(grammarAccess.getTanExpressionAccess().getArgAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TanExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TanExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TanExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTanExpressionAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getTanExpressionAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ATanExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ATanExpression__Group__0__Impl
	rule__ATanExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ATanExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getATanExpressionAccess().getAtanKeyword_0()); }

	'atan' 

{ after(grammarAccess.getATanExpressionAccess().getAtanKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ATanExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ATanExpression__Group__1__Impl
	rule__ATanExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ATanExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getATanExpressionAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getATanExpressionAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ATanExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ATanExpression__Group__2__Impl
	rule__ATanExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ATanExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getATanExpressionAccess().getArgAssignment_2()); }
(rule__ATanExpression__ArgAssignment_2)
{ after(grammarAccess.getATanExpressionAccess().getArgAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ATanExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ATanExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ATanExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getATanExpressionAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getATanExpressionAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ASinExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASinExpression__Group__0__Impl
	rule__ASinExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ASinExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASinExpressionAccess().getAsinKeyword_0()); }

	'asin' 

{ after(grammarAccess.getASinExpressionAccess().getAsinKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASinExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASinExpression__Group__1__Impl
	rule__ASinExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ASinExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASinExpressionAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getASinExpressionAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASinExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASinExpression__Group__2__Impl
	rule__ASinExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ASinExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASinExpressionAccess().getArgAssignment_2()); }
(rule__ASinExpression__ArgAssignment_2)
{ after(grammarAccess.getASinExpressionAccess().getArgAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASinExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASinExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ASinExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASinExpressionAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getASinExpressionAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ACosExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ACosExpression__Group__0__Impl
	rule__ACosExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ACosExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getACosExpressionAccess().getAcosKeyword_0()); }

	'acos' 

{ after(grammarAccess.getACosExpressionAccess().getAcosKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ACosExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ACosExpression__Group__1__Impl
	rule__ACosExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ACosExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getACosExpressionAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getACosExpressionAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ACosExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ACosExpression__Group__2__Impl
	rule__ACosExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ACosExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getACosExpressionAccess().getArgAssignment_2()); }
(rule__ACosExpression__ArgAssignment_2)
{ after(grammarAccess.getACosExpressionAccess().getArgAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ACosExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ACosExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ACosExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getACosExpressionAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getACosExpressionAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__SystemDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SystemDeclaration__Group__0__Impl
	rule__SystemDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemDeclarationAccess().getSystemKeyword_0()); }

	'system' 

{ after(grammarAccess.getSystemDeclarationAccess().getSystemKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SystemDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SystemDeclaration__Group__1__Impl
	rule__SystemDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemDeclarationAccess().getNameAssignment_1()); }
(rule__SystemDeclaration__NameAssignment_1)
{ after(grammarAccess.getSystemDeclarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SystemDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SystemDeclaration__Group__2__Impl
	rule__SystemDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemDeclarationAccess().getEqualsSignKeyword_2()); }

	'=' 

{ after(grammarAccess.getSystemDeclarationAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SystemDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SystemDeclaration__Group__3__Impl
	rule__SystemDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemDeclarationAccess().getElementsAssignment_3()); }
(rule__SystemDeclaration__ElementsAssignment_3)
{ after(grammarAccess.getSystemDeclarationAccess().getElementsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SystemDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SystemDeclaration__Group__4__Impl
	rule__SystemDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemDeclarationAccess().getGroup_4()); }
(rule__SystemDeclaration__Group_4__0)*
{ after(grammarAccess.getSystemDeclarationAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SystemDeclaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SystemDeclaration__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemDeclaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemDeclarationAccess().getSemicolonKeyword_5()); }

	';' 

{ after(grammarAccess.getSystemDeclarationAccess().getSemicolonKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__SystemDeclaration__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SystemDeclaration__Group_4__0__Impl
	rule__SystemDeclaration__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemDeclaration__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemDeclarationAccess().getVerticalLineVerticalLineKeyword_4_0()); }

	'||' 

{ after(grammarAccess.getSystemDeclarationAccess().getVerticalLineVerticalLineKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SystemDeclaration__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SystemDeclaration__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemDeclaration__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemDeclarationAccess().getElementsAssignment_4_1()); }
(rule__SystemDeclaration__ElementsAssignment_4_1)
{ after(grammarAccess.getSystemDeclarationAccess().getElementsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Model__ConstantsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getConstantsConstantDeclarationParserRuleCall_0_0()); }
	ruleConstantDeclaration{ after(grammarAccess.getModelAccess().getConstantsConstantDeclarationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ProjectionsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getProjectionsProjectionDeclarationParserRuleCall_1_0()); }
	ruleProjectionDeclaration{ after(grammarAccess.getModelAccess().getProjectionsProjectionDeclarationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__FunctionsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getFunctionsFunctionDeclarationParserRuleCall_2_0()); }
	ruleFunctionDeclaration{ after(grammarAccess.getModelAccess().getFunctionsFunctionDeclarationParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__AttributesAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getAttributesAttributeDeclarationParserRuleCall_3_0()); }
	ruleAttributeDeclaration{ after(grammarAccess.getModelAccess().getAttributesAttributeDeclarationParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ProcessesAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getProcessesProcessDeclarationParserRuleCall_4_0()); }
	ruleProcessDeclaration{ after(grammarAccess.getModelAccess().getProcessesProcessDeclarationParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ComponentsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getComponentsComponentDeclarationParserRuleCall_5_0()); }
	ruleComponentDeclaration{ after(grammarAccess.getModelAccess().getComponentsComponentDeclarationParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__SystemsAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getSystemsSystemDeclarationParserRuleCall_6_0()); }
	ruleSystemDeclaration{ after(grammarAccess.getModelAccess().getSystemsSystemDeclarationParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDeclaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getAttributeDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDeclaration__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeDeclarationAccess().getTypeTypeEnumRuleCall_3_0()); }
	ruleType{ after(grammarAccess.getAttributeDeclarationAccess().getTypeTypeEnumRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectionDeclaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProjectionDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getProjectionDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectionDeclaration__ProjectionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProjectionDeclarationAccess().getProjectionProjectionExpressionParserRuleCall_3_0()); }
	ruleProjectionExpression{ after(grammarAccess.getProjectionDeclarationAccess().getProjectionProjectionExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectionExpression__TemplateAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProjectionExpressionAccess().getTemplateTemplateParserRuleCall_0_1_0()); }
	ruleTemplate{ after(grammarAccess.getProjectionExpressionAccess().getTemplateTemplateParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectionExpression__ValueAssignment_0_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProjectionExpressionAccess().getValueExpressionParserRuleCall_0_4_0()); }
	ruleExpression{ after(grammarAccess.getProjectionExpressionAccess().getValueExpressionParserRuleCall_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectionExpression__DefaultAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProjectionExpressionAccess().getDefaultExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getProjectionExpressionAccess().getDefaultExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDeclaration__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDeclarationAccess().getTypeTypeEnumRuleCall_1_0()); }
	ruleType{ after(grammarAccess.getConstantDeclarationAccess().getTypeTypeEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDeclaration__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDeclarationAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getConstantDeclarationAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDeclaration__ValueAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDeclarationAccess().getValueExpressionParserRuleCall_4_0()); }
	ruleExpression{ after(grammarAccess.getConstantDeclarationAccess().getValueExpressionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDeclaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getComponentDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDeclaration__ParametersAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentDeclarationAccess().getParametersVariableParserRuleCall_3_0_0()); }
	ruleVariable{ after(grammarAccess.getComponentDeclarationAccess().getParametersVariableParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDeclaration__ParametersAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentDeclarationAccess().getParametersVariableParserRuleCall_3_1_1_0()); }
	ruleVariable{ after(grammarAccess.getComponentDeclarationAccess().getParametersVariableParserRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDeclaration__ComponentAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentDeclarationAccess().getComponentComponentExpressionParserRuleCall_6_0()); }
	ruleComponentExpression{ after(grammarAccess.getComponentDeclarationAccess().getComponentComponentExpressionParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentReference__ReferenceAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentReferenceAccess().getReferenceComponentDeclarationCrossReference_0_0()); }
(
{ before(grammarAccess.getComponentReferenceAccess().getReferenceComponentDeclarationIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getComponentReferenceAccess().getReferenceComponentDeclarationIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getComponentReferenceAccess().getReferenceComponentDeclarationCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentReference__ArgumentsAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentReferenceAccess().getArgumentsExpressionParserRuleCall_2_0_0()); }
	ruleExpression{ after(grammarAccess.getComponentReferenceAccess().getArgumentsExpressionParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentReference__ArgumentsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentReferenceAccess().getArgumentsExpressionParserRuleCall_2_1_1_0()); }
	ruleExpression{ after(grammarAccess.getComponentReferenceAccess().getArgumentsExpressionParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentConstant__InterfaceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentConstantAccess().getInterfaceInterfaceParserRuleCall_1_0()); }
	ruleInterface{ after(grammarAccess.getComponentConstantAccess().getInterfaceInterfaceParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentConstant__KnowledgeAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentConstantAccess().getKnowledgeKnowledgeParserRuleCall_4_0_0()); }
	ruleKnowledge{ after(grammarAccess.getComponentConstantAccess().getKnowledgeKnowledgeParserRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentConstant__ProcessesAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentConstantAccess().getProcessesProcessExpressionParserRuleCall_5_0_0()); }
	ruleProcessExpression{ after(grammarAccess.getComponentConstantAccess().getProcessesProcessExpressionParserRuleCall_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentConstant__ProcessesAssignment_5_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentConstantAccess().getProcessesProcessExpressionParserRuleCall_5_1_1_0()); }
	ruleProcessExpression{ after(grammarAccess.getComponentConstantAccess().getProcessesProcessExpressionParserRuleCall_5_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessExpression__ReferenceAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessExpressionAccess().getReferenceProcessDeclarationCrossReference_0_1_0()); }
(
{ before(grammarAccess.getProcessExpressionAccess().getReferenceProcessDeclarationIDTerminalRuleCall_0_1_0_1()); }
	RULE_ID{ after(grammarAccess.getProcessExpressionAccess().getReferenceProcessDeclarationIDTerminalRuleCall_0_1_0_1()); }
)
{ after(grammarAccess.getProcessExpressionAccess().getReferenceProcessDeclarationCrossReference_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessExpression__ArgumentsAssignment_0_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessExpressionAccess().getArgumentsExpressionParserRuleCall_0_3_0_0()); }
	ruleExpression{ after(grammarAccess.getProcessExpressionAccess().getArgumentsExpressionParserRuleCall_0_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessExpression__ArgumentsAssignment_0_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessExpressionAccess().getArgumentsExpressionParserRuleCall_0_3_1_1_0()); }
	ruleExpression{ after(grammarAccess.getProcessExpressionAccess().getArgumentsExpressionParserRuleCall_0_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Knowledge__TuplesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKnowledgeAccess().getTuplesTupleParserRuleCall_1_0()); }
	ruleTuple{ after(grammarAccess.getKnowledgeAccess().getTuplesTupleParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Knowledge__TuplesAssignment_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKnowledgeAccess().getTuplesTupleParserRuleCall_3_2_0()); }
	ruleTuple{ after(grammarAccess.getKnowledgeAccess().getTuplesTupleParserRuleCall_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__AttributesAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getAttributesAlternatives_0_0()); }
(rule__Interface__AttributesAlternatives_0_0)
{ after(grammarAccess.getInterfaceAccess().getAttributesAlternatives_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__AttributesAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getAttributesAlternatives_1_1_0()); }
(rule__Interface__AttributesAlternatives_1_1_0)
{ after(grammarAccess.getInterfaceAccess().getAttributesAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IdAttributeDefinition__ComponentIdAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdAttributeDefinitionAccess().getComponentIdSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getIdAttributeDefinitionAccess().getComponentIdSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeInstantiation__AttributeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeInstantiationAccess().getAttributeAttributeDeclarationCrossReference_0_0()); }
(
{ before(grammarAccess.getAttributeInstantiationAccess().getAttributeAttributeDeclarationIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getAttributeInstantiationAccess().getAttributeAttributeDeclarationIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getAttributeInstantiationAccess().getAttributeAttributeDeclarationCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeInstantiation__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeInstantiationAccess().getValueExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getAttributeInstantiationAccess().getValueExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__ReturnTypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getReturnTypeTypeEnumRuleCall_1_0()); }
	ruleType{ after(grammarAccess.getFunctionDeclarationAccess().getReturnTypeTypeEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getFunctionDeclarationAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__ParametersAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getParametersVariableParserRuleCall_4_0_0()); }
	ruleVariable{ after(grammarAccess.getFunctionDeclarationAccess().getParametersVariableParserRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__ParametersAssignment_4_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getParametersVariableParserRuleCall_4_1_1_0()); }
	ruleVariable{ after(grammarAccess.getFunctionDeclarationAccess().getParametersVariableParserRuleCall_4_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDeclaration__BodyAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclarationAccess().getBodyExpressionParserRuleCall_7_0()); }
	ruleExpression{ after(grammarAccess.getFunctionDeclarationAccess().getBodyExpressionParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessDeclaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getProcessDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessDeclaration__ParametersAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessDeclarationAccess().getParametersVariableParserRuleCall_3_0_0()); }
	ruleVariable{ after(grammarAccess.getProcessDeclarationAccess().getParametersVariableParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessDeclaration__ParametersAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessDeclarationAccess().getParametersVariableParserRuleCall_3_1_1_0()); }
	ruleVariable{ after(grammarAccess.getProcessDeclarationAccess().getParametersVariableParserRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessDeclaration__BodyAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcessDeclarationAccess().getBodyBlockParserRuleCall_6_0()); }
	ruleBlock{ after(grammarAccess.getProcessDeclarationAccess().getBodyBlockParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getTypeTypeEnumRuleCall_0_0()); }
	ruleType{ after(grammarAccess.getVariableAccess().getTypeTypeEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__DeclaredVariableAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getDeclaredVariableVariableParserRuleCall_0_0()); }
	ruleVariable{ after(grammarAccess.getVariableDeclarationAccess().getDeclaredVariableVariableParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__InitAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getInitExpressionParserRuleCall_1_1_0()); }
	ruleExpression{ after(grammarAccess.getVariableDeclarationAccess().getInitExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReplaceAction__TemplateAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReplaceActionAccess().getTemplateTemplateParserRuleCall_2_0()); }
	ruleTemplate{ after(grammarAccess.getReplaceActionAccess().getTemplateTemplateParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReplaceAction__TupleAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReplaceActionAccess().getTupleTupleParserRuleCall_4_0()); }
	ruleTuple{ after(grammarAccess.getReplaceActionAccess().getTupleTupleParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GetAction__TemplateAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGetActionAccess().getTemplateTemplateParserRuleCall_2_0()); }
	ruleTemplate{ after(grammarAccess.getGetActionAccess().getTemplateTemplateParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GetAction__TargetAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGetActionAccess().getTargetExpressionParserRuleCall_5_0()); }
	ruleExpression{ after(grammarAccess.getGetActionAccess().getTargetExpressionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QueryAction__TemplateAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQueryActionAccess().getTemplateTemplateParserRuleCall_2_0()); }
	ruleTemplate{ after(grammarAccess.getQueryActionAccess().getTemplateTemplateParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QueryAction__TargetAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQueryActionAccess().getTargetExpressionParserRuleCall_5_0()); }
	ruleExpression{ after(grammarAccess.getQueryActionAccess().getTargetExpressionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PutAction__TupleAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPutActionAccess().getTupleTupleParserRuleCall_2_0()); }
	ruleTuple{ after(grammarAccess.getPutActionAccess().getTupleTupleParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PutAction__TargetAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPutActionAccess().getTargetExpressionParserRuleCall_5_0()); }
	ruleExpression{ after(grammarAccess.getPutActionAccess().getTargetExpressionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Tuple__FieldsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleAccess().getFieldsExpressionParserRuleCall_0_0()); }
	ruleExpression{ after(grammarAccess.getTupleAccess().getFieldsExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__FieldsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleAccess().getFieldsExpressionParserRuleCall_1_1_0()); }
	ruleExpression{ after(grammarAccess.getTupleAccess().getFieldsExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Template__FieldsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getFieldsTemplateFieldParserRuleCall_0_0()); }
	ruleTemplateField{ after(grammarAccess.getTemplateAccess().getFieldsTemplateFieldParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Template__FieldsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getFieldsTemplateFieldParserRuleCall_1_1_0()); }
	ruleTemplateField{ after(grammarAccess.getTemplateAccess().getFieldsTemplateFieldParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypedFormalField__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedFormalFieldAccess().getTypeTypeEnumRuleCall_1_0()); }
	ruleType{ after(grammarAccess.getTypedFormalFieldAccess().getTypeTypeEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FormalField__ReferenceAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalFieldAccess().getReferenceVariableCrossReference_1_0_1_0()); }
(
{ before(grammarAccess.getFormalFieldAccess().getReferenceVariableIDTerminalRuleCall_1_0_1_0_1()); }
	RULE_ID{ after(grammarAccess.getFormalFieldAccess().getReferenceVariableIDTerminalRuleCall_1_0_1_0_1()); }
)
{ after(grammarAccess.getFormalFieldAccess().getReferenceVariableCrossReference_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FormalField__VariableAssignment_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalFieldAccess().getVariableVariableParserRuleCall_1_1_2_0()); }
	ruleVariable{ after(grammarAccess.getFormalFieldAccess().getVariableVariableParserRuleCall_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActualField__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActualFieldAccess().getValueExpressionParserRuleCall_0()); }
	ruleExpression{ after(grammarAccess.getActualFieldAccess().getValueExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__While__GuardAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileAccess().getGuardExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getWhileAccess().getGuardExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__While__BodyAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileAccess().getBodyCommandParserRuleCall_4_0()); }
	ruleCommand{ after(grammarAccess.getWhileAccess().getBodyCommandParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElse__GuardAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfThenElseAccess().getGuardExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getIfThenElseAccess().getGuardExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElse__ThenBranchAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfThenElseAccess().getThenBranchCommandParserRuleCall_4_0()); }
	ruleCommand{ after(grammarAccess.getIfThenElseAccess().getThenBranchCommandParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElse__ElseBranchAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfThenElseAccess().getElseBranchCommandParserRuleCall_5_1_0()); }
	ruleCommand{ after(grammarAccess.getIfThenElseAccess().getElseBranchCommandParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Block__CommandsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getCommandsCommandParserRuleCall_1_0()); }
	ruleCommand{ after(grammarAccess.getBlockAccess().getCommandsCommandParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Disjunction__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDisjunctionAccess().getRightDisjunctionParserRuleCall_1_2_0()); }
	ruleDisjunction{ after(grammarAccess.getDisjunctionAccess().getRightDisjunctionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Conjunction__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConjunctionAccess().getRightConjunctionParserRuleCall_1_2_0()); }
	ruleConjunction{ after(grammarAccess.getConjunctionAccess().getRightConjunctionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Negation__ArgAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNegationAccess().getArgRelationParserRuleCall_0_2_0()); }
	ruleRelation{ after(grammarAccess.getNegationAccess().getArgRelationParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__RelAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getRelRelationSymbolEnumRuleCall_1_1_0()); }
	ruleRelationSymbol{ after(grammarAccess.getRelationAccess().getRelRelationSymbolEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getRightRelationParserRuleCall_1_2_0()); }
	ruleRelation{ after(grammarAccess.getRelationAccess().getRightRelationParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SummationSubtraction__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSummationSubtractionAccess().getOpAlternatives_1_1_0()); }
(rule__SummationSubtraction__OpAlternatives_1_1_0)
{ after(grammarAccess.getSummationSubtractionAccess().getOpAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SummationSubtraction__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSummationSubtractionAccess().getRightSummationSubtractionParserRuleCall_1_2_0()); }
	ruleSummationSubtraction{ after(grammarAccess.getSummationSubtractionAccess().getRightSummationSubtractionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationDivision__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationDivisionAccess().getOpAlternatives_1_1_0()); }
(rule__MultiplicationDivision__OpAlternatives_1_1_0)
{ after(grammarAccess.getMultiplicationDivisionAccess().getOpAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationDivision__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationDivisionAccess().getRightMultiplicationDivisionParserRuleCall_1_2_0()); }
	ruleMultiplicationDivision{ after(grammarAccess.getMultiplicationDivisionAccess().getRightMultiplicationDivisionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BaseExpression__ThenBranchAssignment_2_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBaseExpressionAccess().getThenBranchExpressionParserRuleCall_2_2_2_0()); }
	ruleExpression{ after(grammarAccess.getBaseExpressionAccess().getThenBranchExpressionParserRuleCall_2_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BaseExpression__ElseBranchAssignment_2_2_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBaseExpressionAccess().getElseBranchExpressionParserRuleCall_2_2_4_0()); }
	ruleExpression{ after(grammarAccess.getBaseExpressionAccess().getElseBranchExpressionParserRuleCall_2_2_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_0()); }
	RULE_STRING{ after(grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceCallAccess__ArgsAssignment_1_0_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceCallAccessAccess().getArgsExpressionParserRuleCall_1_0_2_0_0()); }
	ruleExpression{ after(grammarAccess.getReferenceCallAccessAccess().getArgsExpressionParserRuleCall_1_0_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceCallAccess__ArgsAssignment_1_0_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceCallAccessAccess().getArgsExpressionParserRuleCall_1_0_2_1_1_0()); }
	ruleExpression{ after(grammarAccess.getReferenceCallAccessAccess().getArgsExpressionParserRuleCall_1_0_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__RefAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceAccess().getRefReferenceableElementsCrossReference_0()); }
(
{ before(grammarAccess.getReferenceAccess().getRefReferenceableElementsIDTerminalRuleCall_0_1()); }
	RULE_ID{ after(grammarAccess.getReferenceAccess().getRefReferenceableElementsIDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getReferenceAccess().getRefReferenceableElementsCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumberLiteral__IntpartAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberLiteralAccess().getIntpartINTTerminalRuleCall_0_0()); }
	RULE_INT{ after(grammarAccess.getNumberLiteralAccess().getIntpartINTTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumberLiteral__IsDoubleAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberLiteralAccess().getIsDoubleFullStopKeyword_1_0_0()); }
(
{ before(grammarAccess.getNumberLiteralAccess().getIsDoubleFullStopKeyword_1_0_0()); }

	'.' 

{ after(grammarAccess.getNumberLiteralAccess().getIsDoubleFullStopKeyword_1_0_0()); }
)

{ after(grammarAccess.getNumberLiteralAccess().getIsDoubleFullStopKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumberLiteral__DecimalAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberLiteralAccess().getDecimalINTTerminalRuleCall_1_1_0()); }
	RULE_INT{ after(grammarAccess.getNumberLiteralAccess().getDecimalINTTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FactorialExpression__ArgAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFactorialExpressionAccess().getArgExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getFactorialExpressionAccess().getArgExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LogExpression__ArgAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogExpressionAccess().getArgExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getLogExpressionAccess().getArgExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModExpression__ArgAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModExpressionAccess().getArgExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getModExpressionAccess().getArgExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModExpression__ModAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModExpressionAccess().getModExpressionParserRuleCall_4_0()); }
	ruleExpression{ after(grammarAccess.getModExpressionAccess().getModExpressionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PowExpression__BaseAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPowExpressionAccess().getBaseExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getPowExpressionAccess().getBaseExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PowExpression__ExpAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPowExpressionAccess().getExpExpressionParserRuleCall_4_0()); }
	ruleExpression{ after(grammarAccess.getPowExpressionAccess().getExpExpressionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FloorExpression__ArgAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFloorExpressionAccess().getArgExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getFloorExpressionAccess().getArgExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CeilExpression__ArgAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCeilExpressionAccess().getArgExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getCeilExpressionAccess().getArgExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MinExpression__LeftAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMinExpressionAccess().getLeftExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getMinExpressionAccess().getLeftExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MinExpression__RightAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMinExpressionAccess().getRightExpressionParserRuleCall_4_0()); }
	ruleExpression{ after(grammarAccess.getMinExpressionAccess().getRightExpressionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MaxExpression__LeftAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMaxExpressionAccess().getLeftExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getMaxExpressionAccess().getLeftExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MaxExpression__RightAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMaxExpressionAccess().getRightExpressionParserRuleCall_4_0()); }
	ruleExpression{ after(grammarAccess.getMaxExpressionAccess().getRightExpressionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SinExpression__ArgAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSinExpressionAccess().getArgExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getSinExpressionAccess().getArgExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CosExpression__ArgAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCosExpressionAccess().getArgExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getCosExpressionAccess().getArgExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TanExpression__ArgAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTanExpressionAccess().getArgExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getTanExpressionAccess().getArgExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ATanExpression__ArgAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getATanExpressionAccess().getArgExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getATanExpressionAccess().getArgExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ASinExpression__ArgAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASinExpressionAccess().getArgExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getASinExpressionAccess().getArgExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ACosExpression__ArgAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getACosExpressionAccess().getArgExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getACosExpressionAccess().getArgExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SystemDeclaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getSystemDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SystemDeclaration__ElementsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemDeclarationAccess().getElementsComponentExpressionParserRuleCall_3_0()); }
	ruleComponentExpression{ after(grammarAccess.getSystemDeclarationAccess().getElementsComponentExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SystemDeclaration__ElementsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemDeclarationAccess().getElementsComponentExpressionParserRuleCall_4_1_0()); }
	ruleComponentExpression{ after(grammarAccess.getSystemDeclarationAccess().getElementsComponentExpressionParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


