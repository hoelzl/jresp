"; -*- Mode: Lisp -*-"
(SYSTEM:INIT-FASL :VERSION 39)
(SETQ SYSTEM:*SOURCE* #P"/Users/loreti/Documents/Workspaces/ECLIPSE/PROJECTS/SCEL/LIB/abcl-src-1.1.1/src/org/armedbear/lisp/java.lisp")
(SETQ SYSTEM::*FASL-UNINTERNED-SYMBOLS* #(#:WHOLE-326011 #:ENVIRONMENT-326012 #:WHOLE-326102 #:ENVIRONMENT-326103))
(SETQ SYSTEM:*FASL-LOADER* (SYSTEM::MAKE-FASL-CLASS-LOADER "org.armedbear.lisp.java"))
(SYSTEM:%IN-PACKAGE "JAVA")
(REQUIRE "CLOS")
(REQUIRE "PRINT-OBJECT")
(DEFVAR *CLASSLOADER* (GET-DEFAULT-CLASSLOADER))
(EXPORT '(JREGISTER-HANDLER JINTERFACE-IMPLEMENTATION JMAKE-INVOCATION-HANDLER JMAKE-PROXY 
JPROPERTY-VALUE JOBJECT-CLASS JCLASS-SUPERCLASS JCLASS-INTERFACES JCLASS-INTERFACE-P 
JCLASS-SUPERCLASS-P JCLASS-ARRAY-P JARRAY-COMPONENT-TYPE JARRAY-LENGTH JNEW-ARRAY-FROM-ARRAY 
JNEW-ARRAY-FROM-LIST JARRAY-FROM-LIST JCLASS-CONSTRUCTORS JCONSTRUCTOR-PARAMS JCLASS-FIELD 
JCLASS-FIELDS JFIELD-TYPE JFIELD-NAME JCLASS-METHODS JMETHOD-PARAMS JMETHOD-NAME 
JINSTANCE-OF-P JMEMBER-STATIC-P JMEMBER-PUBLIC-P JMEMBER-PROTECTED-P JNEW-RUNTIME-CLASS 
DEFINE-JAVA-CLASS ENSURE-JAVA-CLASS CHAIN JMETHOD-LET JEQUAL))
(SYSTEM:FSET 'ADD-URL-TO-CLASSPATH (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
0) 2427 '(URL &OPTIONAL (CLASSLOADER *CLASSLOADER*)) NIL)
(SYSTEM:FSET 'ADD-URLS-TO-CLASSPATH (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
1) 2539 '(&REST URLS) NIL)
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2))
(MOP::ENSURE-METHOD 'ADD-TO-CLASSPATH :LAMBDA-LIST '(JAR-OR-JARS &OPTIONAL (CLASSLOADER 
(GET-CURRENT-CLASSLOADER))) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS 
(LIST 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 3))
(SYSTEM:FSET 'JREGISTER-HANDLER (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 5) 
3077 '(OBJECT EVENT HANDLER &KEY DATA COUNT) NIL)
(SYSTEM:FSET 'JINTERFACE-IMPLEMENTATION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
6) 3198 '(INTERFACE &REST METHOD-NAMES-AND-DEFS) "Creates and returns an implementation of a Java interface with
   methods calling Lisp closures as given in METHOD-NAMES-AND-DEFS.

   INTERFACE is either a Java interface or a string naming one.

   METHOD-NAMES-AND-DEFS is an alternating list of method names
   (strings) and method definitions (closures).

   For missing methods, a dummy implementation is provided that
   returns nothing or null depending on whether the return type is
   void or not. This is for convenience only, and a warning is issued
   for each undefined method.")
(SYSTEM:FSET 'JMAKE-INVOCATION-HANDLER (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
7) 5038 '(FUNCTION) NIL)
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 8))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 9))
(SYSTEM:FSET 'CANONICALIZE-JPROXY-INTERFACES (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
10) 5912 '(IFACES) NIL)
(MOP::ENSURE-METHOD 'JMAKE-PROXY :LAMBDA-LIST '(INTERFACE INVOCATION-HANDLER &OPTIONAL 
LISP-THIS) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'T 
'T)) :DOCUMENTATION "Basic implementation that directly uses an invocation handler." 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 11))
(MOP::ENSURE-METHOD 'JMAKE-PROXY :LAMBDA-LIST '(INTERFACE IMPLEMENTATION &OPTIONAL 
LISP-THIS) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'T 
'FUNCTION)) :DOCUMENTATION "Implements a Java interface forwarding method calls to a Lisp function." 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 13))
(MOP::ENSURE-METHOD 'JMAKE-PROXY :LAMBDA-LIST '(INTERFACE IMPLEMENTATION &OPTIONAL 
LISP-THIS) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'T 
'PACKAGE)) :DOCUMENTATION "Implements a Java interface mapping Java method names to symbols in a given package. javaMethodName is mapped to a JAVA-METHOD-NAME symbol. An error is signaled if no such symbol exists in the package, or if the symbol exists but does not name a function." 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 15))
(MOP::ENSURE-METHOD 'JMAKE-PROXY :LAMBDA-LIST '(INTERFACE IMPLEMENTATION &OPTIONAL 
LISP-THIS) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'T 
'HASH-TABLE)) :DOCUMENTATION "Implements a Java interface using closures in an hash-table keyed by Java method name." 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 20))
(SYSTEM:FSET 'JEQUAL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 23) 8285 '(OBJ1 
OBJ2) "Compares obj1 with obj2 using java.lang.Object.equals()")
(SYSTEM:FSET 'JOBJECT-CLASS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 24) 8452 
'(OBJ) "Returns the Java class that OBJ belongs to")
(SYSTEM:FSET 'JCLASS-SUPERCLASS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 25) 
8582 '(CLASS) "Returns the superclass of CLASS, or NIL if it hasn't got one")
(SYSTEM:FSET 'JCLASS-INTERFACES (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 26) 
8751 '(CLASS) "Returns the vector of interfaces of CLASS")
(SYSTEM:FSET 'JCLASS-INTERFACE-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
27) 8901 '(CLASS) "Returns T if CLASS is an interface")
(SYSTEM:FSET 'JCLASS-SUPERCLASS-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
28) 9043 '(CLASS-1 CLASS-2) "Returns T if CLASS-1 is a superclass or interface of CLASS-2")
(SYSTEM:FSET 'JCLASS-ARRAY-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 29) 
9282 '(CLASS) "Returns T if CLASS is an array class")
(SYSTEM:FSET 'JARRAY-COMPONENT-TYPE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
30) 9418 '(ATYPE) "Returns the component type of the array type ATYPE")
(SYSTEM:FSET 'JARRAY-LENGTH (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 31) 9609 
'(JAVA-ARRAY) "Returns the length of a Java primitive array.")
(SYSTEM:FSET '(SETF JARRAY-REF) (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 32) 
9758 '(NEW-VALUE JAVA-ARRAY &REST INDICES) NIL)
(SYSTEM:FSET 'JNEW-ARRAY-FROM-ARRAY (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
33) 9874 '(ELEMENT-TYPE ARRAY) "Returns a new Java array with base type ELEMENT-TYPE (a string or a class-ref)
   initialized from ARRAY.")
(SYSTEM:FSET 'JNEW-ARRAY-FROM-LIST (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
35) 11001 '(ELEMENT-TYPE LIST) "Returns a new Java array with base type ELEMENT-TYPE (a string or a class-ref)
   initialized from a Lisp list.")
(SYSTEM:FSET 'JARRAY-FROM-LIST (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 36) 
11317 '(LIST) "Return a Java array from LIST whose type is inferred from the first element.

For more control over the type of the array, use JNEW-ARRAY-FROM-LIST.")
(SYSTEM:FSET 'LIST-FROM-JARRAY (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 37) 
11568 '(JARRAY) "Returns a list with the elements of `jarray`.")
(SYSTEM:FSET 'VECTOR-FROM-JARRAY (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
38) 11742 '(JARRAY) "Returns a vector with the elements of `jarray`.")
(SYSTEM:FSET 'LIST-FROM-JENUMERATION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
39) 12019 '(JENUMERATION) "Returns a list with the elements returned by successive `nextElement`
calls on the java.util.Enumeration `jenumeration`.")
(SYSTEM:FSET 'JCLASS-CONSTRUCTORS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
40) 12408 '(CLASS) "Returns a vector of constructors for CLASS")
(SYSTEM:FSET 'JCONSTRUCTOR-PARAMS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
41) 12563 '(CONSTRUCTOR) "Returns a vector of parameter types (Java classes) for CONSTRUCTOR")
(SYSTEM:FSET 'JCLASS-FIELDS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 42) 12761 
'(CLASS &KEY DECLARED PUBLIC) "Returns a vector of all (or just the declared/public, if DECLARED/PUBLIC is true) fields of CLASS")
(SYSTEM:FSET 'JCLASS-FIELD (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 43) 13122 
'(CLASS FIELD-NAME) "Returns the field named FIELD-NAME of CLASS")
(SYSTEM:FSET 'JFIELD-TYPE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 44) 13314 
'(FIELD) "Returns the type (Java class) of FIELD")
(SYSTEM:FSET 'JFIELD-NAME (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 45) 13448 
'(FIELD) "Returns the name of FIELD as a Lisp string")
(SYSTEM:FSET '(SETF JFIELD) (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 46) 13586 
'(NEWVALUE CLASS-REF-OR-FIELD FIELD-OR-INSTANCE &OPTIONAL (INSTANCE NIL INSTANCE-SUPPLIED-P) 
UNUSED-VALUE) NIL)
(SYSTEM:FSET 'JCLASS-METHODS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 47) 
13920 '(CLASS &KEY DECLARED PUBLIC) "Return a vector of all (or just the declared/public, if DECLARED/PUBLIC is true) methods of CLASS")
(SYSTEM:FSET 'JMETHOD-PARAMS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 48) 
14287 '(METHOD) "Returns a vector of parameter types (Java classes) for METHOD")
(SYSTEM:FSET 'JMETHOD-RETURN-TYPE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
49) 14460 '(METHOD) "Returns the result type (Java class) of the METHOD")
(SYSTEM:FSET 'JMETHOD-DECLARING-CLASS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
50) 14623 '(METHOD) "Returns the Java class declaring METHOD")
(SYSTEM:FSET 'JMETHOD-NAME (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 51) 14783 
'(METHOD) "Returns the name of METHOD as a Lisp string")
(SYSTEM:FSET 'JINSTANCE-OF-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 52) 
14926 '(OBJ CLASS) "OBJ is an instance of CLASS (or one of its subclasses)")
(SYSTEM:FSET 'JMEMBER-STATIC-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 53) 
15143 '(MEMBER) "MEMBER is a static member of its declaring class")
(SYSTEM:FSET 'JMEMBER-PUBLIC-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 54) 
15417 '(MEMBER) "MEMBER is a public member of its declaring class")
(SYSTEM:FSET 'JMEMBER-PROTECTED-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
55) 15691 '(MEMBER) "MEMBER is a protected member of its declaring class")
(MOP::ENSURE-METHOD 'MAKE-LOAD-FORM :LAMBDA-LIST '(OBJECT &OPTIONAL ENVIRONMENT) 
:QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'JAVA-OBJECT)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 56))
(SYSTEM:FSET 'JPROPERTY-VALUE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 58) 
17529 '(OBJECT PROPERTY) "setf-able access on the Java Beans notion of property named PROPETRY on OBJECT.")
(SYSTEM:FSET '(SETF JPROPERTY-VALUE) (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
59) 17697 '(VALUE OBJ PROP) NIL)
(SYSTEM:FSET 'CHAIN (SYSTEM:MAKE-MACRO 'CHAIN (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
60)) 17786 '(TARGET OP &REST OPS))
(SYSTEM:FSET 'JMETHOD-LET (SYSTEM:MAKE-MACRO 'JMETHOD-LET (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 65)) 19511 '(BINDINGS &BODY BODY))
(MOP::ENSURE-METHOD 'PRINT-OBJECT :LAMBDA-LIST '(OBJ STREAM) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'JAVA-OBJECT 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 66) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
67))
(MOP::ENSURE-METHOD 'PRINT-OBJECT :LAMBDA-LIST '(E STREAM) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'JAVA-EXCEPTION 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 68) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
72))
(DEFCONSTANT +JAVA-LANG-OBJECT+ (JCLASS "java.lang.Object"))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 76))
(MOP::ENSURE-METHOD 'MOP:VALIDATE-SUPERCLASS :LAMBDA-LIST '(CLASS SUPERCLASS) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'JAVA-CLASS 'BUILT-IN-CLASS)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 78) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 79))
(DEFCONSTANT +JAVA-LANG-OBJECT-CLASS+ (%REGISTER-JAVA-CLASS +JAVA-LANG-OBJECT+ (MOP:ENSURE-CLASS 
(MAKE-SYMBOL "java.lang.Object") :METACLASS (FIND-CLASS 'JAVA-CLASS) :DIRECT-SUPERCLASSES 
(LIST (FIND-CLASS 'JAVA-OBJECT)) :JAVA-CLASS +JAVA-LANG-OBJECT+)))
(SYSTEM:FSET 'JCLASS-ADDITIONAL-SUPERCLASSES (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
80) 21399 '(JCLASS) "Extension point to put additional CLOS classes on the CPL of a CLOS Java class.")
(SYSTEM:FSET 'ENSURE-JAVA-CLASS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 81) 
21651 '(JCLASS) "Attempt to ensure that the Java class referenced by JCLASS exists in the current process of the implementation.")
(MOP::ENSURE-METHOD 'MOP:COMPUTE-CLASS-PRECEDENCE-LIST :LAMBDA-LIST '(CLASS) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'JAVA-CLASS)) :DOCUMENTATION 
"Sort classes this way:
   1. Java classes (but not java.lang.Object)
   2. Java interfaces
   3. java.lang.Object
   4. other classes
   Rationale:
   1. Concrete classes are the most specific.
   2. Then come interfaces.
     So if a generic function is specialized both on an interface and a concrete class,
     the concrete class comes first.
   3. because everything is an Object.
   4. to handle base CLOS classes.
   Note: Java interfaces are not sorted among themselves in any way, so if a
   gf is specialized on two different interfaces and you apply it to an object that
   implements both, it is unspecified which method will be called." :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 82) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
85))
(MOP::ENSURE-METHOD 'MAKE-INSTANCE :LAMBDA-LIST '(CLASS &REST INITARGS &KEY &ALLOW-OTHER-KEYS) 
:QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'JAVA-CLASS)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 88))
(SYSTEM:FSET 'JINPUT-STREAM (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 90) 23589 
'(PATHNAME) "Returns a java.io.InputStream for resource denoted by PATHNAME.")
(PROVIDE "JAVA")
