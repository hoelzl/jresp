"; -*- Mode: Lisp -*-"
(SYSTEM:INIT-FASL :VERSION 39)
(SETQ SYSTEM:*SOURCE* #P"/Users/loreti/Documents/Workspaces/ECLIPSE/PROJECTS/SCEL/LIB/abcl-src-1.1.1/src/org/armedbear/lisp/asdf.lisp")
(SETQ SYSTEM::*FASL-UNINTERNED-SYMBOLS* #(#:WHOLE-279816 #:ENVIRONMENT-279817 #:DEFSYSTEM #:OOS #:OPERATE #:FIND-SYSTEM #:LOCATE-SYSTEM #:RUN-SHELL-COMMAND #:SYSTEM-DEFINITION-PATHNAME #:WITH-SYSTEM-DEFINITIONS #:SEARCH-FOR-SYSTEM-DEFINITION #:FIND-COMPONENT #:COMPONENT-FIND-PATH #:COMPILE-SYSTEM #:LOAD-SYSTEM #:LOAD-SYSTEMS #:REQUIRE-SYSTEM #:TEST-SYSTEM #:CLEAR-SYSTEM #:OPERATION #:COMPILE-OP #:LOAD-OP #:LOAD-SOURCE-OP #:TEST-OP #:FEATURE #:VERSION #:VERSION-SATISFIES #:UPGRADE-ASDF #:IMPLEMENTATION-IDENTIFIER #:IMPLEMENTATION-TYPE #:HOSTNAME #:INPUT-FILES #:OUTPUT-FILES #:OUTPUT-FILE #:PERFORM #:OPERATION-DONE-P #:EXPLAIN #:COMPONENT #:SOURCE-FILE #:C-SOURCE-FILE #:CL-SOURCE-FILE #:JAVA-SOURCE-FILE #:CL-SOURCE-FILE.CL #:CL-SOURCE-FILE.LSP #:STATIC-FILE #:DOC-FILE #:HTML-FILE #:TEXT-FILE #:SOURCE-FILE-TYPE #:MODULE #:SYSTEM #:UNIX-DSO #:MODULE-COMPONENTS #:MODULE-COMPONENTS-BY-NAME #:COMPONENT-PATHNAME #:COMPONENT-RELATIVE-PATHNAME #:COMPONENT-NAME #:COMPONENT-VERSION #:COMPONENT-PARENT #:COMPONENT-PROPERTY #:COMPONENT-SYSTEM #:COMPONENT-DEPENDS-ON #:COMPONENT-ENCODING #:COMPONENT-EXTERNAL-FORMAT #:SYSTEM-DESCRIPTION #:SYSTEM-LONG-DESCRIPTION #:SYSTEM-AUTHOR #:SYSTEM-MAINTAINER #:SYSTEM-LICENSE #:SYSTEM-LICENCE #:SYSTEM-SOURCE-FILE #:SYSTEM-SOURCE-DIRECTORY #:SYSTEM-RELATIVE-PATHNAME #:MAP-SYSTEMS #:OPERATION-DESCRIPTION #:OPERATION-ON-WARNINGS #:OPERATION-ON-FAILURE #:COMPONENT-VISITED-P #:*SYSTEM-DEFINITION-SEARCH-FUNCTIONS* #:*CENTRAL-REGISTRY* #:*COMPILE-FILE-WARNINGS-BEHAVIOUR* #:*COMPILE-FILE-FAILURE-BEHAVIOUR* #:*RESOLVE-SYMLINKS* #:*LOAD-SYSTEM-OPERATION* #:*ASDF-VERBOSE* #:*VERBOSE-OUT* #:ASDF-VERSION #:OPERATION-ERROR #:COMPILE-FAILED #:COMPILE-WARNED #:COMPILE-ERROR #:ERROR-NAME #:ERROR-PATHNAME #:LOAD-SYSTEM-DEFINITION-ERROR #:ERROR-COMPONENT #:ERROR-OPERATION #:SYSTEM-DEFINITION-ERROR #:MISSING-COMPONENT #:MISSING-COMPONENT-OF-VERSION #:MISSING-DEPENDENCY #:MISSING-DEPENDENCY-OF-VERSION #:CIRCULAR-DEPENDENCY #:DUPLICATE-NAMES #:TRY-RECOMPILING #:RETRY #:ACCEPT #:COERCE-ENTRY-TO-DIRECTORY #:REMOVE-ENTRY-FROM-REGISTRY #:*ENCODING-DETECTION-HOOK* #:*ENCODING-EXTERNAL-FORMAT-HOOK* #:*DEFAULT-ENCODING* #:*UTF-8-EXTERNAL-FORMAT* #:CLEAR-CONFIGURATION #:*OUTPUT-TRANSLATIONS-PARAMETER* #:INITIALIZE-OUTPUT-TRANSLATIONS #:DISABLE-OUTPUT-TRANSLATIONS #:CLEAR-OUTPUT-TRANSLATIONS #:ENSURE-OUTPUT-TRANSLATIONS #:APPLY-OUTPUT-TRANSLATIONS #:COMPILE-FILE* #:COMPILE-FILE-PATHNAME* #:ENABLE-ASDF-BINARY-LOCATIONS-COMPATIBILITY #:*DEFAULT-SOURCE-REGISTRIES* #:*SOURCE-REGISTRY-PARAMETER* #:INITIALIZE-SOURCE-REGISTRY #:COMPUTE-SOURCE-REGISTRY #:CLEAR-SOURCE-REGISTRY #:ENSURE-SOURCE-REGISTRY #:PROCESS-SOURCE-REGISTRY #:SYSTEM-REGISTERED-P #:REGISTERED-SYSTEMS #:LOADED-SYSTEMS #:RESOLVE-LOCATION #:ASDF-MESSAGE #:USER-OUTPUT-TRANSLATIONS-PATHNAME #:SYSTEM-OUTPUT-TRANSLATIONS-PATHNAME #:USER-OUTPUT-TRANSLATIONS-DIRECTORY-PATHNAME #:SYSTEM-OUTPUT-TRANSLATIONS-DIRECTORY-PATHNAME #:USER-SOURCE-REGISTRY #:SYSTEM-SOURCE-REGISTRY #:USER-SOURCE-REGISTRY-DIRECTORY #:SYSTEM-SOURCE-REGISTRY-DIRECTORY #:*ASDF-REVISION* #:AROUND #:ASDF-METHOD-COMBINATION #:SPLIT #:MAKE-COLLECTOR #:DO-DEP #:DO-ONE-DEP #:RESOLVE-RELATIVE-LOCATION-COMPONENT #:RESOLVE-ABSOLUTE-LOCATION-COMPONENT #:OUTPUT-FILES-FOR-SYSTEM-AND-OPERATION #:PERFORM #:EXPLAIN #:OUTPUT-FILES #:OPERATION-DONE-P #:PERFORM-WITH-RESTARTS #:COMPONENT-RELATIVE-PATHNAME #:SYSTEM-SOURCE-FILE #:OPERATE #:FIND-COMPONENT #:FIND-SYSTEM #:APPLY-OUTPUT-TRANSLATIONS #:TRANSLATE-PATHNAME* #:RESOLVE-LOCATION #:SYSTEM-RELATIVE-PATHNAME #:INHERIT-SOURCE-REGISTRY #:PROCESS-SOURCE-REGISTRY #:PROCESS-SOURCE-REGISTRY-DIRECTIVE #:COMPILE-FILE* #:SOURCE-FILE-TYPE #:WHOLE-280432 #:ENVIRONMENT-280433 #:WHOLE-280452 #:ENVIRONMENT-280453 #:WHOLE-280472 #:ENVIRONMENT-280473 #:WHOLE-280589 #:ENVIRONMENT-280590 #:WHOLE-280884 #:ENVIRONMENT-280885 #:G280883 #:G280882 #:WHOLE-280924 #:ENVIRONMENT-280925 #:G280923 #:G280922 #:G281751 #:G281746 #:G281838 #:G281827 #:G284916 #:G284911 #:G285496 #:G285497 #:G285702 #:G285694 #:G285845 #:G285840 #:WHOLE-286023 #:ENVIRONMENT-286024 #:G286219 #:G287040 #:G287034 #:G287111 #:G287105 #:G287927 #:G288189 #:G288166 #:|normal-return| #:G288697 #:G288698 #:G289608 #:WHOLE-291779 #:ENVIRONMENT-291780 #:G292934 #:G292916 #:OUTPUT-FILES-FOR-SYSTEM-AND-OPERATION #:G294787 #:G294776 #:G294793 #:G294779 #:G294918 #:G294909))
(SETQ SYSTEM:*FASL-LOADER* (SYSTEM::MAKE-FASL-CLASS-LOADER "org.armedbear.lisp.asdf"))
(SYSTEM:%IN-PACKAGE "COMMON-LISP-USER")
(SETQ *FEATURES* (ADJOIN :ASDF-UNICODE *FEATURES*))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 0))
(SYSTEM:%IN-PACKAGE "ASDF")
(DEFVAR *ASDF-VERSION* NIL)
(DEFVAR *UPGRADED-P* NIL)
(DEFVAR *ASDF-VERBOSE* NIL)
(SYSTEM:FSET 'FIND-SYMBOL* (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1) 4038 
'(S P) NIL)
(SYSTEM:FSET 'STRCAT (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2) 4038 '(&REST 
STRINGS) NIL)
(SYSTEM:FSET 'COMPATFMT (SYSTEM:MAKE-MACRO 'COMPATFMT (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 3)) 4038 '(FORMAT))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 4))
(DEFVAR *RESOLVE-SYMLINKS* T "Determine whether or not ASDF resolves symlinks when defining systems.

Defaults to T.")
(DEFVAR *COMPILE-FILE-WARNINGS-BEHAVIOUR* (OR :WARN) "How should ASDF react if it encounters a warning when compiling a file?
Valid values are :error, :warn, and :ignore.")
(DEFVAR *COMPILE-FILE-FAILURE-BEHAVIOUR* (OR :WARN) "How should ASDF react if it encounters a failure (per the ANSI spec of COMPILE-FILE)
when compiling a file?  Valid values are :error, :warn, and :ignore.
Note that ASDF ALWAYS raises an error if it fails to create an output file when compiling.")
(DEFVAR *VERBOSE-OUT* NIL)
(DEFPARAMETER +ASDF-METHODS+ '(PERFORM-WITH-RESTARTS PERFORM EXPLAIN OUTPUT-FILES 
OPERATION-DONE-P))
(DEFVAR *LOAD-SYSTEM-OPERATION* 'LOAD-OP "Operation used by ASDF:LOAD-SYSTEM. By default, ASDF:LOAD-OP.
You may override it with e.g. ASDF:LOAD-FASL-OP from asdf-bundle,
or ASDF:LOAD-SOURCE-OP if your fasl loading is somehow broken.")
(DEFVAR *COMPILE-OP-COMPILE-FILE-FUNCTION* 'COMPILE-FILE* "Function used to compile lisp files.")
(PROCLAIM '(FTYPE (FUNCTION (T) T) FORMAT-ARGUMENTS FORMAT-CONTROL ERROR-NAME ERROR-PATHNAME 
ERROR-CONDITION DUPLICATE-NAMES-NAME ERROR-COMPONENT ERROR-OPERATION MODULE-COMPONENTS 
MODULE-COMPONENTS-BY-NAME CIRCULAR-DEPENDENCY-COMPONENTS CONDITION-ARGUMENTS CONDITION-FORM 
CONDITION-FORMAT CONDITION-LOCATION COERCE-NAME))
(PROCLAIM '(FTYPE (FUNCTION (&OPTIONAL T) (VALUES)) INITIALIZE-SOURCE-REGISTRY))
(PROCLAIM '(FTYPE (FUNCTION (T T) T) (SETF MODULE-COMPONENTS-BY-NAME)))
(SYSTEM:FSET 'DEFGENERIC* (SYSTEM:MAKE-MACRO 'DEFGENERIC* (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 17)) 22094 '(NAME FORMALS &REST REST))
(SYSTEM:FSET 'DEFUN* (SYSTEM:MAKE-MACRO 'DEFUN* (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
18)) 22094 '(NAME FORMALS &REST REST))
(SYSTEM:FSET 'WHILE-COLLECTING (SYSTEM:MAKE-MACRO 'WHILE-COLLECTING (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 19)) 22698 '((&REST COLLECTORS) &BODY BODY))
(SYSTEM:FSET 'AIF (SYSTEM:MAKE-MACRO 'AIF (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
23)) 23580 '(TEST THEN &OPTIONAL ELSE))
(PROCLAIM '(NOTINLINE PATHNAME-DIRECTORY-PATHNAME))
(SYSTEM:FSET 'PATHNAME-DIRECTORY-PATHNAME (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
24) 23708 '(PATHNAME) "Returns a new pathname with same HOST, DEVICE, DIRECTORY as PATHNAME,
and NIL NAME, TYPE and VERSION components")
(PROCLAIM '(NOTINLINE NORMALIZE-PATHNAME-DIRECTORY-COMPONENT))
(SYSTEM:FSET 'NORMALIZE-PATHNAME-DIRECTORY-COMPONENT (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
25) 23963 '(DIRECTORY) "Given a pathname directory component, return an equivalent form that is a list")
(PROCLAIM '(NOTINLINE MERGE-PATHNAME-DIRECTORY-COMPONENTS))
(SYSTEM:FSET 'MERGE-PATHNAME-DIRECTORY-COMPONENTS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
26) 24586 '(SPECIFIED DEFAULTS) NIL)
(PROCLAIM '(NOTINLINE MAKE-PATHNAME-COMPONENT-LOGICAL))
(SYSTEM:FSET 'MAKE-PATHNAME-COMPONENT-LOGICAL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
27) 25567 '(X) "Make a pathname component suitable for use in a logical-pathname")
(PROCLAIM '(NOTINLINE MAKE-PATHNAME-LOGICAL))
(SYSTEM:FSET 'MAKE-PATHNAME-LOGICAL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
28) 25837 '(PATHNAME HOST) "Take a PATHNAME's directory, name, type and version components,
and make a new pathname with corresponding components and specified logical HOST")
(PROCLAIM '(NOTINLINE MERGE-PATHNAMES*))
(SYSTEM:FSET 'MERGE-PATHNAMES* (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 29) 
26354 '(SPECIFIED &OPTIONAL (DEFAULTS *DEFAULT-PATHNAME-DEFAULTS*)) "MERGE-PATHNAMES* is like MERGE-PATHNAMES except that
if the SPECIFIED pathname does not have an absolute directory,
then the HOST and DEVICE both come from the DEFAULTS, whereas
if the SPECIFIED pathname does have an absolute directory,
then the HOST and DEVICE both come from the SPECIFIED.
Also, if either argument is NIL, then the other argument is returned unmodified.")
(PROCLAIM '(NOTINLINE PATHNAME-PARENT-DIRECTORY-PATHNAME))
(SYSTEM:FSET 'PATHNAME-PARENT-DIRECTORY-PATHNAME (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
31) 28400 '(PATHNAME) "Returns a new pathname with same HOST, DEVICE, DIRECTORY as PATHNAME,
and NIL NAME, TYPE and VERSION components")
(SYSTEM:FSET 'APPENDF (SYSTEM:MAKE-MACRO 'APPENDF (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
32)) 28829 '(#181? &REST ARGS &ENVIRONMENT #182?))
(SYSTEM:FSET 'ORF (SYSTEM:MAKE-MACRO 'ORF (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
33)) 28901 '(#185? &REST ARGS &ENVIRONMENT #186?))
(PROCLAIM '(NOTINLINE FIRST-CHAR))
(SYSTEM:FSET 'FIRST-CHAR (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 34) 28993 
'(S) NIL)
(PROCLAIM '(NOTINLINE LAST-CHAR))
(SYSTEM:FSET 'LAST-CHAR (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 35) 29068 
'(S) NIL)
(PROCLAIM '(NOTINLINE ASDF-MESSAGE))
(SYSTEM:FSET 'ASDF-MESSAGE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 36) 29156 
'(FORMAT-STRING &REST FORMAT-ARGS) NIL)
(PROCLAIM '(NOTINLINE SPLIT-STRING))
(SYSTEM:FSET 'SPLIT-STRING (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 37) 29313 
'(STRING &KEY MAX (SEPARATOR '(#\  #\Tab))) "Split STRING into a list of components separated by
any of the characters in the sequence SEPARATOR.
If MAX is specified, then no more than max(1,MAX) components will be returned,
starting the separation from the end, e.g. when called with arguments
 \"a.b.c.d.e\" :max 3 :separator \".\" it will return (\"a.b.c\" \"d\" \"e\").")
(PROCLAIM '(NOTINLINE SPLIT-NAME-TYPE))
(SYSTEM:FSET 'SPLIT-NAME-TYPE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 40) 
30256 '(FILENAME) NIL)
(PROCLAIM '(NOTINLINE COMPONENT-NAME-TO-PATHNAME-COMPONENTS))
(SYSTEM:FSET 'COMPONENT-NAME-TO-PATHNAME-COMPONENTS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
41) 30884 '(S &KEY FORCE-DIRECTORY FORCE-RELATIVE) "Splits the path string S, returning three values:
A flag that is either :absolute or :relative, indicating
   how the rest of the values are to be interpreted.
A directory path --- a list of strings, suitable for
   use with MAKE-PATHNAME when prepended with the flag
   value.
A filename with type extension, possibly NIL in the
   case of a directory pathname.
FORCE-DIRECTORY forces S to be interpreted as a directory
pathname (third return value will be NIL, final component
of S will be treated as part of the directory path.

The intention of this function is to support structured component names,
e.g., (:file \"foo/bar\"), which will be unpacked to relative
pathnames.")
(PROCLAIM '(NOTINLINE REMOVE-KEYS))
(SYSTEM:FSET 'REMOVE-KEYS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 43) 32763 
'(KEY-NAMES ARGS) NIL)
(PROCLAIM '(NOTINLINE REMOVE-KEYWORD))
(SYSTEM:FSET 'REMOVE-KEYWORD (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 44) 
32977 '(KEY ARGS) NIL)
(PROCLAIM '(NOTINLINE GETENV))
(SYSTEM:FSET 'GETENV (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 45) 33099 '(X) 
NIL)
(PROCLAIM '(NOTINLINE DIRECTORY-PATHNAME-P))
(SYSTEM:FSET 'DIRECTORY-PATHNAME-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
46) 34248 '(PATHNAME) "Does PATHNAME represent a directory?

A directory-pathname is a pathname _without_ a filename. The three
ways that the filename components can be missing are for it to be NIL,
:UNSPECIFIC or the empty string.

Note that this does _not_ check to see that PATHNAME points to an
actually-existing directory.")
(PROCLAIM '(NOTINLINE ENSURE-DIRECTORY-PATHNAME))
(SYSTEM:FSET 'ENSURE-DIRECTORY-PATHNAME (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
48) 34914 '(PATHSPEC) "Converts the non-wild pathname designator PATHSPEC to directory form.")
(PROCLAIM '(NOTINLINE ABSOLUTE-PATHNAME-P))
(SYSTEM:FSET 'ABSOLUTE-PATHNAME-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
49) 35697 '(PATHSPEC) NIL)
(PROCLAIM '(NOTINLINE COERCE-PATHNAME))
(SYSTEM:FSET 'COERCE-PATHNAME (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 50) 
36008 '(NAME &KEY TYPE DEFAULTS) "coerce NAME into a PATHNAME.
When given a string, portably decompose it into a relative pathname:
#\\/ separates subdirectories. The last #\\/-separated string is as follows:
if TYPE is NIL, its last #\\. if any separates name and type from from type;
if TYPE is a string, it is the type, and the whole string is the name;
if TYPE is :DIRECTORY, the string is a directory component;
if the string is empty, it's a directory.
Any directory named .. is read as :BACK.
Host, device and version components are taken from DEFAULTS.")
(PROCLAIM '(NOTINLINE MERGE-COMPONENT-NAME-TYPE))
(SYSTEM:FSET 'MERGE-COMPONENT-NAME-TYPE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
51) 37794 '(NAME &KEY TYPE DEFAULTS) NIL)
(PROCLAIM '(NOTINLINE SUBPATHNAME))
(SYSTEM:FSET 'SUBPATHNAME (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 52) 38119 
'(PATHNAME SUBPATH &KEY TYPE) NIL)
(SYSTEM:FSET 'SUBPATHNAME* (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 53) 38316 
'(PATHNAME SUBPATH &KEY TYPE) NIL)
(PROCLAIM '(NOTINLINE LENGTH=N-P))
(SYSTEM:FSET 'LENGTH=N-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 54) 38461 
'(X N) NIL)
(PROCLAIM '(NOTINLINE STRING-SUFFIX-P))
(SYSTEM:FSET 'STRING-SUFFIX-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 55) 
38699 '(S SUFFIX) NIL)
(PROCLAIM '(NOTINLINE READ-FILE-FORMS))
(SYSTEM:FSET 'READ-FILE-FORMS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 56) 
38908 '(FILE) NIL)
(PROCLAIM '(NOTINLINE PATHNAME-ROOT))
(SYSTEM:FSET 'PATHNAME-ROOT (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 57) 39084 
'(PATHNAME) NIL)
(PROCLAIM '(NOTINLINE PROBE-FILE*))
(SYSTEM:FSET 'PROBE-FILE* (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 58) 39437 
'(P) "when given a pathname P, probes the filesystem for a file or directory
with given pathname and if it exists return its truename.")
(PROCLAIM '(NOTINLINE TRUENAMIZE))
(SYSTEM:FSET 'TRUENAMIZE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 61) 40032 
'(PATHNAME &OPTIONAL (DEFAULTS *DEFAULT-PATHNAME-DEFAULTS*)) "Resolve as much of a pathname as possible")
(PROCLAIM '(NOTINLINE RESOLVE-SYMLINKS))
(SYSTEM:FSET 'RESOLVE-SYMLINKS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 65) 
41742 '(PATH) NIL)
(PROCLAIM '(NOTINLINE RESOLVE-SYMLINKS*))
(SYSTEM:FSET 'RESOLVE-SYMLINKS* (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 66) 
41935 '(PATH) NIL)
(PROCLAIM '(NOTINLINE ENSURE-PATHNAME-ABSOLUTE))
(SYSTEM:FSET 'ENSURE-PATHNAME-ABSOLUTE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
67) 42048 '(PATH) NIL)
(PROCLAIM '(NOTINLINE DEFAULT-DIRECTORY))
(SYSTEM:FSET 'DEFAULT-DIRECTORY (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 68) 
42398 'NIL NIL)
(PROCLAIM '(NOTINLINE LISPIZE-PATHNAME))
(SYSTEM:FSET 'LISPIZE-PATHNAME (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 69) 
42502 '(INPUT-FILE) NIL)
(DEFPARAMETER *WILD* :WILD)
(DEFPARAMETER *WILD-FILE* (MAKE-PATHNAME :NAME *WILD* :TYPE *WILD* :VERSION (OR) 
:DIRECTORY NIL))
(DEFPARAMETER *WILD-DIRECTORY* (MAKE-PATHNAME :DIRECTORY (SYSTEM::BACKQ-LIST ':RELATIVE 
*WILD*) :NAME NIL :TYPE NIL :VERSION NIL))
(DEFPARAMETER *WILD-INFERIORS* (MAKE-PATHNAME :DIRECTORY '(:RELATIVE :WILD-INFERIORS) 
:NAME NIL :TYPE NIL :VERSION NIL))
(DEFPARAMETER *WILD-PATH* (MERGE-PATHNAMES *WILD-FILE* *WILD-INFERIORS*))
(PROCLAIM '(NOTINLINE WILDEN))
(SYSTEM:FSET 'WILDEN (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 70) 43107 '(PATH) 
NIL)
(PROCLAIM '(NOTINLINE DIRECTORY-SEPARATOR-FOR-HOST))
(SYSTEM:FSET 'DIRECTORY-SEPARATOR-FOR-HOST (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
71) 43169 '(&OPTIONAL (PATHNAME *DEFAULT-PATHNAME-DEFAULTS*)) NIL)
(PROCLAIM '(NOTINLINE DIRECTORIZE-PATHNAME-HOST-DEVICE))
(SYSTEM:FSET 'DIRECTORIZE-PATHNAME-HOST-DEVICE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
72) 43379 '(PATHNAME) NIL)
(PROCLAIM '(NOTINLINE FIND-SYSTEM))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 74))
(PROCLAIM '(NOTINLINE PERFORM-WITH-RESTARTS))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 75))
(PROCLAIM '(NOTINLINE PERFORM))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 76))
(PROCLAIM '(NOTINLINE OPERATION-DONE-P))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 77))
(PROCLAIM '(NOTINLINE MARK-OPERATION-DONE))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 78))
(PROCLAIM '(NOTINLINE EXPLAIN))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 79))
(PROCLAIM '(NOTINLINE OUTPUT-FILES))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 80))
(PROCLAIM '(NOTINLINE INPUT-FILES))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 81))
(PROCLAIM '(NOTINLINE COMPONENT-OPERATION-TIME))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 82))
(PROCLAIM '(NOTINLINE OPERATION-DESCRIPTION))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 83))
(PROCLAIM '(NOTINLINE SYSTEM-SOURCE-FILE))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 84))
(PROCLAIM '(NOTINLINE COMPONENT-SYSTEM))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 85))
(PROCLAIM '(NOTINLINE COMPONENT-PATHNAME))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 86))
(PROCLAIM '(NOTINLINE COMPONENT-RELATIVE-PATHNAME))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 87))
(PROCLAIM '(NOTINLINE COMPONENT-PROPERTY))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 88))
(PROCLAIM '(NOTINLINE (SETF COMPONENT-PROPERTY)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 89))
(PROCLAIM '(NOTINLINE COMPONENT-EXTERNAL-FORMAT))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 90))
(PROCLAIM '(NOTINLINE COMPONENT-ENCODING))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 91))
(PROCLAIM '(NOTINLINE (SETF MODULE-COMPONENTS-BY-NAME)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 92))
(PROCLAIM '(NOTINLINE VERSION-SATISFIES))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 93))
(PROCLAIM '(NOTINLINE FIND-COMPONENT))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 94))
(PROCLAIM '(NOTINLINE SOURCE-FILE-TYPE))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 95))
(PROCLAIM '(NOTINLINE OPERATION-ANCESTOR))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 96))
(PROCLAIM '(NOTINLINE COMPONENT-VISITED-P))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 97))
(PROCLAIM '(NOTINLINE VISIT-COMPONENT))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 98))
(PROCLAIM '(NOTINLINE (SETF VISITING-COMPONENT)))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 99))
(PROCLAIM '(NOTINLINE COMPONENT-VISITING-P))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 100))
(PROCLAIM '(NOTINLINE COMPONENT-DEPENDS-ON))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 101))
(PROCLAIM '(NOTINLINE COMPONENT-SELF-DEPENDENCIES))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 102))
(PROCLAIM '(NOTINLINE TRAVERSE))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 103))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 104))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 105))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 106))
(MOP::ENSURE-METHOD 'PRINT-OBJECT :LAMBDA-LIST '(CONDITION STREAM) :QUALIFIERS 'NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'FORMATTED-SYSTEM-DEFINITION-ERROR 
'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 107))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 112))
(MOP::ENSURE-METHOD 'PRINT-OBJECT :LAMBDA-LIST '(CONDITION STREAM) :QUALIFIERS 'NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'LOAD-SYSTEM-DEFINITION-ERROR 
'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 113))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 118))
(MOP::ENSURE-METHOD 'PRINT-OBJECT :LAMBDA-LIST '(CONDITION STREAM) :QUALIFIERS 'NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'CIRCULAR-DEPENDENCY 'T)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 119))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 124))
(MOP::ENSURE-METHOD 'PRINT-OBJECT :LAMBDA-LIST '(CONDITION STREAM) :QUALIFIERS 'NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'DUPLICATE-NAMES 'T)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 125))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 130))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 133))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 135))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 136))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 137))
(MOP::ENSURE-METHOD 'PRINT-OBJECT :LAMBDA-LIST '(CONDITION STREAM) :QUALIFIERS 'NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'OPERATION-ERROR 'T)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 138))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 143))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 144))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 145))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 146))
(MOP::ENSURE-METHOD 'PRINT-OBJECT :LAMBDA-LIST '(CONDITION STREAM) :QUALIFIERS 'NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'INVALID-CONFIGURATION 'T)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 148))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 153))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 155))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 157))
(PROCLAIM '(NOTINLINE COMPONENT-FIND-PATH))
(SYSTEM:FSET 'COMPONENT-FIND-PATH (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
166) 58577 '(COMPONENT) NIL)
(MOP::ENSURE-METHOD 'PRINT-OBJECT :LAMBDA-LIST '(C STREAM) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'COMPONENT 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 167) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
170))
(MOP::ENSURE-METHOD 'PRINT-OBJECT :LAMBDA-LIST '(C S) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'MISSING-DEPENDENCY 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 173))
(PROCLAIM '(NOTINLINE SYSDEF-ERROR))
(SYSTEM:FSET 'SYSDEF-ERROR (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 177) 59087 
'(FORMAT &REST ARGUMENTS) NIL)
(MOP::ENSURE-METHOD 'PRINT-OBJECT :LAMBDA-LIST '(C S) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'MISSING-COMPONENT 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 178) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
179))
(MOP::ENSURE-METHOD 'PRINT-OBJECT :LAMBDA-LIST '(C S) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'MISSING-COMPONENT-OF-VERSION 'T)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 180) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 181))
(MOP::ENSURE-METHOD 'COMPONENT-SYSTEM :LAMBDA-LIST '(COMPONENT) :QUALIFIERS 'NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'COMPONENT)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 182) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
183))
(DEFVAR *DEFAULT-COMPONENT-CLASS* 'CL-SOURCE-FILE)
(PROCLAIM '(NOTINLINE COMPUTE-MODULE-COMPONENTS-BY-NAME))
(SYSTEM:FSET 'COMPUTE-MODULE-COMPONENTS-BY-NAME (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
184) 59976 '(MODULE) NIL)
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 185))
(PROCLAIM '(NOTINLINE COMPONENT-PARENT-PATHNAME))
(SYSTEM:FSET 'COMPONENT-PARENT-PATHNAME (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
189) 61033 '(COMPONENT) NIL)
(MOP::ENSURE-METHOD 'COMPONENT-PATHNAME :LAMBDA-LIST '(COMPONENT) :QUALIFIERS 'NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'COMPONENT)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 190) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
191))
(MOP::ENSURE-METHOD 'COMPONENT-PROPERTY :LAMBDA-LIST '(C PROPERTY) :QUALIFIERS 'NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'COMPONENT 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 192) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
193))
(MOP::ENSURE-METHOD '(SETF COMPONENT-PROPERTY) :LAMBDA-LIST '(NEW-VALUE C PROPERTY) 
:QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'T 'COMPONENT 
'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 194))
(DEFVAR *DEFAULT-ENCODING* :DEFAULT "Default encoding for source files.
The default value :default preserves the legacy behavior.
A future default might be :utf-8 or :autodetect
reading emacs-style -*- coding: utf-8 -*- specifications,
and falling back to utf-8 or latin1 if nothing is specified.")
(DEFPARAMETER *UTF-8-EXTERNAL-FORMAT* :UTF-8 "Default :external-format argument to pass to CL:OPEN and also
CL:LOAD or CL:COMPILE-FILE to best process a UTF-8 encoded file.
On modern implementations, this will decode UTF-8 code points as CL characters.
On legacy implementations, it may fall back on some 8-bit encoding,
with non-ASCII code points being read as several CL characters;
hopefully, if done consistently, that won't affect program behavior too much.")
(PROCLAIM '(NOTINLINE ALWAYS-DEFAULT-ENCODING))
(SYSTEM:FSET 'ALWAYS-DEFAULT-ENCODING (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
195) 63400 '(PATHNAME) NIL)
(DEFVAR *ENCODING-DETECTION-HOOK* (FUNCTION ALWAYS-DEFAULT-ENCODING) "Hook for an extension to define a function to automatically detect a file's encoding")
(PROCLAIM '(NOTINLINE DETECT-ENCODING))
(SYSTEM:FSET 'DETECT-ENCODING (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 196) 
63647 '(PATHNAME) NIL)
(MOP::ENSURE-METHOD 'COMPONENT-ENCODING :LAMBDA-LIST '(C) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'COMPONENT)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 197) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
198))
(PROCLAIM '(NOTINLINE DEFAULT-ENCODING-EXTERNAL-FORMAT))
(SYSTEM:FSET 'DEFAULT-ENCODING-EXTERNAL-FORMAT (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
199) 63928 '(ENCODING) NIL)
(DEFVAR *ENCODING-EXTERNAL-FORMAT-HOOK* (FUNCTION DEFAULT-ENCODING-EXTERNAL-FORMAT) 
"Hook for an extension to define a mapping between non-default encodings
and implementation-defined external-format's")
(SYSTEM:FSET 'ENCODING-EXTERNAL-FORMAT (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
200) 64568 '(ENCODING) NIL)
(MOP::ENSURE-METHOD 'COMPONENT-EXTERNAL-FORMAT :LAMBDA-LIST '(C) :QUALIFIERS 'NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'COMPONENT)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 201) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
202))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 203))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 204))
(MOP::ENSURE-METHOD 'VERSION-SATISFIES :LAMBDA-LIST '(C VERSION) :QUALIFIERS 'NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'COMPONENT 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 205) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
206))
(PROCLAIM '(NOTINLINE ASDF-VERSION))
(SYSTEM:FSET 'ASDF-VERSION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 207) 66214 
'NIL "Exported interface to the version of ASDF currently installed. A string.
You can compare this string with e.g.:
(ASDF:VERSION-SATISFIES (ASDF:ASDF-VERSION) \"2.345.67\").")
(PROCLAIM '(NOTINLINE PARSE-VERSION))
(SYSTEM:FSET 'PARSE-VERSION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 208) 
66432 '(STRING &OPTIONAL ON-ERROR) "Parse a version string as a series of natural integers separated by dots.
Return a (non-null) list of integers if the string is valid, NIL otherwise.
If on-error is error, warn, or designates a function of compatible signature,
the function is called with an explanation of what is wrong with the argument.
NB: ignores leading zeroes, and so doesn't distinguish between 2.003 and 2.3")
(MOP::ENSURE-METHOD 'VERSION-SATISFIES :LAMBDA-LIST '(CVER VERSION) :QUALIFIERS 'NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'STRING 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 209) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
211))
(DEFPARAMETER *LINK-INITIAL-DWORD* 76)
(DEFPARAMETER *LINK-GUID* #(1 20 2 0 0 0 0 0 192 0 0 0 0 0 0 70))
(PROCLAIM '(NOTINLINE READ-NULL-TERMINATED-STRING))
(SYSTEM:FSET 'READ-NULL-TERMINATED-STRING (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
213) 67923 '(S) NIL)
(PROCLAIM '(NOTINLINE READ-LITTLE-ENDIAN))
(SYSTEM:FSET 'READ-LITTLE-ENDIAN (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
214) 67923 '(S &OPTIONAL (BYTES 4)) NIL)
(PROCLAIM '(NOTINLINE PARSE-FILE-LOCATION-INFO))
(SYSTEM:FSET 'PARSE-FILE-LOCATION-INFO (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
215) 67923 '(S) NIL)
(PROCLAIM '(NOTINLINE PARSE-WINDOWS-SHORTCUT))
(SYSTEM:FSET 'PARSE-WINDOWS-SHORTCUT (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
216) 67923 '(PATHNAME) NIL)
(PROCLAIM '(NOTINLINE MAKE-DEFINED-SYSTEMS-TABLE))
(SYSTEM:FSET 'MAKE-DEFINED-SYSTEMS-TABLE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
219) 70917 'NIL NIL)
(DEFVAR *DEFINED-SYSTEMS* (MAKE-DEFINED-SYSTEMS-TABLE) "This is a hash table whose keys are strings, being the
names of the systems, and whose values are pairs, the first
element of which is a universal-time indicating when the
system definition was last updated, and the second element
of which is a system object.")
(PROCLAIM '(NOTINLINE COERCE-NAME))
(SYSTEM:FSET 'COERCE-NAME (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 220) 71412 
'(NAME) NIL)
(PROCLAIM '(NOTINLINE SYSTEM-REGISTERED-P))
(SYSTEM:FSET 'SYSTEM-REGISTERED-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
221) 71652 '(NAME) NIL)
(PROCLAIM '(NOTINLINE REGISTERED-SYSTEMS))
(SYSTEM:FSET 'REGISTERED-SYSTEMS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
222) 71738 'NIL NIL)
(PROCLAIM '(NOTINLINE REGISTER-SYSTEM))
(SYSTEM:FSET 'REGISTER-SYSTEM (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 223) 
71879 '(SYSTEM) NIL)
(PROCLAIM '(NOTINLINE CLEAR-SYSTEM))
(SYSTEM:FSET 'CLEAR-SYSTEM (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 224) 72246 
'(NAME) "Clear the entry for a system in the database of systems previously loaded.
Note that this does NOT in any way cause the code of the system to be unloaded.")
(PROCLAIM '(NOTINLINE MAP-SYSTEMS))
(SYSTEM:FSET 'MAP-SYSTEMS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 225) 72677 
'(FN) "Apply FN to each defined system.

FN should be a function of one argument. It will be
called with an object of type asdf:system.")
(DEFVAR *SYSTEM-DEFINITION-SEARCH-FUNCTIONS* 'NIL)
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 226))
(PROCLAIM '(NOTINLINE SEARCH-FOR-SYSTEM-DEFINITION))
(SYSTEM:FSET 'SEARCH-FOR-SYSTEM-DEFINITION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
228) 73839 '(SYSTEM) NIL)
(DEFVAR *CENTRAL-REGISTRY* NIL "A list of 'system directory designators' ASDF uses to find systems.

A 'system directory designator' is a pathname or an expression
which evaluates to a pathname. For example:

    (setf asdf:*central-registry*
          (list '*default-pathname-defaults*
                #p\"/home/me/cl/systems/\"
                #p\"/usr/share/common-lisp/systems/\"))

This is for backward compatibilily.
Going forward, we recommend new users should be using the source-registry.
")
(PROCLAIM '(NOTINLINE FEATUREP))
(SYSTEM:FSET 'FEATUREP (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 230) 74563 
'(X &OPTIONAL (FEATURES *FEATURES*)) NIL)
(PROCLAIM '(NOTINLINE OS-UNIX-P))
(SYSTEM:FSET 'OS-UNIX-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 233) 74991 
'NIL NIL)
(PROCLAIM '(NOTINLINE OS-WINDOWS-P))
(SYSTEM:FSET 'OS-WINDOWS-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 234) 75056 
'NIL NIL)
(PROCLAIM '(NOTINLINE PROBE-ASD))
(SYSTEM:FSET 'PROBE-ASD (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 235) 75162 
'(NAME DEFAULTS) NIL)
(PROCLAIM '(NOTINLINE SYSDEF-CENTRAL-REGISTRY-SEARCH))
(SYSTEM:FSET 'SYSDEF-CENTRAL-REGISTRY-SEARCH (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
236) 75869 '(SYSTEM) NIL)
(PROCLAIM '(NOTINLINE MAKE-TEMPORARY-PACKAGE))
(SYSTEM:FSET 'MAKE-TEMPORARY-PACKAGE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
243) 77942 'NIL NIL)
(PROCLAIM '(NOTINLINE SAFE-FILE-WRITE-DATE))
(SYSTEM:FSET 'SAFE-FILE-WRITE-DATE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
248) 78252 '(PATHNAME) NIL)
(MOP::ENSURE-METHOD 'FIND-SYSTEM :LAMBDA-LIST '(NAME &OPTIONAL (ERROR-P T)) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'NULL)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 251))
(MOP::ENSURE-METHOD 'FIND-SYSTEM :LAMBDA-LIST '(NAME &OPTIONAL (ERROR-P T)) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 253))
(DEFVAR *SYSTEMS-BEING-DEFINED* NIL "A hash-table of systems currently being defined keyed by name, or NIL")
(DEFVAR *SYSTEMS-BEING-OPERATED* NIL "A boolean indicating that some systems are being operated on")
(PROCLAIM '(NOTINLINE FIND-SYSTEM-IF-BEING-DEFINED))
(SYSTEM:FSET 'FIND-SYSTEM-IF-BEING-DEFINED (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
255) 79539 '(NAME) NIL)
(PROCLAIM '(NOTINLINE CALL-WITH-SYSTEM-DEFINITIONS))
(SYSTEM:FSET 'CALL-WITH-SYSTEM-DEFINITIONS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
256) 79675 '(THUNK) NIL)
(SYSTEM:FSET 'WITH-SYSTEM-DEFINITIONS (SYSTEM:MAKE-MACRO 'WITH-SYSTEM-DEFINITIONS 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 257)) 79870 '((&OPTIONAL) &BODY BODY))
(PROCLAIM '(NOTINLINE LOAD-SYSDEF))
(SYSTEM:FSET 'LOAD-SYSDEF (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 258) 79986 
'(NAME PATHNAME) NIL)
(PROCLAIM '(NOTINLINE LOCATE-SYSTEM))
(SYSTEM:FSET 'LOCATE-SYSTEM (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 262) 
81068 '(NAME) "Given a system NAME designator, try to locate where to load the system from.
Returns five values: FOUNDP FOUND-SYSTEM PATHNAME PREVIOUS PREVIOUS-TIME
FOUNDP is true when a system was found,
either a new unregistered one or a previously registered one.
FOUND-SYSTEM when not null is a SYSTEM object that may be REGISTER-SYSTEM'ed as is
PATHNAME when not null is a path from where to load the system,
either associated with FOUND-SYSTEM, or with the PREVIOUS system.
PREVIOUS when not null is a previously loaded SYSTEM object of same name.
PREVIOUS-TIME when not null is the time at which the PREVIOUS system was loaded.")
(MOP::ENSURE-METHOD 'FIND-SYSTEM :LAMBDA-LIST '(NAME &OPTIONAL (ERROR-P T)) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'STRING)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 263))
(PROCLAIM '(NOTINLINE FIND-SYSTEM-FALLBACK))
(SYSTEM:FSET 'FIND-SYSTEM-FALLBACK (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
269) 84544 '(REQUESTED FALLBACK &REST KEYS &KEY SOURCE-FILE &ALLOW-OTHER-KEYS) NIL)
(PROCLAIM '(NOTINLINE SYSDEF-FIND-ASDF))
(SYSTEM:FSET 'SYSDEF-FIND-ASDF (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 270) 
84954 '(NAME) NIL)
(MOP::ENSURE-METHOD 'FIND-COMPONENT :LAMBDA-LIST '(BASE PATH) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'STRING 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 271) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
272))
(MOP::ENSURE-METHOD 'FIND-COMPONENT :LAMBDA-LIST '(BASE PATH) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'SYMBOL 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 273) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
274))
(MOP::ENSURE-METHOD 'FIND-COMPONENT :LAMBDA-LIST '(BASE PATH) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'CONS 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 275) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
276))
(MOP::ENSURE-METHOD 'FIND-COMPONENT :LAMBDA-LIST '(MODULE NAME) :QUALIFIERS 'NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'MODULE 'STRING)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 277) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
278))
(MOP::ENSURE-METHOD 'FIND-COMPONENT :LAMBDA-LIST '(COMPONENT NAME) :QUALIFIERS 'NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'COMPONENT 'SYMBOL)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 279) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 280))
(MOP::ENSURE-METHOD 'FIND-COMPONENT :LAMBDA-LIST '(MODULE NAME) :QUALIFIERS 'NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'MODULE 'CONS)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 281) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
282))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 283))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 285))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 287))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 289))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 291))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 293))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 295))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 296))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 297))
(MOP::ENSURE-METHOD 'SOURCE-FILE-TYPE :LAMBDA-LIST '(COMPONENT S) :QUALIFIERS 'NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'MODULE 'MODULE)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 299) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
300))
(MOP::ENSURE-METHOD 'SOURCE-FILE-TYPE :LAMBDA-LIST '(COMPONENT S) :QUALIFIERS 'NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'SOURCE-FILE 'MODULE)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 301) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 302))
(MOP::ENSURE-METHOD 'COMPONENT-RELATIVE-PATHNAME :LAMBDA-LIST '(COMPONENT) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'COMPONENT)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 303) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
304))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 305))
(MOP::ENSURE-METHOD 'PRINT-OBJECT :LAMBDA-LIST '(O STREAM) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'OPERATION 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 312) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
316))
(MOP::ENSURE-METHOD 'SHARED-INITIALIZE :LAMBDA-LIST '(OPERATION SLOT-NAMES &KEY FORCE 
FORCE-NOT &ALLOW-OTHER-KEYS) :QUALIFIERS '(:AFTER) :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS 
(LIST 'OPERATION 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 320))
(PROCLAIM '(NOTINLINE NODE-FOR))
(SYSTEM:FSET 'NODE-FOR (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 322) 89239 
'(O C) NIL)
(MOP::ENSURE-METHOD 'OPERATION-ANCESTOR :LAMBDA-LIST '(OPERATION) :QUALIFIERS 'NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'OPERATION)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 323) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
324))
(PROCLAIM '(NOTINLINE MAKE-SUB-OPERATION))
(SYSTEM:FSET 'MAKE-SUB-OPERATION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
325) 89442 '(C O DEP-C DEP-O) "C is a component, O is an operation, DEP-C is another
component, and DEP-O, confusingly enough, is an operation
class specifier, not an operation.")
(MOP::ENSURE-METHOD 'VISIT-COMPONENT :LAMBDA-LIST '(O C DATA) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'OPERATION 'COMPONENT 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 326))
(MOP::ENSURE-METHOD 'COMPONENT-VISITED-P :LAMBDA-LIST '(O C) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'OPERATION 'COMPONENT)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 327) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
328))
(MOP::ENSURE-METHOD '(SETF VISITING-COMPONENT) :LAMBDA-LIST '(NEW-VALUE OPERATION 
COMPONENT) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'T 
'T 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 329))
(MOP::ENSURE-METHOD '(SETF VISITING-COMPONENT) :LAMBDA-LIST '(NEW-VALUE O C) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'T 'OPERATION 'COMPONENT)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 330))
(MOP::ENSURE-METHOD 'COMPONENT-VISITING-P :LAMBDA-LIST '(O C) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'OPERATION 'COMPONENT)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 331) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
332))
(MOP::ENSURE-METHOD 'COMPONENT-DEPENDS-ON :LAMBDA-LIST '(OP-SPEC C) :QUALIFIERS 'NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'SYMBOL 'COMPONENT)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 333) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 334))
(MOP::ENSURE-METHOD 'COMPONENT-DEPENDS-ON :LAMBDA-LIST '(O C) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'OPERATION 'COMPONENT)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 335) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
336))
(MOP::ENSURE-METHOD 'COMPONENT-SELF-DEPENDENCIES :LAMBDA-LIST '(O C) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'OPERATION 'COMPONENT)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 337) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 339))
(MOP::ENSURE-METHOD 'INPUT-FILES :LAMBDA-LIST '(OPERATION C) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'OPERATION 'COMPONENT)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 341) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
343))
(MOP::ENSURE-METHOD 'INPUT-FILES :LAMBDA-LIST '(OPERATION C) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'OPERATION 'MODULE)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 345) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
346))
(MOP::ENSURE-METHOD 'COMPONENT-OPERATION-TIME :LAMBDA-LIST '(O C) :QUALIFIERS 'NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'T 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 347) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
348))
(MOP::ENSURE-METHOD 'OPERATION-DONE-P :LAMBDA-LIST '(O C) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'OPERATION 'COMPONENT)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 349) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
352))
(DEFVAR *FORCING* NIL "This dynamically-bound variable is used to force operations in
recursive calls to traverse.")
(PROCLAIM '(NOTINLINE DO-TRAVERSE))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 355))
(PROCLAIM '(NOTINLINE RESOLVE-DEPENDENCY-NAME))
(SYSTEM:FSET 'RESOLVE-DEPENDENCY-NAME (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
356) 95715 '(COMPONENT NAME &OPTIONAL VERSION) NIL)
(PROCLAIM '(NOTINLINE RESOLVE-DEPENDENCY-SPEC))
(SYSTEM:FSET 'RESOLVE-DEPENDENCY-SPEC (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
361) 96676 '(COMPONENT DEP-SPEC) NIL)
(PROCLAIM '(NOTINLINE DO-ONE-DEP))
(SYSTEM:FSET 'DO-ONE-DEP (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 362) 97910 
'(OP C COLLECT DEP-OP DEP-C) NIL)
(PROCLAIM '(NOTINLINE DO-DEP))
(SYSTEM:FSET 'DO-DEP (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 363) 98332 '(OP 
C COLLECT DEP-OP-SPEC DEP-C-SPECS) NIL)
(DEFVAR *VISIT-COUNT* 0)
(PROCLAIM '(NOTINLINE DO-COLLECT))
(SYSTEM:FSET 'DO-COLLECT (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 364) 99704 
'(COLLECT X) NIL)
(MOP::ENSURE-METHOD 'DO-TRAVERSE :LAMBDA-LIST '(OPERATION C COLLECT) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'OPERATION 'COMPONENT 'T)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 365))
(PROCLAIM '(NOTINLINE FLATTEN-TREE))
(SYSTEM:FSET 'FLATTEN-TREE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 373) 104341 
'(L) NIL)
(MOP::ENSURE-METHOD 'TRAVERSE :LAMBDA-LIST '(OPERATION C) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'OPERATION 'COMPONENT)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 377) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
379))
(MOP::ENSURE-METHOD 'PERFORM :LAMBDA-LIST '(OPERATION C) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'OPERATION 'SOURCE-FILE)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 381) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
382))
(MOP::ENSURE-METHOD 'PERFORM :LAMBDA-LIST '(OPERATION C) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'OPERATION 'MODULE)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 383) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
384))
(MOP::ENSURE-METHOD 'MARK-OPERATION-DONE :LAMBDA-LIST '(OPERATION C) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'OPERATION 'COMPONENT)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 385) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 386))
(MOP::ENSURE-METHOD 'PERFORM-WITH-RESTARTS :LAMBDA-LIST '(OPERATION COMPONENT) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'T 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 387) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
388))
(MOP::ENSURE-METHOD 'PERFORM-WITH-RESTARTS :LAMBDA-LIST '(OPERATION COMPONENT) :QUALIFIERS 
'(:AROUND) :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'T 'T)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 389))
(MOP::ENSURE-METHOD 'EXPLAIN :LAMBDA-LIST '(OPERATION COMPONENT) :QUALIFIERS 'NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'OPERATION 'COMPONENT)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 399) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 400))
(MOP::ENSURE-METHOD 'OPERATION-DESCRIPTION :LAMBDA-LIST '(OPERATION COMPONENT) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'T 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 401) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
402))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 403))
(PROCLAIM '(NOTINLINE OUTPUT-FILE))
(SYSTEM:FSET 'OUTPUT-FILE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 408) 107459 
'(OPERATION COMPONENT) "The unique output file of performing OPERATION on COMPONENT")
(PROCLAIM '(NOTINLINE ENSURE-ALL-DIRECTORIES-EXIST))
(SYSTEM:FSET 'ENSURE-ALL-DIRECTORIES-EXIST (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
409) 107672 '(PATHNAMES) NIL)
(MOP::ENSURE-METHOD 'PERFORM :LAMBDA-LIST '(OPERATION C) :QUALIFIERS '(:BEFORE) :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'COMPILE-OP 'SOURCE-FILE)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 410) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
411))
(MOP::ENSURE-METHOD 'PERFORM :LAMBDA-LIST '(OPERATION C) :QUALIFIERS '(:AFTER) :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'OPERATION 'COMPONENT)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 412) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
413))
(PROCLAIM '(NOTINLINE AROUND-COMPILE-HOOK))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 414))
(PROCLAIM '(NOTINLINE CALL-WITH-AROUND-COMPILE-HOOK))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 415))
(MOP::ENSURE-METHOD 'AROUND-COMPILE-HOOK :LAMBDA-LIST '(C) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'COMPONENT)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 416) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
417))
(SYSTEM:FSET 'ENSURE-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 418) 
108374 '(FUN &KEY (PACKAGE :ASDF)) NIL)
(SYSTEM:FSET 'CALL-AROUND-HOOK (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 420) 
108699 '(HOOK FUNCTION) NIL)
(MOP::ENSURE-METHOD 'CALL-WITH-AROUND-COMPILE-HOOK :LAMBDA-LIST '(C FUNCTION) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'COMPONENT 'T)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 421) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 422))
(MOP::ENSURE-METHOD 'PERFORM :LAMBDA-LIST '(OPERATION C) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'COMPILE-OP 'CL-SOURCE-FILE)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 423) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
425))
(MOP::ENSURE-METHOD 'OUTPUT-FILES :LAMBDA-LIST '(OPERATION C) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'COMPILE-OP 'CL-SOURCE-FILE)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 427) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
428))
(MOP::ENSURE-METHOD 'PERFORM :LAMBDA-LIST '(OPERATION C) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'COMPILE-OP 'STATIC-FILE)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 429) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
430))
(MOP::ENSURE-METHOD 'OUTPUT-FILES :LAMBDA-LIST '(OPERATION C) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'COMPILE-OP 'STATIC-FILE)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 431) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
432))
(MOP::ENSURE-METHOD 'INPUT-FILES :LAMBDA-LIST '(OPERATION C) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'COMPILE-OP 'STATIC-FILE)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 433) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
434))
(MOP::ENSURE-METHOD 'OPERATION-DESCRIPTION :LAMBDA-LIST '(OPERATION COMPONENT) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'COMPILE-OP 'T)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 435) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 436))
(MOP::ENSURE-METHOD 'OPERATION-DESCRIPTION :LAMBDA-LIST '(OPERATION COMPONENT) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'COMPILE-OP 'MODULE)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 437) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 438))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 439))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 440))
(MOP::ENSURE-METHOD 'PERFORM-WITH-RESTARTS :LAMBDA-LIST '(O C) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'LOAD-OP 'CL-SOURCE-FILE)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 441))
(MOP::ENSURE-METHOD 'PERFORM :LAMBDA-LIST '(O C) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS 
(LIST 'LOAD-OP 'CL-SOURCE-FILE)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
449) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 450))
(MOP::ENSURE-METHOD 'PERFORM :LAMBDA-LIST '(OPERATION C) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'LOAD-OP 'STATIC-FILE)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 451) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
452))
(MOP::ENSURE-METHOD 'OPERATION-DONE-P :LAMBDA-LIST '(OPERATION C) :QUALIFIERS 'NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'LOAD-OP 'STATIC-FILE)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 453) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 454))
(MOP::ENSURE-METHOD 'OUTPUT-FILES :LAMBDA-LIST '(OPERATION C) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'OPERATION 'COMPONENT)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 455) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
456))
(MOP::ENSURE-METHOD 'COMPONENT-DEPENDS-ON :LAMBDA-LIST '(OPERATION C) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'LOAD-OP 'COMPONENT)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 457))
(MOP::ENSURE-METHOD 'OPERATION-DESCRIPTION :LAMBDA-LIST '(OPERATION COMPONENT) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'LOAD-OP 'T)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 461) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 462))
(MOP::ENSURE-METHOD 'OPERATION-DESCRIPTION :LAMBDA-LIST '(OPERATION COMPONENT) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'LOAD-OP 'CL-SOURCE-FILE)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 463) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 464))
(MOP::ENSURE-METHOD 'OPERATION-DESCRIPTION :LAMBDA-LIST '(OPERATION COMPONENT) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'LOAD-OP 'MODULE)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 465) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 466))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 467))
(MOP::ENSURE-METHOD 'PERFORM :LAMBDA-LIST '(O C) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS 
(LIST 'LOAD-SOURCE-OP 'CL-SOURCE-FILE)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
468) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 470))
(MOP::ENSURE-METHOD 'PERFORM :LAMBDA-LIST '(OPERATION C) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'LOAD-SOURCE-OP 'STATIC-FILE)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 472) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
473))
(MOP::ENSURE-METHOD 'OUTPUT-FILES :LAMBDA-LIST '(OPERATION C) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'LOAD-SOURCE-OP 'COMPONENT)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 474) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
475))
(MOP::ENSURE-METHOD 'COMPONENT-DEPENDS-ON :LAMBDA-LIST '(O C) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'LOAD-SOURCE-OP 'COMPONENT)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 476) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
477))
(MOP::ENSURE-METHOD 'OPERATION-DONE-P :LAMBDA-LIST '(O C) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'LOAD-SOURCE-OP 'SOURCE-FILE)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 478) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
479))
(MOP::ENSURE-METHOD 'OPERATION-DESCRIPTION :LAMBDA-LIST '(OPERATION COMPONENT) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'LOAD-SOURCE-OP 'T)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 480) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 481))
(MOP::ENSURE-METHOD 'OPERATION-DESCRIPTION :LAMBDA-LIST '(OPERATION COMPONENT) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'LOAD-SOURCE-OP 'MODULE)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 482) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 483))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 484))
(MOP::ENSURE-METHOD 'PERFORM :LAMBDA-LIST '(OPERATION C) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'TEST-OP 'COMPONENT)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 485) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
486))
(MOP::ENSURE-METHOD 'OPERATION-DONE-P :LAMBDA-LIST '(OPERATION C) :QUALIFIERS 'NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'TEST-OP 'SYSTEM)) :DOCUMENTATION 
"Testing a system is _never_ done." :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
487) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 488))
(MOP::ENSURE-METHOD 'COMPONENT-DEPENDS-ON :LAMBDA-LIST '(O C) :QUALIFIERS '(:AROUND) 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'TEST-OP 'SYSTEM)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 489))
(PROCLAIM '(NOTINLINE OPERATE))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 493))
(PROCLAIM '(NOTINLINE PERFORM-PLAN))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 494))
(PROCLAIM '(NOTINLINE PLAN-OPERATES-ON-P))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 495))
(PROCLAIM '(NOTINLINE CLEANUP-UPGRADED-ASDF))
(SYSTEM:FSET 'CLEANUP-UPGRADED-ASDF (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
496) 116199 '(OLD-VERSION) NIL)
(PROCLAIM '(NOTINLINE UPGRADE-ASDF))
(SYSTEM:FSET 'UPGRADE-ASDF (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 497) 117496 
'NIL NIL)
(MOP::ENSURE-METHOD 'PLAN-OPERATES-ON-P :LAMBDA-LIST '(PLAN COMPONENT-PATH) :QUALIFIERS 
'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'LIST 'LIST)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 499) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 500))
(MOP::ENSURE-METHOD 'PERFORM-PLAN :LAMBDA-LIST '(STEPS &KEY) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'LIST)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 501))
(MOP::ENSURE-METHOD 'OPERATE :LAMBDA-LIST '(OPERATION-CLASS SYSTEM &REST ARGS &KEY 
FORCE FORCE-NOT VERBOSE VERSION &ALLOW-OTHER-KEYS) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'T 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 504))
(PROCLAIM '(NOTINLINE OOS))
(SYSTEM:FSET 'OOS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 508) 120191 '(OPERATION-CLASS 
SYSTEM &REST ARGS &KEY FORCE FORCE-NOT VERBOSE VERSION &ALLOW-OTHER-KEYS) NIL)
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 509))
(PROCLAIM '(NOTINLINE LOAD-SYSTEM))
(SYSTEM:FSET 'LOAD-SYSTEM (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 511) 121371 
'(SYSTEM &REST KEYS &KEY FORCE VERBOSE VERSION &ALLOW-OTHER-KEYS) "Shorthand for `(operate 'asdf:load-op system)`.
See OPERATE for details.")
(PROCLAIM '(NOTINLINE LOAD-SYSTEMS))
(SYSTEM:FSET 'LOAD-SYSTEMS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 512) 121637 
'(&REST SYSTEMS) NIL)
(SYSTEM:FSET 'COMPONENT-LOADED-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
513) 121708 '(C) NIL)
(SYSTEM:FSET 'LOADED-SYSTEMS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 514) 
121820 'NIL NIL)
(SYSTEM:FSET 'REQUIRE-SYSTEM (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 515) 
121906 '(S &REST KEYS &KEY &ALLOW-OTHER-KEYS) NIL)
(PROCLAIM '(NOTINLINE COMPILE-SYSTEM))
(SYSTEM:FSET 'COMPILE-SYSTEM (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 516) 
122026 '(SYSTEM &REST ARGS &KEY FORCE VERBOSE VERSION &ALLOW-OTHER-KEYS) "Shorthand for `(asdf:operate 'asdf:compile-op system)`. See OPERATE
for details.")
(PROCLAIM '(NOTINLINE TEST-SYSTEM))
(SYSTEM:FSET 'TEST-SYSTEM (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 517) 122314 
'(SYSTEM &REST ARGS &KEY FORCE VERBOSE VERSION &ALLOW-OTHER-KEYS) "Shorthand for `(asdf:operate 'asdf:test-op system)`. See OPERATE for
details.")
(PROCLAIM '(NOTINLINE LOAD-PATHNAME))
(SYSTEM:FSET 'LOAD-PATHNAME (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 518) 
122590 'NIL NIL)
(PROCLAIM '(NOTINLINE DETERMINE-SYSTEM-PATHNAME))
(SYSTEM:FSET 'DETERMINE-SYSTEM-PATHNAME (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
519) 122779 '(PATHNAME) NIL)
(PROCLAIM '(NOTINLINE FIND-CLASS*))
(SYSTEM:FSET 'FIND-CLASS* (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 520) 123344 
'(X &OPTIONAL (ERRORP T) ENVIRONMENT) NIL)
(PROCLAIM '(NOTINLINE CLASS-FOR-TYPE))
(SYSTEM:FSET 'CLASS-FOR-TYPE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 521) 
123509 '(PARENT TYPE) NIL)
(PROCLAIM '(NOTINLINE MAYBE-ADD-TREE))
(SYSTEM:FSET 'MAYBE-ADD-TREE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 522) 
124291 '(TREE OP1 OP2 C) "Add the node C at /OP1/OP2 in TREE, unless it's there already.
Returns the new tree (which probably shares structure with the old one)")
(PROCLAIM '(NOTINLINE UNION-OF-DEPENDENCIES))
(SYSTEM:FSET 'UNION-OF-DEPENDENCIES (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
523) 124894 '(&REST DEPS) NIL)
(DEFVAR *SERIAL-DEPENDS-ON* NIL)
(PROCLAIM '(NOTINLINE SYSDEF-ERROR-COMPONENT))
(SYSTEM:FSET 'SYSDEF-ERROR-COMPONENT (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
524) 125231 '(MSG TYPE NAME VALUE) NIL)
(PROCLAIM '(NOTINLINE CHECK-COMPONENT-INPUT))
(SYSTEM:FSET 'CHECK-COMPONENT-INPUT (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
525) 125411 '(TYPE NAME WEAKLY-DEPENDS-ON DEPENDS-ON COMPONENTS IN-ORDER-TO) "A partial test of the values of a component.")
(PROCLAIM '(NOTINLINE %REMOVE-COMPONENT-INLINE-METHODS))
(SYSTEM:FSET '%REMOVE-COMPONENT-INLINE-METHODS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
526) 126236 '(COMPONENT) NIL)
(PROCLAIM '(NOTINLINE %DEFINE-COMPONENT-INLINE-METHODS))
(SYSTEM:FSET '%DEFINE-COMPONENT-INLINE-METHODS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
528) 126714 '(RET REST) NIL)
(PROCLAIM '(NOTINLINE %REFRESH-COMPONENT-INLINE-METHODS))
(SYSTEM:FSET '%REFRESH-COMPONENT-INLINE-METHODS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
529) 127260 '(COMPONENT REST) NIL)
(PROCLAIM '(NOTINLINE PARSE-COMPONENT-FORM))
(SYSTEM:FSET 'PARSE-COMPONENT-FORM (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
530) 127420 '(PARENT OPTIONS) NIL)
(PROCLAIM '(NOTINLINE RESET-SYSTEM))
(SYSTEM:FSET 'RESET-SYSTEM (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 532) 130428 
'(SYSTEM &REST KEYS &KEY &ALLOW-OTHER-KEYS) NIL)
(PROCLAIM '(NOTINLINE DO-DEFSYSTEM))
(SYSTEM:FSET 'DO-DEFSYSTEM (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 533) 130600 
'(NAME &REST OPTIONS &KEY PATHNAME (CLASS 'SYSTEM) DEFSYSTEM-DEPENDS-ON &ALLOW-OTHER-KEYS) 
NIL)
(SYSTEM:FSET 'DEFSYSTEM (SYSTEM:MAKE-MACRO 'DEFSYSTEM (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 535)) 132209 '(NAME &BODY OPTIONS))
(PROCLAIM '(NOTINLINE RUN-SHELL-COMMAND))
(SYSTEM:FSET 'RUN-SHELL-COMMAND (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 536) 
132294 '(CONTROL-STRING &REST ARGS) "Interpolate ARGS into CONTROL-STRING as if by FORMAT, and
synchronously execute the result using a Bourne-compatible shell, with
output to *VERBOSE-OUT*.  Returns the shell's exit code.")
(PROCLAIM '(NOTINLINE SYSTEM-DEFINITION-PATHNAME))
(SYSTEM:FSET 'SYSTEM-DEFINITION-PATHNAME (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
537) 137311 '(X) "Function ASDF:SYSTEM-DEFINITION-PATHNAME is obsolete.
It used to expose ASDF internals with subtle differences with respect to
user expectations, that have been refactored away since.
We recommend you use ASDF:SYSTEM-SOURCE-FILE instead
for a mostly compatible replacement that we're supporting,
or even ASDF:SYSTEM-SOURCE-DIRECTORY or ASDF:SYSTEM-RELATIVE-PATHNAME
if that's whay you mean.")
(MOP::ENSURE-METHOD 'SYSTEM-SOURCE-FILE :LAMBDA-LIST '(SYSTEM) :QUALIFIERS 'NIL :SPECIALIZERS 
(MOP::CANONICALIZE-SPECIALIZERS (LIST 'SYSTEM)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 538) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
539))
(MOP::ENSURE-METHOD 'SYSTEM-SOURCE-FILE :LAMBDA-LIST '(SYSTEM-NAME) :QUALIFIERS 'NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'STRING)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 540) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
541))
(MOP::ENSURE-METHOD 'SYSTEM-SOURCE-FILE :LAMBDA-LIST '(SYSTEM-NAME) :QUALIFIERS 'NIL 
:SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'SYMBOL)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 542) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
543))
(PROCLAIM '(NOTINLINE SYSTEM-SOURCE-DIRECTORY))
(SYSTEM:FSET 'SYSTEM-SOURCE-DIRECTORY (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
544) 139466 '(SYSTEM-DESIGNATOR) "Return a pathname object corresponding to the
directory in which the system specification (.asd file) is
located.")
(PROCLAIM '(NOTINLINE RELATIVIZE-DIRECTORY))
(SYSTEM:FSET 'RELATIVIZE-DIRECTORY (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
545) 139709 '(DIRECTORY) NIL)
(PROCLAIM '(NOTINLINE RELATIVIZE-PATHNAME-DIRECTORY))
(SYSTEM:FSET 'RELATIVIZE-PATHNAME-DIRECTORY (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
546) 139917 '(PATHSPEC) NIL)
(PROCLAIM '(NOTINLINE SYSTEM-RELATIVE-PATHNAME))
(SYSTEM:FSET 'SYSTEM-RELATIVE-PATHNAME (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
547) 140101 '(SYSTEM NAME &KEY TYPE) NIL)
(PROCLAIM '(NOTINLINE FIRST-FEATURE))
(SYSTEM:FSET 'FIRST-FEATURE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 548) 
140225 '(FEATURES) NIL)
(SYSTEM:FSET 'IMPLEMENTATION-TYPE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
549) 140738 'NIL NIL)
(SYSTEM:FSET 'OPERATING-SYSTEM (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 550) 
140936 'NIL NIL)
(SYSTEM:FSET 'ARCHITECTURE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 551) 141302 
'NIL NIL)
(SYSTEM:FSET 'LISP-VERSION-STRING (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
552) 141914 'NIL NIL)
(PROCLAIM '(NOTINLINE IMPLEMENTATION-IDENTIFIER))
(SYSTEM:FSET 'IMPLEMENTATION-IDENTIFIER (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
554) 143903 'NIL NIL)
(PROCLAIM '(NOTINLINE HOSTNAME))
(SYSTEM:FSET 'HOSTNAME (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 557) 144286 
'NIL NIL)
(SYSTEM:FSET 'INTER-DIRECTORY-SEPARATOR (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
558) 144626 'NIL NIL)
(PROCLAIM '(NOTINLINE USER-HOMEDIR))
(SYSTEM:FSET 'USER-HOMEDIR (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 559) 144817 
'NIL NIL)
(PROCLAIM '(NOTINLINE ENSURE-PATHNAME*))
(SYSTEM:FSET 'ENSURE-PATHNAME* (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 560) 
145052 '(X WANT-ABSOLUTE WANT-DIRECTORY FMT &REST ARGS) NIL)
(PROCLAIM '(NOTINLINE SPLIT-PATHNAMES*))
(SYSTEM:FSET 'SPLIT-PATHNAMES* (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 561) 
145469 '(X WANT-ABSOLUTE WANT-DIRECTORY FMT &REST ARGS) NIL)
(PROCLAIM '(NOTINLINE GETENV-PATHNAME))
(SYSTEM:FSET 'GETENV-PATHNAME (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 562) 
145737 '(X &KEY WANT-ABSOLUTE WANT-DIRECTORY &AUX (S (GETENV X))) NIL)
(PROCLAIM '(NOTINLINE GETENV-PATHNAMES))
(SYSTEM:FSET 'GETENV-PATHNAMES (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 563) 
145893 '(X &KEY WANT-ABSOLUTE WANT-DIRECTORY &AUX (S (GETENV X))) NIL)
(PROCLAIM '(NOTINLINE GETENV-ABSOLUTE-DIRECTORY))
(SYSTEM:FSET 'GETENV-ABSOLUTE-DIRECTORY (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
564) 146089 '(X) NIL)
(PROCLAIM '(NOTINLINE GETENV-ABSOLUTE-DIRECTORIES))
(SYSTEM:FSET 'GETENV-ABSOLUTE-DIRECTORIES (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
565) 146185 '(X) NIL)
(PROCLAIM '(NOTINLINE GET-FOLDER-PATH))
(SYSTEM:FSET 'GET-FOLDER-PATH (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 566) 
146284 '(FOLDER) NIL)
(PROCLAIM '(NOTINLINE USER-CONFIGURATION-DIRECTORIES))
(SYSTEM:FSET 'USER-CONFIGURATION-DIRECTORIES (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
567) 146901 'NIL NIL)
(PROCLAIM '(NOTINLINE SYSTEM-CONFIGURATION-DIRECTORIES))
(SYSTEM:FSET 'SYSTEM-CONFIGURATION-DIRECTORIES (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
568) 147639 'NIL NIL)
(PROCLAIM '(NOTINLINE IN-FIRST-DIRECTORY))
(SYSTEM:FSET 'IN-FIRST-DIRECTORY (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
569) 147997 '(DIRS X &KEY (DIRECTION :INPUT)) NIL)
(PROCLAIM '(NOTINLINE IN-USER-CONFIGURATION-DIRECTORY))
(SYSTEM:FSET 'IN-USER-CONFIGURATION-DIRECTORY (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
570) 148315 '(X &KEY (DIRECTION :INPUT)) NIL)
(PROCLAIM '(NOTINLINE IN-SYSTEM-CONFIGURATION-DIRECTORY))
(SYSTEM:FSET 'IN-SYSTEM-CONFIGURATION-DIRECTORY (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
571) 148464 '(X &KEY (DIRECTION :INPUT)) NIL)
(PROCLAIM '(NOTINLINE CONFIGURATION-INHERITANCE-DIRECTIVE-P))
(SYSTEM:FSET 'CONFIGURATION-INHERITANCE-DIRECTIVE-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
572) 148616 '(X) NIL)
(PROCLAIM '(NOTINLINE REPORT-INVALID-FORM))
(SYSTEM:FSET 'REPORT-INVALID-FORM (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
573) 148815 '(REPORTER &REST ARGS) NIL)
(DEFVAR *IGNORED-CONFIGURATION-FORM* NIL)
(PROCLAIM '(NOTINLINE VALIDATE-CONFIGURATION-FORM))
(SYSTEM:FSET 'VALIDATE-CONFIGURATION-FORM (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
574) 149147 '(FORM TAG DIRECTIVE-VALIDATOR &KEY LOCATION INVALID-FORM-REPORTER) NIL)
(PROCLAIM '(NOTINLINE VALIDATE-CONFIGURATION-FILE))
(SYSTEM:FSET 'VALIDATE-CONFIGURATION-FILE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
575) 150439 '(FILE VALIDATOR &KEY DESCRIPTION) NIL)
(PROCLAIM '(NOTINLINE HIDDEN-FILE-P))
(SYSTEM:FSET 'HIDDEN-FILE-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 576) 
150756 '(PATHNAME) NIL)
(PROCLAIM '(NOTINLINE DIRECTORY*))
(SYSTEM:FSET 'DIRECTORY* (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 577) 150843 
'(PATHNAME-SPEC &REST KEYS &KEY &ALLOW-OTHER-KEYS) NIL)
(PROCLAIM '(NOTINLINE VALIDATE-CONFIGURATION-DIRECTORY))
(SYSTEM:FSET 'VALIDATE-CONFIGURATION-DIRECTORY (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
578) 151414 '(DIRECTORY TAG VALIDATOR &KEY INVALID-FORM-REPORTER) "Map the VALIDATOR across the .conf files in DIRECTORY, the TAG will
be applied to the results to yield a configuration form.  Current
values of TAG include :source-registry and :output-translations.")
(DEFVAR *OUTPUT-TRANSLATIONS* NIL "Either NIL (for uninitialized), or a list of one element,
said element itself being a sorted list of mappings.
Each mapping is a pair of a source pathname and destination pathname,
and the order is by decreasing length of namestring of the source pathname.")
(DEFVAR *USER-CACHE* (FLET ((TRY (X &REST SUB) (AND X (SYSTEM::BACKQ-CONS X SUB)))) 
(OR (TRY (GETENV-ABSOLUTE-DIRECTORY "XDG_CACHE_HOME") "common-lisp" :IMPLEMENTATION) 
(WHEN (OS-WINDOWS-P) (TRY (OR (GET-FOLDER-PATH :LOCAL-APPDATA) (GET-FOLDER-PATH :APPDATA)) 
"common-lisp" "cache" :IMPLEMENTATION)) '(:HOME ".cache" "common-lisp" :IMPLEMENTATION))))
(PROCLAIM '(NOTINLINE OUTPUT-TRANSLATIONS))
(SYSTEM:FSET 'OUTPUT-TRANSLATIONS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
581) 153567 'NIL NIL)
(PROCLAIM '(NOTINLINE (SETF OUTPUT-TRANSLATIONS)))
(SYSTEM:FSET '(SETF OUTPUT-TRANSLATIONS) (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
582) 153630 '(NEW-VALUE) NIL)
(PROCLAIM '(NOTINLINE OUTPUT-TRANSLATIONS-INITIALIZED-P))
(SYSTEM:FSET 'OUTPUT-TRANSLATIONS-INITIALIZED-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
584) 154132 'NIL NIL)
(PROCLAIM '(NOTINLINE CLEAR-OUTPUT-TRANSLATIONS))
(SYSTEM:FSET 'CLEAR-OUTPUT-TRANSLATIONS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
585) 154211 'NIL "Undoes any initialization of the output translations.
You might want to call that before you dump an image that would be resumed
with a different configuration, so the configuration would be re-read then.")
(PROCLAIM '(FTYPE (FUNCTION (T &KEY (:DIRECTORY BOOLEAN) (:WILDEN BOOLEAN)) (VALUES 
(OR NULL PATHNAME) &OPTIONAL)) RESOLVE-LOCATION))
(PROCLAIM '(NOTINLINE RESOLVE-RELATIVE-LOCATION-COMPONENT))
(SYSTEM:FSET 'RESOLVE-RELATIVE-LOCATION-COMPONENT (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
586) 154680 '(X &KEY DIRECTORY WILDEN) NIL)
(DEFVAR *HERE-DIRECTORY* NIL "This special variable is bound to the currect directory during calls to
PROCESS-SOURCE-REGISTRY in order that we be able to interpret the :here
directive.")
(PROCLAIM '(NOTINLINE RESOLVE-ABSOLUTE-LOCATION-COMPONENT))
(SYSTEM:FSET 'RESOLVE-ABSOLUTE-LOCATION-COMPONENT (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
587) 156290 '(X &KEY DIRECTORY WILDEN) NIL)
(PROCLAIM '(NOTINLINE RESOLVE-LOCATION))
(SYSTEM:FSET 'RESOLVE-LOCATION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 588) 
158370 '(X &KEY DIRECTORY WILDEN) NIL)
(PROCLAIM '(NOTINLINE LOCATION-DESIGNATOR-P))
(SYSTEM:FSET 'LOCATION-DESIGNATOR-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
589) 159089 '(X) NIL)
(PROCLAIM '(NOTINLINE LOCATION-FUNCTION-P))
(SYSTEM:FSET 'LOCATION-FUNCTION-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
592) 159664 '(X) NIL)
(PROCLAIM '(NOTINLINE VALIDATE-OUTPUT-TRANSLATIONS-DIRECTIVE))
(SYSTEM:FSET 'VALIDATE-OUTPUT-TRANSLATIONS-DIRECTIVE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
593) 159882 '(DIRECTIVE) NIL)
(PROCLAIM '(NOTINLINE VALIDATE-OUTPUT-TRANSLATIONS-FORM))
(SYSTEM:FSET 'VALIDATE-OUTPUT-TRANSLATIONS-FORM (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
594) 160564 '(FORM &KEY LOCATION) NIL)
(PROCLAIM '(NOTINLINE VALIDATE-OUTPUT-TRANSLATIONS-FILE))
(SYSTEM:FSET 'VALIDATE-OUTPUT-TRANSLATIONS-FILE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
595) 160809 '(FILE) NIL)
(PROCLAIM '(NOTINLINE VALIDATE-OUTPUT-TRANSLATIONS-DIRECTORY))
(SYSTEM:FSET 'VALIDATE-OUTPUT-TRANSLATIONS-DIRECTORY (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
596) 160970 '(DIRECTORY) NIL)
(PROCLAIM '(NOTINLINE PARSE-OUTPUT-TRANSLATIONS-STRING))
(SYSTEM:FSET 'PARSE-OUTPUT-TRANSLATIONS-STRING (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
597) 161196 '(STRING &KEY LOCATION) NIL)
(DEFPARAMETER *DEFAULT-OUTPUT-TRANSLATIONS* '(ENVIRONMENT-OUTPUT-TRANSLATIONS USER-OUTPUT-TRANSLATIONS-PATHNAME 
USER-OUTPUT-TRANSLATIONS-DIRECTORY-PATHNAME SYSTEM-OUTPUT-TRANSLATIONS-PATHNAME SYSTEM-OUTPUT-TRANSLATIONS-DIRECTORY-PATHNAME))
(PROCLAIM '(NOTINLINE WRAPPING-OUTPUT-TRANSLATIONS))
(SYSTEM:FSET 'WRAPPING-OUTPUT-TRANSLATIONS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
598) 163077 'NIL NIL)
(DEFPARAMETER *OUTPUT-TRANSLATIONS-FILE* (COERCE-PATHNAME "asdf-output-translations.conf"))
(DEFPARAMETER *OUTPUT-TRANSLATIONS-DIRECTORY* (COERCE-PATHNAME "asdf-output-translations.conf.d/"))
(PROCLAIM '(NOTINLINE USER-OUTPUT-TRANSLATIONS-PATHNAME))
(SYSTEM:FSET 'USER-OUTPUT-TRANSLATIONS-PATHNAME (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
599) 164314 '(&KEY (DIRECTION :INPUT)) NIL)
(PROCLAIM '(NOTINLINE SYSTEM-OUTPUT-TRANSLATIONS-PATHNAME))
(SYSTEM:FSET 'SYSTEM-OUTPUT-TRANSLATIONS-PATHNAME (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
600) 164468 '(&KEY (DIRECTION :INPUT)) NIL)
(PROCLAIM '(NOTINLINE USER-OUTPUT-TRANSLATIONS-DIRECTORY-PATHNAME))
(SYSTEM:FSET 'USER-OUTPUT-TRANSLATIONS-DIRECTORY-PATHNAME (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 601) 164625 '(&KEY (DIRECTION :INPUT)) NIL)
(PROCLAIM '(NOTINLINE SYSTEM-OUTPUT-TRANSLATIONS-DIRECTORY-PATHNAME))
(SYSTEM:FSET 'SYSTEM-OUTPUT-TRANSLATIONS-DIRECTORY-PATHNAME (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 602) 164793 '(&KEY (DIRECTION :INPUT)) NIL)
(PROCLAIM '(NOTINLINE ENVIRONMENT-OUTPUT-TRANSLATIONS))
(SYSTEM:FSET 'ENVIRONMENT-OUTPUT-TRANSLATIONS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
603) 164965 'NIL NIL)
(PROCLAIM '(NOTINLINE PROCESS-OUTPUT-TRANSLATIONS))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 604))
(PROCLAIM '(FTYPE (FUNCTION (T &KEY (:COLLECT (OR SYMBOL FUNCTION))) T) INHERIT-OUTPUT-TRANSLATIONS))
(PROCLAIM '(FTYPE (FUNCTION (T &KEY (:COLLECT (OR SYMBOL FUNCTION)) (:INHERIT LIST)) 
T) PROCESS-OUTPUT-TRANSLATIONS-DIRECTIVE))
(MOP::ENSURE-METHOD 'PROCESS-OUTPUT-TRANSLATIONS :LAMBDA-LIST '(X &KEY (INHERIT *DEFAULT-OUTPUT-TRANSLATIONS*) 
COLLECT) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'SYMBOL)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 605))
(MOP::ENSURE-METHOD 'PROCESS-OUTPUT-TRANSLATIONS :LAMBDA-LIST '(PATHNAME &KEY INHERIT 
COLLECT) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'PATHNAME)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 607))
(MOP::ENSURE-METHOD 'PROCESS-OUTPUT-TRANSLATIONS :LAMBDA-LIST '(STRING &KEY INHERIT 
COLLECT) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'STRING)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 609))
(MOP::ENSURE-METHOD 'PROCESS-OUTPUT-TRANSLATIONS :LAMBDA-LIST '(X &KEY INHERIT COLLECT) 
:QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'NULL)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 611))
(MOP::ENSURE-METHOD 'PROCESS-OUTPUT-TRANSLATIONS :LAMBDA-LIST '(FORM &KEY INHERIT 
COLLECT) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'CONS)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 613))
(PROCLAIM '(NOTINLINE INHERIT-OUTPUT-TRANSLATIONS))
(SYSTEM:FSET 'INHERIT-OUTPUT-TRANSLATIONS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
615) 166775 '(INHERIT &KEY COLLECT) NIL)
(PROCLAIM '(NOTINLINE PROCESS-OUTPUT-TRANSLATIONS-DIRECTIVE))
(SYSTEM:FSET 'PROCESS-OUTPUT-TRANSLATIONS-DIRECTIVE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
616) 166944 '(DIRECTIVE &KEY INHERIT COLLECT) NIL)
(PROCLAIM '(NOTINLINE COMPUTE-OUTPUT-TRANSLATIONS))
(SYSTEM:FSET 'COMPUTE-OUTPUT-TRANSLATIONS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
617) 168742 '(&OPTIONAL PARAMETER) "read the configuration, return it")
(DEFVAR *OUTPUT-TRANSLATIONS-PARAMETER* NIL)
(PROCLAIM '(NOTINLINE INITIALIZE-OUTPUT-TRANSLATIONS))
(SYSTEM:FSET 'INITIALIZE-OUTPUT-TRANSLATIONS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
619) 169091 '(&OPTIONAL (PARAMETER *OUTPUT-TRANSLATIONS-PARAMETER*)) "read the configuration, initialize the internal configuration variable,
return the configuration")
(PROCLAIM '(NOTINLINE DISABLE-OUTPUT-TRANSLATIONS))
(SYSTEM:FSET 'DISABLE-OUTPUT-TRANSLATIONS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
620) 169410 'NIL "Initialize output translations in a way that maps every file to itself,
effectively disabling the output translation facility.")
(PROCLAIM '(NOTINLINE ENSURE-OUTPUT-TRANSLATIONS))
(SYSTEM:FSET 'ENSURE-OUTPUT-TRANSLATIONS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
621) 169691 'NIL NIL)
(PROCLAIM '(NOTINLINE TRANSLATE-PATHNAME*))
(SYSTEM:FSET 'TRANSLATE-PATHNAME* (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
622) 170075 '(PATH ABSOLUTE-SOURCE DESTINATION &OPTIONAL ROOT SOURCE) NIL)
(PROCLAIM '(NOTINLINE APPLY-OUTPUT-TRANSLATIONS))
(SYSTEM:FSET 'APPLY-OUTPUT-TRANSLATIONS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
623) 170684 '(PATH) NIL)
(MOP::ENSURE-METHOD 'OUTPUT-FILES :LAMBDA-LIST '(OPERATION COMPONENT) :QUALIFIERS 
'(:AROUND) :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'T 'T)) :DOCUMENTATION 
"Translate output files, unless asked not to" :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 624))
(PROCLAIM '(NOTINLINE COMPILE-FILE-PATHNAME*))
(SYSTEM:FSET 'COMPILE-FILE-PATHNAME* (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
628) 171924 '(INPUT-FILE &REST KEYS &KEY OUTPUT-FILE &ALLOW-OTHER-KEYS) NIL)
(PROCLAIM '(NOTINLINE TMPIZE-PATHNAME))
(SYSTEM:FSET 'TMPIZE-PATHNAME (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 629) 
172471 '(X) NIL)
(PROCLAIM '(NOTINLINE DELETE-FILE-IF-EXISTS))
(SYSTEM:FSET 'DELETE-FILE-IF-EXISTS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
630) 172576 '(X) NIL)
(PROCLAIM '(NOTINLINE COMPILE-FILE*))
(SYSTEM:FSET 'COMPILE-FILE* (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 631) 
172665 '(INPUT-FILE &REST KEYS &KEY COMPILE-CHECK OUTPUT-FILE &ALLOW-OTHER-KEYS) 
NIL)
(PROCLAIM '(NOTINLINE TRANSLATE-JAR-PATHNAME))
(SYSTEM:FSET 'TRANSLATE-JAR-PATHNAME (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
632) 173947 '(SOURCE WILDCARD) NIL)
(MOP::ENSURE-METHOD 'OPERATE :LAMBDA-LIST '(OPERATION-CLASS SYSTEM &REST ARGS &KEY 
&ALLOW-OTHER-KEYS) :QUALIFIERS '(:BEFORE) :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS 
(LIST 'T 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 635))
(PROCLAIM '(NOTINLINE ENABLE-ASDF-BINARY-LOCATIONS-COMPATIBILITY))
(SYSTEM:FSET 'ENABLE-ASDF-BINARY-LOCATIONS-COMPATIBILITY (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 637) 176051 '(&KEY (CENTRALIZE-LISP-BINARIES NIL) (DEFAULT-TOPLEVEL-DIRECTORY 
(SUBPATHNAME (USER-HOMEDIR) ".fasls/")) (INCLUDE-PER-USER-INFORMATION NIL) (MAP-ALL-SOURCE-FILES 
(OR NIL)) (SOURCE-TO-TARGET-MAPPINGS NIL)) NIL)
(DEFVAR *DEFAULT-SOURCE-REGISTRY-EXCLUSIONS* '(".bzr" ".cdv" ".git" ".hg" ".pc" ".svn" 
"CVS" "RCS" "SCCS" "_darcs" "_sgbak" "autom4te.cache" "cover_db" "_build" "debian"))
(DEFVAR *SOURCE-REGISTRY-EXCLUSIONS* *DEFAULT-SOURCE-REGISTRY-EXCLUSIONS*)
(DEFVAR *SOURCE-REGISTRY* NIL "Either NIL (for uninitialized), or an equal hash-table, mapping
system names to pathnames of .asd files")
(PROCLAIM '(NOTINLINE SOURCE-REGISTRY-INITIALIZED-P))
(SYSTEM:FSET 'SOURCE-REGISTRY-INITIALIZED-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
638) 178340 'NIL NIL)
(PROCLAIM '(NOTINLINE CLEAR-SOURCE-REGISTRY))
(SYSTEM:FSET 'CLEAR-SOURCE-REGISTRY (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
639) 178423 'NIL "Undoes any initialization of the source registry.
You might want to call that before you dump an image that would be resumed
with a different configuration, so the configuration would be re-read then.")
(DEFPARAMETER *WILD-ASD* (MAKE-PATHNAME :DIRECTORY NIL :NAME *WILD* :TYPE "asd" :VERSION 
:NEWEST))
(PROCLAIM '(NOTINLINE FILTER-LOGICAL-DIRECTORY-RESULTS))
(SYSTEM:FSET 'FILTER-LOGICAL-DIRECTORY-RESULTS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
640) 178807 '(DIRECTORY ENTRIES MERGER) NIL)
(PROCLAIM '(NOTINLINE DIRECTORY-FILES))
(SYSTEM:FSET 'DIRECTORY-FILES (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 645) 
179819 '(DIRECTORY &OPTIONAL (PATTERN *WILD-FILE*)) NIL)
(PROCLAIM '(NOTINLINE DIRECTORY-ASD-FILES))
(SYSTEM:FSET 'DIRECTORY-ASD-FILES (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
649) 180995 '(DIRECTORY) NIL)
(PROCLAIM '(NOTINLINE SUBDIRECTORIES))
(SYSTEM:FSET 'SUBDIRECTORIES (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 650) 
181078 '(DIRECTORY) NIL)
(PROCLAIM '(NOTINLINE COLLECT-ASDS-IN-DIRECTORY))
(SYSTEM:FSET 'COLLECT-ASDS-IN-DIRECTORY (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
652) 183067 '(DIRECTORY COLLECT) NIL)
(PROCLAIM '(NOTINLINE COLLECT-SUB*DIRECTORIES))
(SYSTEM:FSET 'COLLECT-SUB*DIRECTORIES (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
653) 183174 '(DIRECTORY COLLECTP RECURSEP COLLECTOR) NIL)
(PROCLAIM '(NOTINLINE COLLECT-SUB*DIRECTORIES-ASD-FILES))
(SYSTEM:FSET 'COLLECT-SUB*DIRECTORIES-ASD-FILES (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
654) 183471 '(DIRECTORY &KEY (EXCLUDE *DEFAULT-SOURCE-REGISTRY-EXCLUSIONS*) COLLECT) 
NIL)
(PROCLAIM '(NOTINLINE VALIDATE-SOURCE-REGISTRY-DIRECTIVE))
(SYSTEM:FSET 'VALIDATE-SOURCE-REGISTRY-DIRECTIVE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
657) 183801 '(DIRECTIVE) NIL)
(PROCLAIM '(NOTINLINE VALIDATE-SOURCE-REGISTRY-FORM))
(SYSTEM:FSET 'VALIDATE-SOURCE-REGISTRY-FORM (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
658) 184307 '(FORM &KEY LOCATION) NIL)
(PROCLAIM '(NOTINLINE VALIDATE-SOURCE-REGISTRY-FILE))
(SYSTEM:FSET 'VALIDATE-SOURCE-REGISTRY-FILE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
659) 184531 '(FILE) NIL)
(PROCLAIM '(NOTINLINE VALIDATE-SOURCE-REGISTRY-DIRECTORY))
(SYSTEM:FSET 'VALIDATE-SOURCE-REGISTRY-DIRECTORY (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
660) 184682 '(DIRECTORY) NIL)
(PROCLAIM '(NOTINLINE PARSE-SOURCE-REGISTRY-STRING))
(SYSTEM:FSET 'PARSE-SOURCE-REGISTRY-STRING (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
661) 184893 '(STRING &KEY LOCATION) NIL)
(PROCLAIM '(NOTINLINE REGISTER-ASD-DIRECTORY))
(SYSTEM:FSET 'REGISTER-ASD-DIRECTORY (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
663) 186587 '(DIRECTORY &KEY RECURSE EXCLUDE COLLECT) NIL)
(DEFPARAMETER *DEFAULT-SOURCE-REGISTRIES* '(ENVIRONMENT-SOURCE-REGISTRY USER-SOURCE-REGISTRY 
USER-SOURCE-REGISTRY-DIRECTORY SYSTEM-SOURCE-REGISTRY SYSTEM-SOURCE-REGISTRY-DIRECTORY 
DEFAULT-SOURCE-REGISTRY))
(DEFPARAMETER *SOURCE-REGISTRY-FILE* (COERCE-PATHNAME "source-registry.conf"))
(DEFPARAMETER *SOURCE-REGISTRY-DIRECTORY* (COERCE-PATHNAME "source-registry.conf.d/"))
(PROCLAIM '(NOTINLINE WRAPPING-SOURCE-REGISTRY))
(SYSTEM:FSET 'WRAPPING-SOURCE-REGISTRY (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
664) 187223 'NIL NIL)
(PROCLAIM '(NOTINLINE DEFAULT-SOURCE-REGISTRY))
(SYSTEM:FSET 'DEFAULT-SOURCE-REGISTRY (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
665) 187575 'NIL NIL)
(PROCLAIM '(NOTINLINE USER-SOURCE-REGISTRY))
(SYSTEM:FSET 'USER-SOURCE-REGISTRY (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
666) 188345 '(&KEY (DIRECTION :INPUT)) NIL)
(PROCLAIM '(NOTINLINE SYSTEM-SOURCE-REGISTRY))
(SYSTEM:FSET 'SYSTEM-SOURCE-REGISTRY (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
667) 188481 '(&KEY (DIRECTION :INPUT)) NIL)
(PROCLAIM '(NOTINLINE USER-SOURCE-REGISTRY-DIRECTORY))
(SYSTEM:FSET 'USER-SOURCE-REGISTRY-DIRECTORY (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
668) 188621 '(&KEY (DIRECTION :INPUT)) NIL)
(PROCLAIM '(NOTINLINE SYSTEM-SOURCE-REGISTRY-DIRECTORY))
(SYSTEM:FSET 'SYSTEM-SOURCE-REGISTRY-DIRECTORY (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
669) 188772 '(&KEY (DIRECTION :INPUT)) NIL)
(PROCLAIM '(NOTINLINE ENVIRONMENT-SOURCE-REGISTRY))
(SYSTEM:FSET 'ENVIRONMENT-SOURCE-REGISTRY (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
670) 188927 'NIL NIL)
(PROCLAIM '(NOTINLINE PROCESS-SOURCE-REGISTRY))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 671))
(PROCLAIM '(FTYPE (FUNCTION (T &KEY (:REGISTER (OR SYMBOL FUNCTION))) T) INHERIT-SOURCE-REGISTRY))
(PROCLAIM '(FTYPE (FUNCTION (T &KEY (:REGISTER (OR SYMBOL FUNCTION)) (:INHERIT LIST)) 
T) PROCESS-SOURCE-REGISTRY-DIRECTIVE))
(MOP::ENSURE-METHOD 'PROCESS-SOURCE-REGISTRY :LAMBDA-LIST '(X &KEY INHERIT REGISTER) 
:QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'SYMBOL)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 672))
(MOP::ENSURE-METHOD 'PROCESS-SOURCE-REGISTRY :LAMBDA-LIST '(PATHNAME &KEY INHERIT 
REGISTER) :QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'PATHNAME)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 674))
(MOP::ENSURE-METHOD 'PROCESS-SOURCE-REGISTRY :LAMBDA-LIST '(STRING &KEY INHERIT REGISTER) 
:QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'STRING)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 676))
(MOP::ENSURE-METHOD 'PROCESS-SOURCE-REGISTRY :LAMBDA-LIST '(X &KEY INHERIT REGISTER) 
:QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'NULL)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 678))
(MOP::ENSURE-METHOD 'PROCESS-SOURCE-REGISTRY :LAMBDA-LIST '(FORM &KEY INHERIT REGISTER) 
:QUALIFIERS 'NIL :SPECIALIZERS (MOP::CANONICALIZE-SPECIALIZERS (LIST 'CONS)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 680))
(PROCLAIM '(NOTINLINE INHERIT-SOURCE-REGISTRY))
(SYSTEM:FSET 'INHERIT-SOURCE-REGISTRY (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
682) 190764 '(INHERIT &KEY REGISTER) NIL)
(PROCLAIM '(NOTINLINE PROCESS-SOURCE-REGISTRY-DIRECTIVE))
(SYSTEM:FSET 'PROCESS-SOURCE-REGISTRY-DIRECTIVE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
683) 190928 '(DIRECTIVE &KEY INHERIT REGISTER) NIL)
(PROCLAIM '(NOTINLINE FLATTEN-SOURCE-REGISTRY))
(SYSTEM:FSET 'FLATTEN-SOURCE-REGISTRY (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
684) 192055 '(&OPTIONAL PARAMETER) NIL)
(PROCLAIM '(NOTINLINE COMPUTE-SOURCE-REGISTRY))
(SYSTEM:FSET 'COMPUTE-SOURCE-REGISTRY (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
687) 192531 '(&OPTIONAL PARAMETER (REGISTRY *SOURCE-REGISTRY*)) NIL)
(DEFVAR *SOURCE-REGISTRY-PARAMETER* NIL)
(PROCLAIM '(NOTINLINE INITIALIZE-SOURCE-REGISTRY))
(SYSTEM:FSET 'INITIALIZE-SOURCE-REGISTRY (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
689) 194194 '(&OPTIONAL (PARAMETER *SOURCE-REGISTRY-PARAMETER*)) NIL)
(PROCLAIM '(NOTINLINE ENSURE-SOURCE-REGISTRY))
(SYSTEM:FSET 'ENSURE-SOURCE-REGISTRY (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
690) 194426 '(&OPTIONAL PARAMETER) NIL)
(PROCLAIM '(NOTINLINE SYSDEF-SOURCE-REGISTRY-SEARCH))
(SYSTEM:FSET 'SYSDEF-SOURCE-REGISTRY-SEARCH (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
691) 195115 '(SYSTEM) NIL)
(PROCLAIM '(NOTINLINE CLEAR-CONFIGURATION))
(SYSTEM:FSET 'CLEAR-CONFIGURATION (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
692) 195251 'NIL NIL)
(PROCLAIM '(NOTINLINE MODULE-PROVIDE-ASDF))
(SYSTEM:FSET 'MODULE-PROVIDE-ASDF (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
693) 195340 '(NAME) NIL)
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 696))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 697))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 698))
(SETQ *FEATURES* (ADJOIN :ASDF *FEATURES*))
(SETQ *FEATURES* (ADJOIN :ASDF2 *FEATURES*))
(PROVIDE :ASDF)
